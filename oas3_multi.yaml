openapi: 3.0.0
info:
  version: 1.0.0
  title: Makini API Docs
  description: Makini API Docs
  license:
    name: ''
    url: ''
servers:
  - url: https://www.makini.io
paths:
  /api/eam/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Organization'
  /api/eam/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Site'
  /api/eam/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
  /api/eam/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Storeroom'
  /api/eam/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
  /api/eam/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Team'
  /api/eam/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Labor'
  /api/eam/users:
    get:
      description: |+
        User account in the system
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
  /api/eam/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UnitOfMeasure'
  /api/eam/companies:
    get:
      description: |+
        Contact information for a third-party entity.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
  /api/eam/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vendor'
  /api/eam/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
  /api/eam/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock'
  /api/eam/purchase-orders/{key}/status:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/eam/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '00000823436747'
                vendorKey: '07000217444098'
                code: '61023420'
                orderNo: string
                orderDate: '1970-10-06T09:11:19Z'
                statusKey: '03000940384327'
                title: Ipsam voluptatibus et aut quibusdam rem.
                description: Illo maiores voluptatem totam voluptas.
                dueAt: '2023-08-22T17:01:27Z'
                approvedAt: '1985-12-06T10:22:42Z'
                completedAt: '1981-04-30T16:35:43Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '04000632416010'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1978-09-17T15:12:22Z'
                updatedAt: '1973-06-05T06:44:23Z'
  /api/eam/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '07000820899078'
                vendorKey: '08000349879801'
                code: '73944454'
                orderNo: string
                orderDate: '1979-05-03T08:59:45Z'
                statusKey: '02000979403905'
                title: Reprehenderit corporis assumenda iste quos porro.
                description: Saepe voluptas saepe amet dolorem sed qui.
                dueAt: '2019-07-03T20:52:56Z'
                approvedAt: '1998-12-23T16:13:39Z'
                completedAt: '2020-06-08T04:09:58Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '06000349189567'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1973-12-09T13:36:41Z'
                updatedAt: '2024-03-25T06:08:39Z'
  /api/eam/purchase-orders.line-items:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LineItem'
  /api/eam/materials/{key}/inventory:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '32538786'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '06000392732237'
  /api/eam/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/materials:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Parts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Part'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a Part
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '07000815015782'
                code: '42441229'
                isAssembly: 'true'
                partNumber: string
                name: string
                description: Ea dolores cumque sed debitis.
                notes: string
                criticality: string
                isActive: 'true'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/eam/materials/{key}:
    get:
      description: ''
      summary: Get a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '02000884084568'
                code: '76620690'
                isAssembly: 'true'
                partNumber: string
                name: string
                description: Nihil rerum alias voluptates necessitatibus iste.
                notes: string
                criticality: string
                isActive: 'false'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/eam/assets/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/assets:
    get:
      description: >+
        A physical entity in the facility's hierarchy structure. It can be
        either equipment available for maintenance or system of assets in site
        hierarchy.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Assets
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/assets/{key}:
    get:
      description: >
        A physical entity in the facility's hierarchy structure. It can be
        either equipment available for maintenance or system of assets in site
        hierarchy.
      summary: Get an Asset
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update an Asset
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                parentKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                modelKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                modelName:
                  type: string
                  nullable: true
                  format: string
                serialNumber:
                  type: string
                  nullable: true
                  format: string
                activatedAt:
                  type: string
                  nullable: true
                  format: string
                deactivatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '01000953842972'
                parentKey: '06000151217828'
                vendorKey: '06000073791819'
                modelKey: '00000687263600'
                teamKey: '07000968845744'
                locationKey: '04000472074593'
                accountKey: '03000677293325'
                name: string
                description: Ducimus voluptatibus tempora sequi dolore.
                notes: string
                categoryName: string
                criticality: string
                isActive: 'true'
                manufacturerName: string
                modelName: string
                serialNumber: string
                activatedAt: '1994-05-17T06:50:52Z'
                deactivatedAt: '1976-11-26T05:25:00Z'
  /api/eam/assets-downtime:
    get:
      description: |+
        Information on planned or unplanned downtime periods for assets.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List AssetDowntimes
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetDowntime'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/assets-downtime/{key}:
    get:
      description: |
        Information on planned or unplanned downtime periods for assets.
      summary: Get an AssetDowntime
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AssetDowntime'
  /api/eam/asset-templates/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/asset-templates:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Models
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Model'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/asset-templates/{key}:
    get:
      description: ''
      summary: Get a Model
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Model'
  /api/eam/meters:
    get:
      description: >+
        Is a tool for tracking the number of specific events or operations, used
        for analyzing performance and other parameters, as well as scheduling
        condition-based maintenance
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Counters
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Counter'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/meters/{key}:
    get:
      description: >
        Is a tool for tracking the number of specific events or operations, used
        for analyzing performance and other parameters, as well as scheduling
        condition-based maintenance
      summary: Get a Counter
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Counter'
  /api/eam/meter-readings:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List CounterReadings
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CounterReading'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/meter-readings/{key}:
    get:
      description: ''
      summary: Get a CounterReading
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CounterReading'
  /api/eam/pm/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/pm:
    get:
      description: >+
        Templates for time-based or counter-based maintenance, used as a basis
        for creating new work orders
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List PreventiveMaintenances
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreventiveMaintenance'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/pm/{key}:
    get:
      description: >
        Templates for time-based or counter-based maintenance, used as a basis
        for creating new work orders
      summary: Get a PreventiveMaintenance
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PreventiveMaintenance'
  /api/eam/work-orders/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/work-orders/{key}/status:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a WorkOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WorkOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/eam/work-orders:
    get:
      description: >+
        A work order is a document for organizing the execution of work or
        service, describing the task, location, resources, and deadlines
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List WorkOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a WorkOrder
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WorkOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                  format: string
                statusKey:
                  type: string
                  nullable: true
                  format: string
                scheduledAt:
                  type: string
                  nullable: true
                  format: string
                siteKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                storeroomKey:
                  type: string
                  nullable: true
                  format: string
                assetKey:
                  type: string
                  nullable: true
                  format: string
                assetDowntimeKey:
                  type: string
                  nullable: true
                  format: string
                serviceRequestKey:
                  type: string
                  nullable: true
                  format: string
                pmKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                laborAssignedKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                userApprovedKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                instructions:
                  type: string
                  nullable: true
                  format: string
                severity:
                  type: string
                  nullable: true
                  format: string
                estimatedTime:
                  type: integer
                  nullable: true
                  format: integer
                actualTime:
                  type: integer
                  nullable: true
                  format: integer
                roleName:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                notes:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                completionRemarks:
                  type: string
                  nullable: true
                  format: string
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
                deletedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                title: In ipsa non consequatur omnis qui.
                statusKey: '03000746259285'
                scheduledAt: '1971-11-13T22:52:51Z'
                siteKey: '01000045029921'
                locationKey: '03000893612579'
                storeroomKey: '02000629774545'
                assetKey: '03000527447237'
                assetDowntimeKey: '02000220085418'
                serviceRequestKey: '06000194255830'
                pmKey: '06000792861928'
                teamKey: '07000316182921'
                laborAssignedKey: '07000833138479'
                accountKey: '03000145152725'
                userApprovedKey: '09000212418496'
                code: '98580057'
                description: Aut veritatis autem odio pariatur.
                instructions: string
                severity: string
                estimatedTime: 10
                actualTime: 10
                roleName: string
                categoryName: string
                documents: '[]'
                notes: string
                approvedAt: '1971-01-01T05:34:13Z'
                dueAt: '2016-08-03T03:15:22Z'
                completedAt: '2018-04-29T15:32:26Z'
                completionRemarks: string
                createdAt: '2008-02-18T13:32:09Z'
                updatedAt: '1972-12-02T16:25:28Z'
                deletedAt: '1992-12-10T17:27:08Z'
  /api/eam/work-orders/{key}:
    get:
      description: >
        A work order is a document for organizing the execution of work or
        service, describing the task, location, resources, and deadlines
      summary: Get a WorkOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WorkOrder'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a WorkOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WorkOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                  format: string
                statusKey:
                  type: string
                  nullable: true
                  format: string
                scheduledAt:
                  type: string
                  nullable: true
                  format: string
                siteKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                storeroomKey:
                  type: string
                  nullable: true
                  format: string
                assetKey:
                  type: string
                  nullable: true
                  format: string
                assetDowntimeKey:
                  type: string
                  nullable: true
                  format: string
                serviceRequestKey:
                  type: string
                  nullable: true
                  format: string
                pmKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                laborAssignedKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                userApprovedKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                instructions:
                  type: string
                  nullable: true
                  format: string
                severity:
                  type: string
                  nullable: true
                  format: string
                estimatedTime:
                  type: integer
                  nullable: true
                  format: integer
                actualTime:
                  type: integer
                  nullable: true
                  format: integer
                roleName:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                notes:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                completionRemarks:
                  type: string
                  nullable: true
                  format: string
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
                deletedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                title: Est ullam et dolor ea.
                statusKey: '06000312063748'
                scheduledAt: '1982-03-11T03:59:56Z'
                siteKey: '07000304182599'
                locationKey: '01000597090108'
                storeroomKey: '00000269210009'
                assetKey: '07000712055866'
                assetDowntimeKey: '08000340873403'
                serviceRequestKey: '07000601915454'
                pmKey: '06000706177730'
                teamKey: '07000419594623'
                laborAssignedKey: '00000562899963'
                accountKey: '00000478337808'
                userApprovedKey: '08000218470878'
                code: '07303784'
                description: Saepe nostrum sapiente aut eveniet excepturi qui.
                instructions: string
                severity: string
                estimatedTime: 10
                actualTime: 10
                roleName: string
                categoryName: string
                documents: '[]'
                notes: string
                approvedAt: '1992-08-16T03:30:04Z'
                dueAt: '1990-09-11T12:02:54Z'
                completedAt: '1999-06-17T04:16:16Z'
                completionRemarks: string
                createdAt: '1993-02-25T00:38:39Z'
                updatedAt: '1989-11-20T21:45:18Z'
                deletedAt: '1995-01-29T06:15:36Z'
  /api/eam/service-requests:
    get:
      description: >+
        Internal or external request for services or support, aimed at
        maintaining operational activities made by employees or customer and
        partners
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List ServiceRequests
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceRequest'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a ServiceRequest
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ServiceRequest'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                userRequestedKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                assetKey:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
              example:
                userRequestedKey: '07000231063073'
                title: Totam perferendis mollitia voluptas.
                assetKey: '06000579067503'
                description: Et sequi nihil commodi autem.
  /api/eam/service-requests/{key}:
    get:
      description: >
        Internal or external request for services or support, aimed at
        maintaining operational activities made by employees or customer and
        partners
      summary: Get a ServiceRequest
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ServiceRequest'
  /api/eam/documents:
    get:
      description: >+
        Refers to any file containing details on maintenance, operation, and
        asset management, including manuals, records, and reports.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Documents
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a Document
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document'
      requestBody:
        description: Request body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  nullable: false
                  format: binary
                name:
                  type: string
                  nullable: false
                  format: string
              example:
                file: string
                name: string
  /api/eam/documents/{key}:
    get:
      description: >
        Refers to any file containing details on maintenance, operation, and
        asset management, including manuals, records, and reports.
      summary: Get a Document
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document'
  /api/eam/inventories:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '66652540'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '02000716145205'
  /api/eam/statuses/work-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Work-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Purchase-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/statuses/service-requests:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Service-request
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Site'
  /api/erp/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Organization'
  /api/erp/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
  /api/erp/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Storeroom'
  /api/erp/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
  /api/erp/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Team'
  /api/erp/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Labor'
  /api/erp/users:
    get:
      description: |+
        User account in the system
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
  /api/erp/taxes:
    get:
      description: |+
        Tax applicable on sales orders and purchase orders
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Taxes
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/taxes/{key}:
    get:
      description: |
        Tax applicable on sales orders and purchase orders
      summary: Get a Tax
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax'
  /api/erp/currencies:
    get:
      description: >+
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Currencies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Currency'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/currencies/{key}:
    get:
      description: >
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
      summary: Get a Currency
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
  /api/erp/exchange-rates:
    get:
      description: >+
        An exchange rate refers to the value assigned to convert one currency
        into another for the purpose of financial transactions, accounting, and
        reporting within the system.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List ExchangeRates
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExchangeRate'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/exchange-rates/{key}:
    get:
      description: >
        An exchange rate refers to the value assigned to convert one currency
        into another for the purpose of financial transactions, accounting, and
        reporting within the system.
      summary: Get an ExchangeRate
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExchangeRate'
  /api/erp/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UnitOfMeasure'
  /api/erp/companies:
    get:
      description: |+
        Contact information for a third-party entity.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
  /api/erp/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vendor'
  /api/erp/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
  /api/erp/products:
    get:
      description: >+
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Products
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/products/{key}:
    get:
      description: >
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
      summary: Get a Product
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
  /api/erp/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock'
  /api/erp/sales-orders:
    get:
      description: >+
        A sales order is a document where customers specify what they want to
        buy
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List SalesOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SalesOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/sales-orders/{key}:
    get:
      description: >
        A sales order is a document where customers specify what they want to
        buy
      summary: Get a SalesOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SalesOrder'
  /api/erp/projects:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Projects
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/projects/{key}:
    get:
      description: ''
      summary: Get a Project
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
  /api/erp/invoices:
    get:
      description: >+
        Refers to a document issued by a company to a customer, confirming the
        completion of services rendered or goods delivered and requesting
        payment. It typically includes details of the products or services
        provided, their prices, the total amount due, as well as payment terms
        and methods.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Invoices
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/invoices/{key}:
    get:
      description: >
        Refers to a document issued by a company to a customer, confirming the
        completion of services rendered or goods delivered and requesting
        payment. It typically includes details of the products or services
        provided, their prices, the total amount due, as well as payment terms
        and methods.
      summary: Get an Invoice
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice'
  /api/erp/receipts:
    get:
      description: >+
        A 'receipt' is a document confirming payment received from a customer
        for goods or services.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Receipts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Receipt'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/receipts/{key}:
    get:
      description: >
        A 'receipt' is a document confirming payment received from a customer
        for goods or services.
      summary: Get a Receipt
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
  /api/erp/purchase-orders/{key}/status:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/erp/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '07000496789868'
                vendorKey: '03000112995576'
                code: '30908475'
                orderNo: string
                orderDate: '2001-04-05T05:12:53Z'
                statusKey: '09000690695058'
                title: Dolores eum sint qui nemo ad qui.
                description: Id voluptatem neque quibusdam voluptate non et.
                dueAt: '1970-11-18T10:45:59Z'
                approvedAt: '1996-11-10T09:53:45Z'
                completedAt: '1973-05-03T16:17:59Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '03000161452090'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '2003-06-16T23:58:25Z'
                updatedAt: '1982-02-10T09:24:40Z'
  /api/erp/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '06000153397357'
                vendorKey: '08000395146883'
                code: '08303516'
                orderNo: string
                orderDate: '1981-03-17T03:11:46Z'
                statusKey: '08000970586264'
                title: Dolor iste molestiae at velit nihil reiciendis.
                description: Harum harum culpa sunt.
                dueAt: '2011-10-13T01:09:23Z'
                approvedAt: '2021-07-20T03:50:19Z'
                completedAt: '1971-12-14T23:33:40Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '08000838468429'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1994-08-27T00:21:11Z'
                updatedAt: '2010-08-16T12:20:52Z'
  /api/erp/purchase-orders.line-items:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LineItem'
  /api/erp/bom:
    get:
      description: >+
        A Bill of Materials is a detailed list of materials, instructions, or
        components needed to make a product. It's organized hierarchically, with
        the finished product at the top level, and includes quantities for
        production orders.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List BillOfMaterials
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillOfMaterial'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/bom/{key}:
    get:
      description: >
        A Bill of Materials is a detailed list of materials, instructions, or
        components needed to make a product. It's organized hierarchically, with
        the finished product at the top level, and includes quantities for
        production orders.
      summary: Get a BillOfMaterial
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillOfMaterial'
  /api/erp/production-orders/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/production-orders:
    get:
      description: >+
        An order to produce a specific quantity of products within a pre-defined
        time. It contains all the information required for the actual execution
        of the production process.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List ProductionOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductionOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/production-orders/{key}:
    get:
      description: >
        An order to produce a specific quantity of products within a pre-defined
        time. It contains all the information required for the actual execution
        of the production process.
      summary: Get a ProductionOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductionOrder'
  /api/erp/receiving:
    get:
      description: >+
        "Receiving" is the process of accepting inbound products from external
        entities such as vendors or stores/distribution centers into the
        warehouse facility.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Receivings
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Receiving'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/receiving/{key}:
    get:
      description: >
        "Receiving" is the process of accepting inbound products from external
        entities such as vendors or stores/distribution centers into the
        warehouse facility.
      summary: Get a Receiving
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receiving'
  /api/erp/rfq:
    get:
      description: >+
        A Request for Quotation is a document that an organization sends to one
        or more suppliers asking a quotation for items.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List RequestForQuotations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequestForQuotation'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/rfq/{key}:
    get:
      description: >
        A Request for Quotation is a document that an organization sends to one
        or more suppliers asking a quotation for items.
      summary: Get a RequestForQuotation
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RequestForQuotation'
  /api/erp/purchase-requisitions:
    get:
      description: >+
        A Purchase Requisition is an internal request for goods or services
        within a company, undergoing approval before being used to generate a
        purchase order for vendors.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List PurchaseRequisitions
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseRequisition'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/purchase-requisitions/{key}:
    get:
      description: >
        A Purchase Requisition is an internal request for goods or services
        within a company, undergoing approval before being used to generate a
        purchase order for vendors.
      summary: Get a PurchaseRequisition
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseRequisition'
  /api/erp/materials/{key}/inventory:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '40386263'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '02000421892125'
  /api/erp/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/materials:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Parts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Part'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a Part
      parameters: []
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '08000138524094'
                code: '92011816'
                isAssembly: 'false'
                partNumber: string
                name: string
                description: Eos voluptate neque nisi porro nam nam.
                notes: string
                criticality: string
                isActive: 'false'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/erp/materials/{key}:
    get:
      description: ''
      summary: Get a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '06000437384975'
                code: '60541543'
                isAssembly: 'true'
                partNumber: string
                name: string
                description: Eos eum blanditiis rem voluptas vero debitis.
                notes: string
                criticality: string
                isActive: 'false'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/erp/inventories:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '83728181'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '00000421494289'
  /api/erp/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Purchase-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/purchase-requisitions:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Purchase-requisition
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/sales-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Sales-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/projects:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Project
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/invoices:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Invoice
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/production-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Production-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/rfq:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Rfq
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/statuses/receiving:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Receiving
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Organization'
  /api/wms/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Site'
  /api/wms/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
  /api/wms/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Storeroom'
  /api/wms/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
  /api/wms/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Team'
  /api/wms/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Labor'
  /api/wms/users:
    get:
      description: |+
        User account in the system
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
  /api/wms/currencies:
    get:
      description: >+
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Currencies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Currency'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/currencies/{key}:
    get:
      description: >
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
      summary: Get a Currency
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
  /api/wms/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UnitOfMeasure'
  /api/wms/companies:
    get:
      description: |+
        Contact information for a third-party entity.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
  /api/wms/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vendor'
  /api/wms/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
  /api/wms/groups:
    get:
      description: >+
        A Product Group categorizes similar items or products together for
        streamlined inventory management and analysis.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List ProductGroups
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductGroup'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/groups/{key}:
    get:
      description: >
        A Product Group categorizes similar items or products together for
        streamlined inventory management and analysis.
      summary: Get a ProductGroup
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductGroup'
  /api/wms/products:
    get:
      description: >+
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Products
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/products/{key}:
    get:
      description: >
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
      summary: Get a Product
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
  /api/wms/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock'
  /api/wms/sales-orders:
    get:
      description: >+
        A sales order is a document where customers specify what they want to
        buy
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List SalesOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SalesOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/sales-orders/{key}:
    get:
      description: >
        A sales order is a document where customers specify what they want to
        buy
      summary: Get a SalesOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SalesOrder'
  /api/wms/purchase-orders/{key}/status:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/wms/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '05000398801026'
                vendorKey: '01000927308645'
                code: '49542646'
                orderNo: string
                orderDate: '1987-02-23T03:04:03Z'
                statusKey: '06000337481709'
                title: Voluptas pariatur non et aut magnam.
                description: Assumenda aut eum quia accusantium sit aut nemo.
                dueAt: '2017-11-13T13:28:26Z'
                approvedAt: '1997-10-22T00:53:05Z'
                completedAt: '1983-12-27T07:51:55Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '00000852566027'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '2023-10-05T00:17:53Z'
                updatedAt: '1972-06-07T10:08:04Z'
  /api/wms/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '08000552785227'
                vendorKey: '03000902606934'
                code: '46702722'
                orderNo: string
                orderDate: '2018-11-17T21:31:48Z'
                statusKey: '07000044175934'
                title: Rerum sed ut suscipit sapiente.
                description: Praesentium delectus impedit occaecati nam.
                dueAt: '2012-12-19T04:01:26Z'
                approvedAt: '2015-02-15T07:16:19Z'
                completedAt: '1988-05-23T08:00:47Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '01000832378500'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1973-07-17T00:46:29Z'
                updatedAt: '1991-12-18T09:31:33Z'
  /api/wms/purchase-orders.line-items:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LineItem'
  /api/wms/materials/{key}/inventory:
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '35793861'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '09000222513725'
  /api/wms/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/materials:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Parts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Part'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Create a Part
      parameters: []
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '05000598423244'
                code: '64532646'
                isAssembly: 'true'
                partNumber: string
                name: string
                description: Numquam reprehenderit qui culpa.
                notes: string
                criticality: string
                isActive: 'false'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/wms/materials/{key}:
    get:
      description: ''
      summary: Get a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update a Part
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Part'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '03000952784215'
                code: '55016209'
                isAssembly: 'true'
                partNumber: string
                name: string
                description: Dignissimos porro ab velit pariatur ut.
                notes: string
                criticality: string
                isActive: 'false'
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/wms/stock-transfers:
    get:
      description: >+
        "Stock Transfer" is a record of the movement of goods between warehouse
        locations, containing location and warehouse keys, status, code, date,
        line item information, and timestamps.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List StockTransfers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StockTransfer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stock-transfers/{key}:
    get:
      description: >
        "Stock Transfer" is a record of the movement of goods between warehouse
        locations, containing location and warehouse keys, status, code, date,
        line item information, and timestamps.
      summary: Get a StockTransfer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StockTransfer'
  /api/wms/stock-adjustments:
    get:
      description: >+
        Is a record of inventory changes within a location or storeroom,
        detailing the user, date, reason, line items, adjustment number, total
        quantity adjusted, type, and timestamps.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List StockAdjustments
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StockAdjustment'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stock-adjustments/{key}:
    get:
      description: >
        Is a record of inventory changes within a location or storeroom,
        detailing the user, date, reason, line items, adjustment number, total
        quantity adjusted, type, and timestamps.
      summary: Get a StockAdjustment
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StockAdjustment'
  /api/wms/shipment-orders:
    get:
      description: >+
        A shipment order is a document used by organizations to specify what
        items are being transferred from a storage location to a person at a new
        destination. It accompanies the shipment so the recipient can confirm
        they received the correct items.
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List ShipmentOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShipmentOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/shipment-orders/{key}:
    get:
      description: >
        A shipment order is a document used by organizations to specify what
        items are being transferred from a storage location to a person at a new
        destination. It accompanies the shipment so the recipient can confirm
        they received the correct items.
      summary: Get a ShipmentOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ShipmentOrder'
  /api/wms/shipment-orders/{key}/delivered:
    post:
      description: ''
      summary: Create a ShipmentOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ShipmentOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties: []
  /api/wms/inventories:
    get:
      description: |2+
         <details>
           <summary>Filtering</summary>

             * filter[name]=HelloFromMakiniAPI
             * filter[name:contains]=Makini
             * filter[name:startsWith]=Hello
             * filter[name:startsWith]=API
             * filter[createdAt:gt]=2023-11-07
             * filter[createdAt:gteq]=2023-11-07
             * filter[createdAt:lt]=2023-11-07
             * filter[createdAt:lted]=2023-11-07

         </details>
         <details>
           <summary>Filter matching</summary>

             * filterMatch=any // OR
             * filterMatch=all // AND

         </details>
         <details>
           <summary>Sorting</summary>

             * sort[createdAt]=1 // DESC
             * sort[createdAt]=0 // ASC

         </details>

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
    put:
      description: |

        [Detail validations](docs/platform-validation.md)
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '25586091'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '00000034246624'
  /api/wms/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Purchase-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/statuses/sales-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Sales-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/statuses/stock-transfers:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Stock-transfer
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/statuses/shipment-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: List Statuses of Shipment-order
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/integrations/current:
    get:
      description: |2
         Get current integration data.
         `sync_status` is status of our synchronization.
           * inprogress
           * done
           * error
           * fail (Authentication error: Invalid platform credentials)
      summary: Get an Integration
      parameters: []
      tags:
        - System
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Integration'
    delete:
      description: ''
      summary: Delete an Integration
      parameters: []
      tags:
        - System
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Address:
      title: Address
      properties:
        countryName:
          type: string
          description: Description
          nullable: false
          format: string
        addressLines:
          type: string
          description: Description
          nullable: false
          format: string
        city:
          type: string
          description: Description
          nullable: false
          format: string
        postCode:
          type: string
          description: Description
          nullable: false
          format: string
        phone:
          type: string
          description: Description
          nullable: false
          format: string
        email:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        countryName: string
        addressLines: string
        city: string
        postCode: string
        phone: string
        email: string
        notes: string
        createdAt: '1990-12-11T17:30:57Z'
        updatedAt: '1985-12-25T14:49:09Z'
    Contact:
      title: Contact
      properties:
        name:
          type: string
          description: Description
          nullable: false
          format: string
        position:
          type: string
          description: Description
          nullable: false
          format: string
        phones:
          type: string
          description: Description
          nullable: false
          format: string
        emails:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        isDefault:
          type: boolean
          description: Description
          nullable: false
          format: boolean
      example:
        name: string
        position: string
        phones: string
        emails: string
        isActive: 'true'
        isDefault: 'true'
    Organization:
      title: Organization
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        billingAddress:
          type: object
          $ref: '#/components/schemas/Address'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000974635790'
        currencyKey: '05000875415110'
        name: string
        code: '88292045'
        description: Excepturi praesentium at eos incidunt.
        addresses:
          - countryName: string
            addressLines: string
            city: string
            postCode: string
            phone: string
            email: string
            notes: string
            createdAt: '2001-07-05T03:21:55Z'
            updatedAt: '2010-10-09T08:06:45Z'
        billingAddress:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '2004-04-21T21:39:37Z'
          updatedAt: '2011-05-24T18:30:07Z'
        contacts:
          - name: string
            position: string
            phones: string
            emails: string
            isActive: 'false'
            isDefault: 'true'
        createdAt: '1975-04-22T11:08:42Z'
        updatedAt: '2012-04-19T03:29:24Z'
        deletedAt: '1983-04-07T23:10:26Z'
    Site:
      title: Site
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        contact:
          type: object
          $ref: '#/components/schemas/Contact'
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        lat:
          type: string
          description: Description
          nullable: false
          format: string
        lng:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: object
          $ref: '#/components/schemas/Address'
        billingAddress:
          type: object
          $ref: '#/components/schemas/Address'
        properties:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000369736914'
        organizationKey: '09000611428147'
        name: string
        code: '98851249'
        description: Ut molestiae qui distinctio quibusdam.
        contact:
          name: string
          position: string
          phones: string
          emails: string
          isActive: 'true'
          isDefault: 'false'
        customerKey: '09000617071058'
        lat: string
        lng: string
        address:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '1982-05-12T02:54:24Z'
          updatedAt: '2022-07-29T00:15:08Z'
        billingAddress:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '1981-01-15T14:39:25Z'
          updatedAt: '1986-09-28T05:19:08Z'
        properties: string
        notes: string
        createdAt: '1976-02-26T18:00:36Z'
        updatedAt: '2019-03-12T00:17:54Z'
        deletedAt: '1980-04-01T15:22:18Z'
    Location:
      title: Location
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        userManagerKey:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: object
          $ref: '#/components/schemas/Address'
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        contact:
          type: string
          description: Description
          nullable: false
          format: string
        isDefault:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000139101133'
        siteKey: '02000056314088'
        parentKey: '02000315140727'
        name: string
        userManagerKey: '07000061685120'
        description: Earum asperiores qui quis voluptatem.
        code: '87801200'
        type: string
        address:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '2000-01-22T01:49:30Z'
          updatedAt: '1981-11-04T02:13:00Z'
        isActive: 'false'
        contact: string
        isDefault: 'false'
        createdAt: '1984-08-01T06:37:05Z'
        updatedAt: '1976-05-22T04:35:02Z'
        deletedAt: '1977-08-30T21:04:13Z'
    Storeroom:
      title: Storeroom
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        userManagerKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        priority:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000671646403'
        parentKey: '02000118195666'
        siteKey: '04000206118010'
        locationKey: '08000788295347'
        userManagerKey: '01000992372353'
        code: '51860202'
        name: string
        type: string
        description: In aliquam dolores at et nihil assumenda sit.
        priority: string
        createdAt: '2002-05-22T02:37:40Z'
        updatedAt: '2007-06-15T16:56:45Z'
        deletedAt: '2002-03-12T02:22:22Z'
    Account:
      title: Account
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        activatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        expiresAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000221751289'
        code: '31546898'
        name: string
        description: Dolores officia recusandae atque eos maxime sit.
        activatedAt: '1996-02-23T16:25:40Z'
        expiresAt: '1987-10-09T00:12:53Z'
        createdAt: '1988-06-16T09:47:21Z'
        updatedAt: '2001-05-03T14:56:27Z'
        deletedAt: '1979-04-28T21:03:47Z'
    Team:
      title: Team
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000895643501'
        accountKey: '00000482362613'
        code: '70486612'
        name: string
        description: Et asperiores magni harum vero rerum molestiae.
        createdAt: '2021-08-18T13:06:25Z'
        updatedAt: '2010-05-29T07:38:23Z'
        deletedAt: '1986-11-15T12:17:16Z'
        organizationKey: '00000865427259'
    Labor:
      title: Labor
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKeys:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        locationKeys:
          type: array
          description: Description
          nullable: false
          format: array
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        costUomKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000504347977'
        organizationKeys: string
        siteKeys: '[]'
        locationKeys: '[]'
        accountKey: '00000422872994'
        vendorKey: '08000719812895'
        userKey: '06000377876886'
        teamKey: '08000109425739'
        name: string
        roleName: string
        description: Mollitia corporis aut qui a iure.
        notes: string
        isActive: 'false'
        costUomKey: '06000622568481'
        currencyKey: '02000991093444'
        createdAt: '1989-02-01T09:46:00Z'
        updatedAt: '1983-05-06T21:15:00Z'
        deletedAt: '1997-12-24T23:50:49Z'
    User:
      title: User
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        locationKeys:
          type: array
          description: Description
          nullable: false
          format: array
        name:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000214245888'
        organizationKey: '08000378392706'
        siteKeys: '[]'
        locationKeys: '[]'
        name: string
        roleName: string
        description: Est maxime odit et sit nulla.
        notes: string
        isActive: string
        createdAt: '1987-10-27T23:30:31Z'
        updatedAt: '1971-09-11T04:49:50Z'
        deletedAt: '1984-01-02T10:25:20Z'
    UnitOfMeasure:
      title: UnitOfMeasure
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
      example:
        key: '07000378602895'
        name: string
        code: '94985948'
        isActive: 'true'
    Company:
      title: Company
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        billingAddress:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000419950958'
        parentKey: '05000185683411'
        name: string
        code: '02329239'
        addresses:
          - countryName: string
            addressLines: string
            city: string
            postCode: string
            phone: string
            email: string
            notes: string
            createdAt: '1983-04-13T14:53:31Z'
            updatedAt: '1995-09-13T05:39:28Z'
        billingAddress:
          - countryName: string
            addressLines: string
            city: string
            postCode: string
            phone: string
            email: string
            notes: string
            createdAt: '1996-08-08T08:01:32Z'
            updatedAt: '1980-01-19T07:18:09Z'
        currencyKey: '07000703286495'
        notes: string
        createdAt: '1983-03-21T23:06:52Z'
        updatedAt: '1992-05-21T18:40:51Z'
        deletedAt: '1975-09-20T12:01:02Z'
    Vendor:
      title: Vendor
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        companyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000419324692'
        name: string
        code: '77844316'
        companyKey: '03000805099358'
        createdAt: '2024-05-14T06:17:57Z'
        updatedAt: '2005-03-20T03:03:07Z'
        deletedAt: '2012-01-14T09:44:02Z'
    Customer:
      title: Customer
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        companyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000265767657'
        name: string
        code: '88645513'
        companyKey: '05000186680738'
        createdAt: '2015-07-14T00:13:34Z'
        updatedAt: '1998-09-27T03:27:44Z'
        deletedAt: '2013-09-17T09:39:28Z'
    Stock:
      title: Stock
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        position:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        expiresAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000787181690'
        productKey: '06000053638140'
        materialKey: '05000852941525'
        locationKey: '07000044652105'
        storeroomKey: '08000528888999'
        assetKey: '00000211730652'
        position: string
        uomKey: '03000013266895'
        quantity: string
        expiresAt: '1978-12-27T11:08:37Z'
        createdAt: '1998-01-05T16:36:11Z'
        updatedAt: '2005-06-17T15:50:13Z'
        deletedAt: '1992-11-01T13:04:46Z'
    POLineItem:
      title: POLineItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineNo:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        lineRef:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        receivedQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        discount:
          type: string
          description: Description
          nullable: false
          format: string
        lineTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineTotalValue:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000875749639'
        locationKey: '01000387419798'
        vendorKey: '07000264876781'
        assetKey: '05000139041448'
        materialKey: '07000631607969'
        productKey: '03000490560998'
        statusKey: '00000284392338'
        storeroomKey: '02000058837964'
        lineNo: string
        code: '28661979'
        type: string
        name: string
        description: Modi aperiam deserunt sunt nisi aperiam.
        lineRef: string
        quantity: string
        receivedQuantity: string
        uomKey: '07000841301857'
        currencyKey: '03000963406109'
        price: string
        discount: string
        lineTaxValue: string
        lineTotalValue: string
        notes: string
        deliveryAt: '2011-05-13T22:20:53Z'
        dueAt: '1992-10-16T19:07:08Z'
        updatedAt: '2023-03-27T19:10:10Z'
    PurchaseOrder:
      title: PurchaseOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: object
          description: Description
          nullable: false
          format: object
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        terms:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAddress:
          type: object
          $ref: '#/components/schemas/Address'
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
      example:
        key: '00000974012254'
        siteKey: '03000635656274'
        orderDate: '1978-02-28T07:57:49Z'
        vendorKey: '08000262563606'
        orderNo: string
        statusKey: '05000699444450'
        title: Repellat molestiae et enim explicabo eum debitis.
        description: Distinctio est laborum explicabo aut quidem.
        dueAt: '2011-07-22T11:23:39Z'
        approvedAt: '1999-06-26T14:09:38Z'
        completedAt: '2009-01-26T12:21:21Z'
        shippingMethod: string
        terms: string
        notes: string
        deliveryAddress:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '2005-10-09T05:39:23Z'
          updatedAt: '1970-01-17T10:22:43Z'
        currencyKey: '04000556240250'
        totalNetValue: string
        totalGrossValue: string
        updatedAt: '1989-12-08T19:18:14Z'
        lineItems:
          - key: '00000650277315'
            locationKey: '09000657581363'
            vendorKey: '02000886834012'
            assetKey: '09000671476705'
            materialKey: '07000031169055'
            productKey: '06000891249365'
            statusKey: '05000723015752'
            storeroomKey: '01000972069847'
            lineNo: string
            code: '56845600'
            type: string
            name: string
            description: Incidunt fugit repudiandae dolores quo deserunt.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '07000880431660'
            currencyKey: '02000878544326'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '1982-05-17T20:59:53Z'
            dueAt: '2023-03-06T19:48:14Z'
            updatedAt: '2023-03-14T18:50:53Z'
    PurchaseOrderCollection:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseOrder'
    LineItem:
      title: LineItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        discount:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAt:
          type: string
          description: Description
          nullable: false
          format: string
        lineNo:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        lineRef:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: string
          description: Description
          nullable: false
          format: string
        receivedQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: object
          description: Description
          nullable: false
          format: object
        cost:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineTotalValue:
          type: object
          description: Description
          nullable: false
          format: object
        lineTaxValue:
          type: object
          description: Description
          nullable: false
          format: object
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000924381956'
        locationKey: '03000178230960'
        assetKey: '05000332769368'
        statusKey: '06000496775525'
        materialKey: '02000123277554'
        storeroomKey: '00000910920737'
        vendorKey: '01000287153497'
        productKey: '03000811164330'
        price: string
        discount: string
        deliveryAt: '2001-09-25T06:32:49Z'
        lineNo: string
        code: '83435041'
        name: string
        description: Aliquam laboriosam occaecati porro.
        lineRef: string
        quantity: string
        receivedQuantity: string
        type: string
        uomKey: '01000968538814'
        cost: string
        currencyKey: '09000599214136'
        lineTotalValue: string
        lineTaxValue: string
        notes: string
        dueAt: '2019-02-14T22:59:19Z'
        createdAt: '1983-12-08T19:37:18Z'
        updatedAt: '2015-11-02T16:21:37Z'
    SupplyOption:
      title: SupplyOption
      properties:
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        partNumber:
          type: array
          description: Description
          nullable: false
          format: array
        price:
          type: array
          description: Description
          nullable: false
          format: array
        uomKey:
          type: array
          description: Description
          nullable: false
          format: array
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        vendorKey: '01000264107820'
        partNumber: '[]'
        price: '[]'
        uomKey: '09000271405253'
        currencyKey: '08000277359654'
        createdAt: '1986-05-03T04:58:47Z'
        updatedAt: '2018-12-16T02:22:43Z'
    Inventory:
      title: Inventory
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: integer
          description: Description
          nullable: false
          format: integer
        unitCost:
          type: integer
          description: Description
          nullable: false
          format: integer
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000766082643'
        code: '44432560'
        name: string
        quantity: 10
        unitCost: 10
        locationKey: '03000563571770'
        updatedAt: '1979-01-22T19:45:17Z'
        createdAt: '1997-04-19T19:39:11Z'
    Dimension: []
    Material:
      title: Material
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKeys:
          type: array
          description: Description
          nullable: false
          format: array
        parentKeys:
          type: array
          description: Description
          nullable: false
          format: array
        assetKeys:
          type: array
          description: Description
          nullable: false
          format: array
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isAssembly:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        criticality:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: object
          description: Description
          nullable: false
          format: object
        supplyOptions:
          type: array
          items:
            $ref: '#/components/schemas/SupplyOption'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
        inventories:
          type: array
          items:
            $ref: '#/components/schemas/Inventory'
        dimensions:
          type: object
          $ref: '#/components/schemas/Dimension'
      example:
        key: '06000110207265'
        organizationKeys: '[]'
        parentKeys: '[]'
        assetKeys: '[]'
        code: '82959593'
        isAssembly: 'false'
        partNumber: string
        name: string
        description: Eveniet doloribus placeat autem rem quia optio.
        notes: string
        criticality: string
        isActive: 'true'
        manufacturerName: string
        uomKey: '07000588424949'
        supplyOptions:
          - vendorKey: '02000649110203'
            partNumber: '[]'
            price: '[]'
            uomKey: '05000310385256'
            currencyKey: '07000735708737'
            createdAt: '1972-06-08T06:19:22Z'
            updatedAt: '1988-07-02T03:27:55Z'
        createdAt: '1988-06-26T04:17:11Z'
        updatedAt: '2004-04-26T13:25:18Z'
        deletedAt: '1998-07-03T14:12:18Z'
        inventories:
          - key: '07000588945953'
            code: '10242056'
            name: string
            quantity: 10
            unitCost: 10
            locationKey: '07000482200215'
            updatedAt: '1971-02-06T02:48:57Z'
            createdAt: '1976-02-20T15:09:43Z'
        dimensions: []
    MaterialItem:
      title: MaterialItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        assemblyKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetTemplateKey:
          type: string
          description: Description
          nullable: false
          format: string
        workOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        pmKey:
          type: string
          description: Description
          nullable: false
          format: string
        productionOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        drawingNumber:
          type: string
          description: Description
          nullable: false
          format: string
        positionNumber:
          type: string
          description: Description
          nullable: false
          format: string
        documentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        requiredQuantity:
          type: object
          description: Description
          nullable: false
          format: object
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000694656721'
        materialKey: '03000166888487'
        assemblyKey: '04000610188349'
        assetKey: '02000149450664'
        assetTemplateKey: '09000997747553'
        workOrderKey: '08000986542566'
        pmKey: '03000873157807'
        productionOrderKey: '03000961217932'
        partNumber: string
        drawingNumber: string
        positionNumber: string
        documentKey: '07000063626446'
        name: string
        uomKey: '03000403506730'
        quantity: string
        requiredQuantity: string
        createdAt: '2011-10-10T01:18:16Z'
        updatedAt: '1987-03-01T14:34:32Z'
        deletedAt: '2005-06-04T21:51:17Z'
    Document:
      title: Document
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        entityKeys:
          type: array
          description: Description
          nullable: false
          format: array
        name:
          type: string
          description: Description
          nullable: false
          format: string
        url:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        contentType:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000448385540'
        entityKeys: '[]'
        name: string
        url: string
        type: string
        contentType: string
        description: Et aut tempore est dignissimos.
        notes: string
        createdAt: '1986-01-18T02:41:38Z'
        updatedAt: '2021-09-27T23:15:06Z'
    Drawing:
      title: Drawing
      properties:
        drawingNo:
          type: string
          description: Description
          nullable: false
          format: string
        drawingPos:
          type: string
          description: Description
          nullable: false
          format: string
        referenceNo:
          type: string
          description: Description
          nullable: false
          format: string
        referencePos:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
      example:
        drawingNo: string
        drawingPos: string
        referenceNo: string
        referencePos: string
        documents:
          - key: '03000319918145'
            entityKeys: '[]'
            name: string
            url: string
            type: string
            contentType: string
            description: Ipsum eius sunt exercitationem est ab in.
            notes: string
            createdAt: '1982-11-03T16:45:19Z'
            updatedAt: '1978-03-12T18:03:51Z'
    Part:
      title: Part
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        parentKeys:
          type: array
          description: Description
          nullable: false
          format: array
        assetKeys:
          type: array
          description: Description
          nullable: false
          format: array
        vendorKeys:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isAssembly:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        criticality:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        minimumQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        uom:
          type: object
          description: Description
          nullable: false
          format: object
        cost:
          type: object
          description: Description
          nullable: false
          format: object
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
        inventory:
          type: object
          $ref: '#/components/schemas/Inventory'
        drawings:
          type: array
          items:
            $ref: '#/components/schemas/Drawing'
      example:
        key: '04000671842297'
        siteKeys: '[]'
        parentKeys: '[]'
        assetKeys: '[]'
        vendorKeys: string
        documents:
          - key: '05000983672224'
            entityKeys: '[]'
            name: string
            url: string
            type: string
            contentType: string
            description: Ut magnam iusto consequatur nisi quia soluta.
            notes: string
            createdAt: '1991-08-29T05:17:23Z'
            updatedAt: '1985-05-03T02:32:21Z'
        accountKey: '00000157658202'
        code: '16392755'
        isAssembly: 'false'
        partNumber: string
        name: string
        description: Officiis ipsum voluptates error qui.
        notes: string
        criticality: string
        isActive: 'false'
        manufacturerName: string
        minimumQuantity: string
        uom: string
        cost: string
        currency: string
        createdAt: '2002-11-20T19:47:00Z'
        updatedAt: '1991-04-18T06:50:48Z'
        deletedAt: '1995-12-07T12:32:15Z'
        inventory:
          key: '02000047857941'
          code: '07638459'
          name: string
          quantity: 10
          unitCost: 10
          locationKey: '04000437611480'
          updatedAt: '1971-03-20T04:56:25Z'
          createdAt: '2004-08-08T19:10:25Z'
        drawings:
          - drawingNo: string
            drawingPos: string
            referenceNo: string
            referencePos: string
            documents:
              - key: '03000735557867'
                entityKeys: '[]'
                name: string
                url: string
                type: string
                contentType: string
                description: Facere consequuntur ullam voluptas qui et.
                notes: string
                createdAt: '2023-01-12T13:11:47Z'
                updatedAt: '2011-05-24T07:51:39Z'
    PartCollection:
      type: array
      items:
        $ref: '#/components/schemas/Part'
    Asset:
      title: Asset
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKeys:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        makeCompanyKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetTemplateKey:
          type: string
          description: Description
          nullable: false
          format: string
        isPhysical:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        criticality:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        makeName:
          type: string
          description: Description
          nullable: false
          format: string
        modelName:
          type: string
          description: Description
          nullable: false
          format: string
        serialNumber:
          type: string
          description: Description
          nullable: false
          format: string
        activatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deactivatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000676770383'
        siteKey: '03000463831230'
        parentKey: '09000764223907'
        vendorKey: '08000560742288'
        teamKey: '02000078491948'
        documents:
          - key: '07000719153855'
            entityKeys: '[]'
            name: string
            url: string
            type: string
            contentType: string
            description: Nisi corrupti delectus repellat vitae.
            notes: string
            createdAt: '1991-02-01T10:07:22Z'
            updatedAt: '1971-06-09T15:42:20Z'
        locationKey: '05000681646581'
        customerKey: '03000751792841'
        accountKeys: string
        name: string
        description: Fugit sapiente accusantium cum ex autem qui eius.
        makeCompanyKey: '01000569853777'
        assetTemplateKey: '06000491883000'
        isPhysical: 'true'
        notes: string
        categoryName: string
        criticality: string
        isActive: 'false'
        makeName: string
        modelName: string
        serialNumber: string
        activatedAt: '1985-05-02T20:44:53Z'
        deactivatedAt: '1996-07-06T09:07:34Z'
        createdAt: '2011-10-21T13:10:07Z'
        updatedAt: '1978-12-13T11:17:03Z'
        deletedAt: '2002-10-03T21:33:17Z'
    AssetDowntime:
      title: AssetDowntime
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        startedAt:
          type: string
          description: Description
          nullable: false
          format: string
        endedAt:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000168836299'
        assetKey: '05000719436489'
        description: Soluta et quasi dignissimos blanditiis nesciunt.
        startedAt: '2017-07-25T03:01:31Z'
        endedAt: '2008-01-26T09:33:35Z'
        categoryName: string
        severity: string
        notes: string
        createdAt: '1989-04-23T04:18:57Z'
        updatedAt: '2022-12-26T05:25:45Z'
    Model:
      title: Model
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        name:
          type: string
          description: Description
          nullable: false
          format: string
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000645792150'
        siteKey: '01000631003079'
        documents:
          - key: '05000495223402'
            entityKeys: '[]'
            name: string
            url: string
            type: string
            contentType: string
            description: Omnis voluptatibus quia sit ut aut magnam autem.
            notes: string
            createdAt: '1977-10-17T17:26:42Z'
            updatedAt: '1990-05-28T23:27:30Z'
        name: string
        manufacturerName: string
        createdAt: '1974-10-25T21:32:55Z'
        updatedAt: '2010-12-21T21:39:24Z'
        deletedAt: '1993-10-29T06:08:35Z'
    Counter:
      title: Counter
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKeys:
          type: string
          description: Description
          nullable: false
          format: string
        uomName:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        lastReading:
          type: object
          description: Description
          nullable: false
          format: object
        lastReadingAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000363593223'
        siteKey: '06000964556191'
        assetKeys: string
        uomName: string
        uomKey: '03000973754508'
        lastReading: string
        lastReadingAt: '2024-05-15T02:53:23Z'
        createdAt: '2003-07-20T03:09:17Z'
        updatedAt: '2021-05-27T22:19:46Z'
        deletedAt: '1971-08-30T09:19:24Z'
    CounterReading:
      title: CounterReading
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        meterKey:
          type: string
          description: Description
          nullable: false
          format: string
        reading:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000567978582'
        assetKey: '07000897703605'
        meterKey: '02000828692631'
        reading: string
        createdAt: '2009-08-19T00:16:50Z'
    WorkTrigger:
      title: WorkTrigger
      properties:
        uom:
          type: object
          description: Description
          nullable: false
          format: object
        type:
          type: string
          description: Description
          nullable: false
          format: string
        interval:
          type: string
          description: Description
          nullable: false
          format: string
        recurring:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        uom: string
        type: string
        interval: string
        recurring: string
        dueAt: '1985-12-17T21:13:02Z'
    Task:
      title: Task
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        priority:
          type: string
          description: Description
          nullable: false
          format: string
        checkList:
          type: array
          description: Description
          nullable: false
          format: array
      example:
        key: '08000634951929'
        parentKey: '06000243039235'
        title: Amet id voluptate id qui.
        description: Est atque culpa qui vero illum.
        priority: string
        checkList: '[]'
    PreventiveMaintenance:
      title: PreventiveMaintenance
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        assetKeys:
          type: array
          description: Description
          nullable: false
          format: array
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        assetTemplateKeys:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        categoryCode:
          type: string
          description: Description
          nullable: false
          format: string
        requiresMaterials:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/WorkTrigger'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000955632401'
        siteKeys: '[]'
        assetKeys: '[]'
        teamKey: '06000764862706'
        accountKey: '09000817514649'
        title: Impedit corrupti excepturi tenetur alias.
        description: Quia excepturi omnis officia consequatur.
        status: string
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        documents: '[]'
        assetTemplateKeys: string
        statusKey: '03000948180401'
        notes: string
        dueAt: '2012-11-19T01:53:05Z'
        categoryCode: string
        requiresMaterials: 'false'
        triggers:
          - uom: string
            type: string
            interval: string
            recurring: string
            dueAt: '1980-09-07T19:06:11Z'
        tasks:
          - key: '04000989609060'
            parentKey: '08000744059501'
            title: Asperiores nam et odio in laboriosam.
            description: Vero similique tempore officia ut et ducimus.
            priority: string
            checkList: '[]'
        createdAt: '1995-08-23T01:05:15Z'
        updatedAt: '1980-02-15T00:45:27Z'
        deletedAt: '2022-07-17T10:39:11Z'
    WorkOrder:
      title: WorkOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        serviceRequestKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        pmKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userApprovedKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetDowntimeKey:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        instructions:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        scheduledAt:
          type: string
          description: Description
          nullable: false
          format: string
        actualTime:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completionRemarks:
          type: string
          description: Description
          nullable: false
          format: string
        tasks:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000952503095'
        siteKey: '03000134886184'
        assetKey: '09000952566616'
        accountKey: '00000289096478'
        title: Est dicta ad accusamus dolorem et voluptatem eum.
        description: Ut quod qui similique est nesciunt minus itaque.
        serviceRequestKey: '00000947373112'
        code: '45426704'
        pmKey: '03000076121062'
        teamKey: '04000015996697'
        userApprovedKey: '03000483571048'
        assetDowntimeKey: '00000442180731'
        organizationKey: '01000003939204'
        instructions: string
        status: string
        statusKey: '07000003483384'
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        storeroomKey: '06000627352008'
        notes: string
        approvedAt: '2017-08-08T09:28:36Z'
        dueAt: '1972-08-19T18:40:18Z'
        scheduledAt: '2003-04-22T12:40:38Z'
        actualTime: string
        completedAt: '2008-12-01T15:20:14Z'
        completionRemarks: string
        tasks: string
        documents: '[]'
        createdAt: '2005-02-01T05:04:09Z'
        updatedAt: '2003-01-20T20:06:09Z'
        deletedAt: '2009-05-19T20:20:39Z'
    WorkOrderCollection:
      type: array
      items:
        $ref: '#/components/schemas/WorkOrder'
    ServiceRequest:
      title: ServiceRequest
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        workOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userRequestedKey:
          type: string
          description: Description
          nullable: false
          format: string
        userApprovedKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000090354331'
        siteKey: '05000320061246'
        locationKey: '01000621987051'
        storeroomKey: '02000988279035'
        assetKey: '08000848759335'
        workOrderKey: '05000845230968'
        teamKey: '07000392455629'
        userRequestedKey: '07000344675291'
        userApprovedKey: '00000332772967'
        documents:
          - key: '05000331017714'
            entityKeys: '[]'
            name: string
            url: string
            type: string
            contentType: string
            description: Distinctio magni non debitis.
            notes: string
            createdAt: '2015-11-02T11:47:50Z'
            updatedAt: '1982-05-13T19:56:36Z'
        title: Accusamus tempore eos architecto et.
        description: Dolorum repellendus odit labore.
        statusKey: '03000371891618'
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        notes: string
        approvedAt: '1988-07-22T08:38:59Z'
        dueAt: '1989-05-30T04:25:15Z'
        createdAt: '1980-11-12T04:10:43Z'
        updatedAt: '1996-01-04T03:03:50Z'
        deletedAt: '2003-07-18T03:19:35Z'
    ServiceRequestCollection:
      type: array
      items:
        $ref: '#/components/schemas/ServiceRequest'
    Status:
      title: Status
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        subCode:
          type: string
          description: Description
          nullable: false
          format: string
        scope:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000062610131'
        organizationKey: '02000900732259'
        parentKey: '06000334170693'
        name: string
        code: '33815886'
        subCode: string
        scope: string
        isActive: 'false'
        createdAt: '2015-09-29T06:42:02Z'
        updatedAt: '2006-11-23T14:22:36Z'
        deletedAt: '2010-11-30T11:41:44Z'
    Tax:
      title: Tax
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        taxPercentage:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000845658854'
        organizationKey: '02000593664363'
        name: string
        type: string
        taxPercentage: string
        isActive: 'true'
        createdAt: '2023-10-21T10:13:19Z'
        updatedAt: '1981-10-07T06:11:39Z'
        deletedAt: '2013-02-07T20:44:58Z'
    Currency:
      title: Currency
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isBase:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000138468112'
        name: string
        code: '35985365'
        isBase: string
        isActive: string
        createdAt: '1990-04-28T19:21:27Z'
        updatedAt: '1970-09-14T03:31:08Z'
        deletedAt: '2010-01-23T23:41:03Z'
    ExchangeRate:
      title: ExchangeRate
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        baseCurrencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        rate:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000667957742'
        currencyKey: '01000432073168'
        baseCurrencyKey: '00000553494009'
        rate: string
        createdAt: '2018-03-17T19:26:20Z'
    Product:
      title: Product
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        groupKey:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        isTaxable:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        taxKeys:
          type: array
          description: Description
          nullable: false
          format: array
        status:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        sku:
          type: string
          description: Description
          nullable: false
          format: string
        upc:
          type: string
          description: Description
          nullable: false
          format: string
        ean:
          type: string
          description: Description
          nullable: false
          format: string
        isbn:
          type: string
          description: Description
          nullable: false
          format: string
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        reorderLevel:
          type: object
          description: Description
          nullable: false
          format: object
        dimensions:
          type: object
          description: Description
          nullable: false
          format: object
        supplyOptions:
          type: array
          items:
            $ref: '#/components/schemas/SupplyOption'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000677240852'
        groupKey: '08000026760284'
        uomKey: '08000541951651'
        code: '22954541'
        name: string
        description: Aliquam velit nihil eaque voluptas alias numquam.
        type: string
        isTaxable: 'true'
        taxKeys: '[]'
        status: string
        price: string
        currencyKey: '00000595231851'
        quantity: string
        sku: string
        upc: string
        ean: string
        isbn: string
        partNumber: string
        reorderLevel: string
        dimensions: string
        supplyOptions:
          - vendorKey: '02000503057265'
            partNumber: '[]'
            price: '[]'
            uomKey: '09000514959296'
            currencyKey: '07000611947077'
            createdAt: '1999-01-16T14:35:00Z'
            updatedAt: '2022-05-09T17:49:14Z'
        createdAt: '2019-07-22T07:54:03Z'
        updatedAt: '1996-03-01T04:55:48Z'
        deletedAt: '1993-04-12T12:44:25Z'
    SalesLineItem:
      title: SalesLineItem
      properties:
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        quantityRequired:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        discount:
          type: string
          description: Description
          nullable: false
          format: string
        lineTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineTotalValue:
          type: string
          description: Description
          nullable: false
          format: string
        taxKey:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        productKey: '02000523082476'
        locationKey: '03000025568586'
        storeroomKey: '01000524562554'
        quantity: string
        quantityRequired: string
        price: string
        discount: string
        lineTaxValue: string
        lineTotalValue: string
        taxKey: '05000502546088'
    SalesOrder:
      title: SalesOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        shipmentDate:
          type: string
          description: Description
          nullable: false
          format: string
        contactPerson:
          type: string
          description: Description
          nullable: false
          format: string
        lines:
          type: array
          items:
            $ref: '#/components/schemas/SalesLineItem'
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyRate:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000487282747'
        customerKey: '06000644357998'
        userKey: '07000910336877'
        code: '96602751'
        orderNumber: string
        date: string
        statusKey: '07000365951722'
        shipmentDate: '1972-12-30T18:20:20Z'
        contactPerson: string
        lines:
          - productKey: '09000700829466'
            locationKey: '08000295744549'
            storeroomKey: '00000180824640'
            quantity: string
            quantityRequired: string
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            taxKey: '06000467663812'
        currencyKey: '08000658967119'
        currencyRate: string
        createdAt: '1975-07-28T10:14:44Z'
        updatedAt: '1971-02-26T17:21:41Z'
        deletedAt: '1971-10-04T05:59:33Z'
    Project:
      title: Project
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        budget:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000277730112'
        siteKey: '05000535910947'
        name: string
        accountKey: '05000721411177'
        statusKey: '05000299241596'
        budget: string
        createdAt: '2012-08-31T12:53:44Z'
        updatedAt: '2000-11-16T16:10:21Z'
        deletedAt: '2001-08-27T11:32:16Z'
    InvoiceLineItem:
      title: InvoiceLineItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineNo:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        lineRef:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        receivedQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        discount:
          type: string
          description: Description
          nullable: false
          format: string
        lineTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineTotalValue:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000854335036'
        locationKey: '06000207638391'
        vendorKey: '08000272805974'
        productKey: '05000607792413'
        statusKey: '02000042027640'
        storeroomKey: '03000680113043'
        currencyKey: '03000516197523'
        lineNo: string
        code: '70158946'
        lineRef: string
        quantity: string
        receivedQuantity: string
        uomKey: '08000869038316'
        price: string
        discount: string
        lineTaxValue: string
        lineTotalValue: string
        notes: string
        deliveryAt: '1997-03-31T03:41:17Z'
        createdAt: '1995-06-10T10:28:42Z'
        updatedAt: '2004-11-17T00:13:21Z'
        deletedAt: '1999-05-28T05:08:39Z'
    Invoice:
      title: Invoice
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        invoiceNumber:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        poKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        invoiceDate:
          type: string
          description: Description
          nullable: false
          format: string
        dueDate:
          type: string
          description: Description
          nullable: false
          format: string
        receivedDate:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000535462630'
        invoiceNumber: string
        vendorKey: '09000013819545'
        poKey: '09000359860128'
        statusKey: '01000728406053'
        lineItems:
          - key: '02000822156821'
            locationKey: '05000542221881'
            vendorKey: '01000634447533'
            productKey: '00000170889812'
            statusKey: '04000319089274'
            storeroomKey: '08000343812939'
            currencyKey: '01000383386305'
            lineNo: string
            code: '85843226'
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '09000671345488'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '1977-07-20T13:44:39Z'
            createdAt: '2009-03-11T23:09:45Z'
            updatedAt: '2004-06-20T16:50:48Z'
            deletedAt: '2021-09-28T16:46:25Z'
        invoiceDate: '2000-12-20T06:39:41Z'
        dueDate: '2013-01-24T03:07:29Z'
        receivedDate: '2008-08-27T03:29:34Z'
        currencyKey: '05000682911474'
        createdAt: '1970-04-08T15:00:10Z'
        updatedAt: '1976-04-17T08:32:28Z'
        deletedAt: '2022-05-31T01:33:32Z'
    Receipt:
      title: Receipt
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        poKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '07000120269075'
        siteKey: '02000865722177'
        vendorKey: '08000466748364'
        poKey: '08000221375867'
        code: '26264738'
        orderNo: string
        orderDate: '1996-08-01T17:07:08Z'
        title: Sequi soluta dolores possimus eveniet.
        description: At repellendus molestias itaque iste nihil et.
        completedAt: '1976-07-19T09:31:52Z'
        shippingMethod: string
        notes: string
        currencyKey: '01000033253811'
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        lineItems:
          - key: '08000096458262'
            locationKey: '01000252105420'
            vendorKey: '01000268411637'
            assetKey: '02000527019826'
            materialKey: '01000996345681'
            productKey: '08000423853930'
            statusKey: '01000903213247'
            storeroomKey: '02000470838120'
            lineNo: string
            code: '49531145'
            type: string
            name: string
            description: Praesentium rerum qui officiis iure repudiandae.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '02000806275615'
            currencyKey: '04000394712706'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '1986-02-16T04:25:07Z'
            dueAt: '2004-04-05T08:15:12Z'
            updatedAt: '1976-10-22T10:17:13Z'
        createdAt: '2000-04-24T03:05:28Z'
        updatedAt: '1990-05-01T23:04:28Z'
    BOMLineItem:
      title: BOMLineItem
      properties:
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        locationKey: '08000496268009'
        materialKey: '09000715391411'
        productKey: '03000109840442'
        currencyKey: '08000281271364'
        description: Omnis vel quibusdam corrupti voluptatem non quia.
        quantity: string
        uomKey: '09000285984043'
        notes: string
        price: string
        createdAt: '2010-04-21T21:37:42Z'
        updatedAt: '1996-02-28T02:57:09Z'
    BillOfMaterial:
      title: BillOfMaterial
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        projectKey:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/BOMLineItem'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000962555486'
        siteKey: '03000810035202'
        name: string
        projectKey: '03000147329129'
        type: string
        lineItems:
          - locationKey: '01000697167844'
            materialKey: '01000167336066'
            productKey: '03000190672868'
            currencyKey: '00000488153425'
            description: Qui id sapiente dignissimos.
            quantity: string
            uomKey: '03000633496196'
            notes: string
            price: string
            createdAt: '2012-04-04T11:12:02Z'
            updatedAt: '1982-03-25T19:06:04Z'
        createdAt: '2022-10-02T22:49:30Z'
        updatedAt: '2014-07-10T09:18:21Z'
    ProductionOrder:
      title: ProductionOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        note:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000887401082'
        siteKey: '04000876170411'
        statusKey: '00000334761096'
        locationKey: '08000372852748'
        orderNo: string
        orderDate: '1972-05-21T13:25:34Z'
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        note: string
        lineItems:
          - key: '07000841175077'
            locationKey: '07000724803740'
            vendorKey: '04000078316650'
            assetKey: '04000693096447'
            materialKey: '08000083464681'
            productKey: '05000910948066'
            statusKey: '09000887320870'
            storeroomKey: '06000606649615'
            lineNo: string
            code: '63430479'
            type: string
            name: string
            description: Minus eius illo quia deserunt adipisci quas.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '02000494171970'
            currencyKey: '04000329971995'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '2021-08-14T20:11:15Z'
            dueAt: '2023-09-17T01:37:53Z'
            updatedAt: '1991-01-03T20:50:53Z'
        createdAt: '2012-05-15T14:14:04Z'
        updatedAt: '1983-09-27T17:46:49Z'
        deletedAt: '2021-09-08T13:04:40Z'
    Receiving:
      title: Receiving
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        poKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000943268547'
        siteKey: '05000770273523'
        vendorKey: '01000502634775'
        poKey: '05000962697211'
        code: '37566258'
        orderNo: string
        orderDate: '2007-06-19T19:46:04Z'
        title: Blanditiis earum qui vitae mollitia omnis ullam.
        description: Perferendis delectus optio non aliquam.
        completedAt: '2008-11-18T21:40:20Z'
        shippingMethod: string
        notes: string
        currencyKey: '02000836640986'
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        lineItems:
          - key: '03000032261717'
            locationKey: '05000985995634'
            vendorKey: '04000566107103'
            assetKey: '02000594647989'
            materialKey: '08000784773535'
            productKey: '09000808374716'
            statusKey: '09000914131006'
            storeroomKey: '08000256552745'
            lineNo: string
            code: '13404710'
            type: string
            name: string
            description: Nam rerum incidunt quo ea labore.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '03000225910675'
            currencyKey: '02000927908679'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '1973-11-26T07:45:05Z'
            dueAt: '2013-08-29T22:44:43Z'
            updatedAt: '2010-07-03T15:08:14Z'
        createdAt: '2013-05-13T15:48:52Z'
        updatedAt: '2009-03-22T16:32:47Z'
    RequestForQuotation:
      title: RequestForQuotation
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        shippingAddress:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
        documentKeys:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000586839481'
        siteKey: '00000909809006'
        vendorKey: '05000870267144'
        accountKey: '08000018213436'
        code: '23788688'
        statusKey: '09000863039544'
        shippingMethod: string
        shippingAddress:
          - countryName: string
            addressLines: string
            city: string
            postCode: string
            phone: string
            email: string
            notes: string
            createdAt: '1974-05-14T15:41:45Z'
            updatedAt: '2006-09-16T05:40:23Z'
        lineItems:
          - key: '07000451692496'
            locationKey: '06000345986028'
            vendorKey: '02000396593469'
            assetKey: '02000819641706'
            materialKey: '07000445506880'
            productKey: '05000307265800'
            statusKey: '07000277873919'
            storeroomKey: '00000804796015'
            lineNo: string
            code: '46323248'
            type: string
            name: string
            description: Cum in nulla quaerat voluptatem provident.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '08000180091935'
            currencyKey: '06000168129077'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '2002-04-09T02:48:28Z'
            dueAt: '1978-09-21T06:08:27Z'
            updatedAt: '2013-02-18T08:49:56Z'
        documentKeys: string
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        createdAt: '1990-04-27T01:07:50Z'
        updatedAt: '1988-12-16T18:40:57Z'
        deletedAt: '1975-01-21T16:09:14Z'
    PurchaseRequisition:
      title: PurchaseRequisition
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        requesterKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        shippingAddress:
          type: object
          $ref: '#/components/schemas/Address'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/POLineItem'
        documentKeys:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000683337810'
        siteKey: '01000416482067'
        requesterKey: '04000735623123'
        accountKey: '05000056140081'
        code: '02851013'
        statusKey: '09000046686710'
        shippingMethod: string
        shippingAddress:
          countryName: string
          addressLines: string
          city: string
          postCode: string
          phone: string
          email: string
          notes: string
          createdAt: '1986-10-30T04:36:53Z'
          updatedAt: '1995-04-30T09:04:28Z'
        lineItems:
          - key: '08000685448212'
            locationKey: '08000096124657'
            vendorKey: '08000763900198'
            assetKey: '02000027903445'
            materialKey: '05000475346375'
            productKey: '09000447062451'
            statusKey: '01000849560936'
            storeroomKey: '02000513094424'
            lineNo: string
            code: '21913242'
            type: string
            name: string
            description: Assumenda architecto non est est et soluta.
            lineRef: string
            quantity: string
            receivedQuantity: string
            uomKey: '08000102904110'
            currencyKey: '03000526964107'
            price: string
            discount: string
            lineTaxValue: string
            lineTotalValue: string
            notes: string
            deliveryAt: '2009-08-20T13:25:50Z'
            dueAt: '1986-11-02T13:34:26Z'
            updatedAt: '1972-02-29T11:50:41Z'
        documentKeys: string
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        createdAt: '1988-01-12T06:35:36Z'
        updatedAt: '2020-08-19T09:11:33Z'
        deletedAt: '1971-06-27T13:09:42Z'
    ProductGroup:
      title: ProductGroup
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000949687579'
        parentKey: '01000583142940'
        code: '51106096'
        name: string
        description: Maiores eos et itaque et quia.
        updatedAt: '1987-03-20T06:09:36Z'
        createdAt: '1996-06-27T00:05:04Z'
        deletedAt: '2007-09-09T15:53:14Z'
    StockLineItem:
      title: StockLineItem
      properties:
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        productKey: '04000461089256'
        materialKey: '06000427721955'
        quantity: string
        locationKey: '09000093445121'
        storeroomKey: '00000320890752'
    StockTransfer:
      title: StockTransfer
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        fromLocationKey:
          type: string
          description: Description
          nullable: false
          format: string
        toLocationKey:
          type: string
          description: Description
          nullable: false
          format: string
        fromStoreroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        toStoreroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/StockLineItem'
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000697073802'
        fromLocationKey: '01000581535444'
        toLocationKey: '05000809622622'
        fromStoreroomKey: '03000694811956'
        toStoreroomKey: '07000639673606'
        statusKey: '00000195109102'
        code: '78789067'
        date: string
        lineItems:
          - productKey: '02000782874545'
            materialKey: '05000902014193'
            quantity: string
            locationKey: '09000070224129'
            storeroomKey: '04000210335198'
        orderNumber: string
        createdAt: '1979-02-04T09:27:54Z'
        updatedAt: '2002-12-12T07:58:43Z'
        deletedAt: '1988-06-09T23:34:21Z'
    StockAdjustment:
      title: StockAdjustment
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        reason:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/StockLineItem'
        adjustmentNumber:
          type: string
          description: Description
          nullable: false
          format: string
        total:
          type: object
          description: Description
          nullable: false
          format: object
        type:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000947292167'
        locationKey: '04000180200134'
        storeroomKey: '05000324465561'
        userKey: '09000607806621'
        date: string
        reason: string
        lineItems:
          - productKey: '07000165710600'
            materialKey: '09000180951138'
            quantity: string
            locationKey: '05000873558145'
            storeroomKey: '06000131111727'
        adjustmentNumber: string
        total: string
        type: string
        createdAt: '2004-01-20T12:06:12Z'
        updatedAt: '2011-03-10T02:18:42Z'
        deletedAt: '2023-03-11T19:38:33Z'
    ShipmentOrder:
      title: ShipmentOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        shipmentNumber:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/StockLineItem'
        destinationAddress:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        carrierName:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000095783173'
        userKey: '02000301234316'
        customerKey: '01000395479966'
        vendorKey: '01000267984782'
        orderNumber: string
        shipmentNumber: string
        date: string
        statusKey: '05000832477175'
        lineItems:
          - productKey: '04000595944943'
            materialKey: '06000233813402'
            quantity: string
            locationKey: '09000352474664'
            storeroomKey: '08000409462244'
        destinationAddress:
          - countryName: string
            addressLines: string
            city: string
            postCode: string
            phone: string
            email: string
            notes: string
            createdAt: '1996-05-26T04:32:26Z'
            updatedAt: '2013-08-06T20:31:51Z'
        carrierName: string
        shippingMethod: string
        notes: string
        createdAt: '2022-08-15T18:38:01Z'
        updatedAt: '1975-04-01T07:43:40Z'
        deletedAt: '2022-10-08T22:17:37Z'
    Integration:
      title: Integration
      properties:
        id:
          type: string
          description: Description
          nullable: false
          format: string
        company_name:
          type: string
          description: Description
          nullable: false
          format: string
        email:
          type: string
          description: Description
          nullable: false
          format: string
        provider:
          type: string
          description: Description
          nullable: false
          format: string
        updated_at:
          type: string
          description: Description
          nullable: false
          format: string
        sync_status:
          type: string
          description: Description
          nullable: false
          format: string
        sync_updated_at:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        id: string
        company_name: string
        email: string
        provider: string
        updated_at: string
        sync_status: string
        sync_updated_at: string
