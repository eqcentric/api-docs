openapi: 3.0.0
info:
  version: 1.0.0
  title: Makini API Docs
  description: Makini API Docs
  license:
    name: ''
    url: ''
servers:
  - url: https://www.makini.io
paths:
  /api/eam/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/users:
    get:
      description: |+
        User account in the system

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/companies:
    get:
      description: |+
        Contact information for a third-party entity.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/purchase-orders/{key}/status:
    put:
      description: ''
      summary: Update a PurchaseOrderStatus
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/eam/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '02000551856545'
                vendorKey: '03000295373647'
                code: '72593042'
                orderNo: string
                orderDate: '1998-04-06T09:14:32Z'
                statusKey: '06000802461246'
                title: Quia iste quis et voluptatem et et.
                description: Rem eveniet qui id vel.
                dueAt: '2011-10-20T06:30:42Z'
                approvedAt: '1972-08-20T01:50:56Z'
                completedAt: '2000-02-02T06:00:33Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '05000256471165'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1996-10-27T16:24:17Z'
                updatedAt: '2013-10-16T21:23:43Z'
  /api/eam/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '08000996101137'
                vendorKey: '08000199763841'
                code: '62244787'
                orderNo: string
                orderDate: '1976-01-31T21:05:48Z'
                statusKey: '07000584212477'
                title: Neque autem vel natus quasi velit.
                description: Ut vel dolore adipisci veniam quo ipsam.
                dueAt: '1994-11-21T01:58:55Z'
                approvedAt: '2019-02-04T02:48:46Z'
                completedAt: '2022-09-28T09:45:29Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '08000536071673'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1979-02-17T05:20:45Z'
                updatedAt: '2014-11-07T03:03:39Z'
  /api/eam/purchase-orders.line-items:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/materials/{key}/inventory:
    put:
      description: ''
      summary: Update a MaterialInventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialInventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '80063940'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '04000265070373'
  /api/eam/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/materials:
    get:
      description: >+
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Materials
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Material'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a Material
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '07000787916811'
                code: '77287038'
                isAssembly: string
                partNumber: string
                name: string
                description: Veritatis dolore pariatur voluptas est quidem.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/eam/materials/{key}:
    get:
      description: >
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.
      summary: Get a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '01000493060180'
                code: '73200437'
                isAssembly: string
                partNumber: string
                name: string
                description: Veritatis doloremque unde ut dolores.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/eam/assets/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/assets:
    get:
      description: >+
        A physical entity in the facility's hierarchy structure. It can be
        either equipment available for maintenance or system of assets in site
        hierarchy.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Assets
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Asset'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/assets/{key}:
    get:
      description: >
        A physical entity in the facility's hierarchy structure. It can be
        either equipment available for maintenance or system of assets in site
        hierarchy.
      summary: Get an Asset
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update an Asset
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                parentKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                modelKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                modelName:
                  type: string
                  nullable: true
                  format: string
                serialNumber:
                  type: string
                  nullable: true
                  format: string
                activatedAt:
                  type: string
                  nullable: true
                  format: string
                deactivatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '05000421801069'
                parentKey: '02000180979222'
                vendorKey: '07000711839876'
                modelKey: '02000523770240'
                teamKey: '05000300164129'
                locationKey: '09000278449218'
                accountKey: '00000463401206'
                name: string
                description: Aut ad quas mollitia consequuntur.
                notes: string
                categoryName: string
                criticality: string
                isActive: string
                manufacturerName: string
                modelName: string
                serialNumber: string
                activatedAt: '1993-07-15T19:14:39Z'
                deactivatedAt: '2021-08-13T01:07:21Z'
  /api/eam/assets-downtime:
    get:
      description: |+
        Information on planned or unplanned downtime periods for assets.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List AssetDownTimes
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/AssetDownTime'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/assets-downtime/{key}:
    get:
      description: |
        Information on planned or unplanned downtime periods for assets.
      summary: Get an AssetDownTime
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/asset-templates/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/asset-templates:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Models
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Model'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/asset-templates/{key}:
    get:
      description: ''
      summary: Get a Model
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/meters:
    get:
      description: >+
        Is a tool for tracking the number of specific events or operations, used
        for analyzing performance and other parameters, as well as scheduling
        condition-based maintenance

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Counters
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Counter'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/meters/{key}:
    get:
      description: >
        Is a tool for tracking the number of specific events or operations, used
        for analyzing performance and other parameters, as well as scheduling
        condition-based maintenance
      summary: Get a Counter
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/meter-readings:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List CounterReadings
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterReading'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/meter-readings/{key}:
    get:
      description: ''
      summary: Get a CounterReading
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/pm/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/pm:
    get:
      description: >+
        Templates for time-based or counter-based maintenance, used as a basis
        for creating new work orders

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List PreventiveMaintenances
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/PreventiveMaintenance'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/pm/{key}:
    get:
      description: >
        Templates for time-based or counter-based maintenance, used as a basis
        for creating new work orders
      summary: Get a PreventiveMaintenance
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/work-orders/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/work-orders/{key}/status:
    put:
      description: ''
      summary: Update a WorkOrderStatus
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderStatus'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/eam/work-orders:
    get:
      description: >+
        A work order is a document for organizing the execution of work or
        service, describing the task, location, resources, and deadlines

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List WorkOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/WorkOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a WorkOrder
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                  format: string
                statusKey:
                  type: string
                  nullable: true
                  format: string
                scheduledAt:
                  type: string
                  nullable: true
                  format: string
                siteKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                storeroomKey:
                  type: string
                  nullable: true
                  format: string
                assetKey:
                  type: string
                  nullable: true
                  format: string
                assetDowntimeKey:
                  type: string
                  nullable: true
                  format: string
                serviceRequestKey:
                  type: string
                  nullable: true
                  format: string
                pmKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                laborAssignedKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                userApprovedKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                instructions:
                  type: string
                  nullable: true
                  format: string
                severity:
                  type: string
                  nullable: true
                  format: string
                estimatedTime:
                  type: integer
                  nullable: true
                  format: integer
                actualTime:
                  type: integer
                  nullable: true
                  format: integer
                roleName:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                notes:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                completionRemarks:
                  type: string
                  nullable: true
                  format: string
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
                deletedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                title: Dignissimos ut aut eos tempora maiores ipsam.
                statusKey: '06000404066648'
                scheduledAt: '2020-01-08T13:02:40Z'
                siteKey: '05000913146269'
                locationKey: '07000721986948'
                storeroomKey: '09000230177174'
                assetKey: '07000019875558'
                assetDowntimeKey: '00000090402837'
                serviceRequestKey: '06000236438943'
                pmKey: '02000296995914'
                teamKey: '06000578352729'
                laborAssignedKey: '04000678012726'
                accountKey: '06000022950933'
                userApprovedKey: '00000621670089'
                code: '53197726'
                description: Voluptates ea dolorem sed id quisquam enim.
                instructions: string
                severity: string
                estimatedTime: 10
                actualTime: 10
                roleName: string
                categoryName: string
                documents: '[]'
                notes: string
                approvedAt: '2009-06-01T19:03:29Z'
                dueAt: '2005-12-15T06:41:09Z'
                completedAt: '2021-03-23T12:01:35Z'
                completionRemarks: string
                createdAt: '2012-06-24T04:01:48Z'
                updatedAt: '2006-10-23T20:42:36Z'
                deletedAt: '1999-04-15T21:35:59Z'
  /api/eam/work-orders/{key}:
    get:
      description: >
        A work order is a document for organizing the execution of work or
        service, describing the task, location, resources, and deadlines
      summary: Get a WorkOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a WorkOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                  format: string
                statusKey:
                  type: string
                  nullable: true
                  format: string
                scheduledAt:
                  type: string
                  nullable: true
                  format: string
                siteKey:
                  type: string
                  nullable: true
                  format: string
                locationKey:
                  type: string
                  nullable: true
                  format: string
                storeroomKey:
                  type: string
                  nullable: true
                  format: string
                assetKey:
                  type: string
                  nullable: true
                  format: string
                assetDowntimeKey:
                  type: string
                  nullable: true
                  format: string
                serviceRequestKey:
                  type: string
                  nullable: true
                  format: string
                pmKey:
                  type: string
                  nullable: true
                  format: string
                teamKey:
                  type: string
                  nullable: true
                  format: string
                laborAssignedKey:
                  type: string
                  nullable: true
                  format: string
                accountKey:
                  type: string
                  nullable: true
                  format: string
                userApprovedKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                instructions:
                  type: string
                  nullable: true
                  format: string
                severity:
                  type: string
                  nullable: true
                  format: string
                estimatedTime:
                  type: integer
                  nullable: true
                  format: integer
                actualTime:
                  type: integer
                  nullable: true
                  format: integer
                roleName:
                  type: string
                  nullable: true
                  format: string
                categoryName:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                notes:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                completionRemarks:
                  type: string
                  nullable: true
                  format: string
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
                deletedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                title: Quis sint maiores adipisci facilis.
                statusKey: '03000867065428'
                scheduledAt: '1983-07-27T17:39:42Z'
                siteKey: '00000226738512'
                locationKey: '08000436203350'
                storeroomKey: '01000263457643'
                assetKey: '07000871274690'
                assetDowntimeKey: '01000893168241'
                serviceRequestKey: '07000778862417'
                pmKey: '04000945422230'
                teamKey: '01000406321008'
                laborAssignedKey: '01000815362558'
                accountKey: '06000539539777'
                userApprovedKey: '05000284367519'
                code: '19001012'
                description: Velit minus et veniam laboriosam.
                instructions: string
                severity: string
                estimatedTime: 10
                actualTime: 10
                roleName: string
                categoryName: string
                documents: '[]'
                notes: string
                approvedAt: '1988-07-16T22:37:14Z'
                dueAt: '2014-06-17T14:54:45Z'
                completedAt: '1975-07-17T18:47:43Z'
                completionRemarks: string
                createdAt: '1998-07-30T06:32:41Z'
                updatedAt: '1975-09-01T16:10:36Z'
                deletedAt: '1983-10-15T11:23:36Z'
  /api/eam/service-requests:
    get:
      description: >+
        Internal or external request for services or support, aimed at
        maintaining operational activities made by employees or customer and
        partners

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List ServiceRequests
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ServiceRequest'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/service-requests/{key}:
    get:
      description: >
        Internal or external request for services or support, aimed at
        maintaining operational activities made by employees or customer and
        partners
      summary: Get a ServiceRequest
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/documents:
    get:
      description: >+
        Refers to any file containing details on maintenance, operation, and
        asset management, including manuals, records, and reports.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Documents
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Document'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a Document
      parameters: []
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      requestBody:
        description: Request body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  nullable: false
                  format: binary
                name:
                  type: string
                  nullable: false
                  format: string
              example:
                file: string
                name: string
  /api/eam/documents/{key}:
    get:
      description: >
        Refers to any file containing details on maintenance, operation, and
        asset management, including manuals, records, and reports.
      summary: Get a Document
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/inventories:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/eam/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '04833178'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '09000107601105'
  /api/eam/statuses/work-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/eam/statuses/service-requests:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - EAM/CMMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/users:
    get:
      description: |+
        User account in the system

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/taxes:
    get:
      description: |+
        Tax applicable on sales orders and purchase orders

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Taxes
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Tax'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/taxes/{key}:
    get:
      description: |
        Tax applicable on sales orders and purchase orders
      summary: Get a Tax
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/currencies:
    get:
      description: >+
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Currencies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Currency'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/currencies/{key}:
    get:
      description: >
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
      summary: Get a Currency
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/exchange-rates:
    get:
      description: >+
        An exchange rate refers to the value assigned to convert one currency
        into another for the purpose of financial transactions, accounting, and
        reporting within the system.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List ExchangeRates
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ExchangeRate'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/exchange-rates/{key}:
    get:
      description: >
        An exchange rate refers to the value assigned to convert one currency
        into another for the purpose of financial transactions, accounting, and
        reporting within the system.
      summary: Get an ExchangeRate
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/companies:
    get:
      description: |+
        Contact information for a third-party entity.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/products:
    get:
      description: >+
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Products
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Product'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/products/{key}:
    get:
      description: >
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
      summary: Get a Product
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/sales-orders:
    get:
      description: >+
        A sales order is a document where customers specify what they want to
        buy

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List SalesOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/SalesOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/sales-orders/{key}:
    get:
      description: >
        A sales order is a document where customers specify what they want to
        buy
      summary: Get a SalesOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/projects:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Projects
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Project'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/projects/{key}:
    get:
      description: ''
      summary: Get a Project
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/invoices:
    get:
      description: >+
        Refers to a document issued by a company to a customer, confirming the
        completion of services rendered or goods delivered and requesting
        payment. It typically includes details of the products or services
        provided, their prices, the total amount due, as well as payment terms
        and methods.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Invoices
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Invoice'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/invoices/{key}:
    get:
      description: >
        Refers to a document issued by a company to a customer, confirming the
        completion of services rendered or goods delivered and requesting
        payment. It typically includes details of the products or services
        provided, their prices, the total amount due, as well as payment terms
        and methods.
      summary: Get an Invoice
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/receipts:
    get:
      description: >+
        A 'receipt' is a document confirming payment received from a customer
        for goods or services.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Receipts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Receipt'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/receipts/{key}:
    get:
      description: >
        A 'receipt' is a document confirming payment received from a customer
        for goods or services.
      summary: Get a Receipt
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
  /api/erp/purchase-orders/{key}/status:
    put:
      description: ''
      summary: Update a PurchaseOrderStatus
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/erp/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '00000202473882'
                vendorKey: '03000352010283'
                code: '26026893'
                orderNo: string
                orderDate: '2006-02-15T15:13:38Z'
                statusKey: '02000676397579'
                title: Eos ipsum corporis saepe quidem eveniet porro.
                description: Omnis numquam voluptate dolores.
                dueAt: '1995-04-27T08:23:38Z'
                approvedAt: '1991-05-14T09:29:09Z'
                completedAt: '1986-08-25T03:09:34Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '09000025345702'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '2015-11-27T12:08:35Z'
                updatedAt: '1971-04-22T14:38:13Z'
  /api/erp/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '03000269785898'
                vendorKey: '08000914819772'
                code: '78602595'
                orderNo: string
                orderDate: '1974-08-18T12:04:39Z'
                statusKey: '05000970685039'
                title: Sit eius molestias veniam ducimus quis.
                description: Ut ea voluptatum fugiat quo alias quas tempore.
                dueAt: '2020-12-19T19:13:17Z'
                approvedAt: '2003-10-14T14:49:45Z'
                completedAt: '1997-12-05T23:10:16Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '00000176243862'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '2016-01-24T22:15:22Z'
                updatedAt: '2021-08-07T04:57:23Z'
  /api/erp/purchase-orders.line-items:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/bom:
    get:
      description: >+
        A Bill of Materials is a detailed list of materials, instructions, or
        components needed to make a product. It's organized hierarchically, with
        the finished product at the top level, and includes quantities for
        production orders.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List BillOfMaterials
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/BillOfMaterial'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/bom/{key}:
    get:
      description: >
        A Bill of Materials is a detailed list of materials, instructions, or
        components needed to make a product. It's organized hierarchically, with
        the finished product at the top level, and includes quantities for
        production orders.
      summary: Get a BillOfMaterial
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterial'
  /api/erp/production-orders/{key}/materials:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/production-orders:
    get:
      description: >+
        An order to produce a specific quantity of products within a pre-defined
        time. It contains all the information required for the actual execution
        of the production process.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List ProductionOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProductionOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/production-orders/{key}:
    get:
      description: >
        An order to produce a specific quantity of products within a pre-defined
        time. It contains all the information required for the actual execution
        of the production process.
      summary: Get a ProductionOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionOrder'
  /api/erp/receiving:
    get:
      description: >+
        "Receiving" is the process of accepting inbound products from external
        entities such as vendors or stores/distribution centers into the
        warehouse facility.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Receivings
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Receiving'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/receiving/{key}:
    get:
      description: >
        "Receiving" is the process of accepting inbound products from external
        entities such as vendors or stores/distribution centers into the
        warehouse facility.
      summary: Get a Receiving
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/rfq:
    get:
      description: >+
        A Request for Quotation is a document that an organization sends to one
        or more suppliers asking a quotation for items.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List RequestForQuotations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/RequestForQuotation'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/rfq/{key}:
    get:
      description: >
        A Request for Quotation is a document that an organization sends to one
        or more suppliers asking a quotation for items.
      summary: Get a RequestForQuotation
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestForQuotation'
  /api/erp/purchase-requisitions:
    get:
      description: >+
        A Purchase Requisition is an internal request for goods or services
        within a company, undergoing approval before being used to generate a
        purchase order for vendors.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List PurchaseRequisitions
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseRequisition'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/purchase-requisitions/{key}:
    get:
      description: >
        A Purchase Requisition is an internal request for goods or services
        within a company, undergoing approval before being used to generate a
        purchase order for vendors.
      summary: Get a PurchaseRequisition
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
  /api/erp/materials/{key}/inventory:
    put:
      description: ''
      summary: Update a MaterialInventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialInventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '98762071'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '06000643594122'
  /api/erp/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/materials:
    get:
      description: >+
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Materials
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Material'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a Material
      parameters: []
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '05000442406233'
                code: '84780393'
                isAssembly: string
                partNumber: string
                name: string
                description: Tenetur ut nemo reiciendis eos est tempore a.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/erp/materials/{key}:
    get:
      description: >
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.
      summary: Get a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '04000698206996'
                code: '78131521'
                isAssembly: string
                partNumber: string
                name: string
                description: Tempora ea accusamus rerum eum officiis dolorum.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/erp/inventories:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/erp/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '38531088'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '02000448549840'
  /api/erp/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/purchase-requisitions:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/sales-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/projects:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/invoices:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/production-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/rfq:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/erp/statuses/receiving:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - ERP
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/organizations:
    get:
      description: >+
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Organizations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Organization'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/organizations/{key}:
    get:
      description: >
        Organization endpoint provides access to information about
        organizations, including their names, contact information, and
        structures. It is a top-level entity in the system, available for
        systems that support a multi-organizational structure.
      summary: Get an Organization
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/sites:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: List Sites
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Site'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/sites/{key}:
    get:
      description: >
        Site represents a physical location or facility where equipment is
        installed, or operations are conducted. This can include manufacturing
        plants or offices.
      summary: Get a Site
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/locations:
    get:
      description: >+
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Locations
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Location'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/locations/{key}:
    get:
      description: >
        Location is a specific subdivision within a site where equipment or
        material stock is located. For example, a particular machine may be
        situated in a specific area within a manufacturing plant, or materials
        can be stored in a specific warehouse.
      summary: Get a Location
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/storerooms:
    get:
      description: >+
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Storerooms
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Storeroom'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/storerooms/{key}:
    get:
      description: >
        Is a designated space within a location used for the storage and
        management of inventory, supplies, or equipment.
      summary: Get a Storeroom
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/accounts:
    get:
      description: >+
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Accounts
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/accounts/{key}:
    get:
      description: >
        Is a financial record in the general ledger, tracking debit and credit
        transactions to reflect a business's financial transactions and
        positions.
      summary: Get an Account
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/teams:
    get:
      description: >+
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Teams
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Team'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/teams/{key}:
    get:
      description: >
        A division responsible for conducting asset maintenance. It can be
        assigned to execute work orders.
      summary: Get a Team
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/labors:
    get:
      description: >+
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Labors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Labor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/labors/{key}:
    get:
      description: >
        Refers to internal or external human resources involved in the execution
        of work orders. It is used to track cost and time for planning purposes.
      summary: Get a Labor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/users:
    get:
      description: |+
        User account in the system

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Users
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/users/{key}:
    get:
      description: |
        User account in the system
      summary: Get an User
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/currencies:
    get:
      description: >+
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Currencies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Currency'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/currencies/{key}:
    get:
      description: >
        Currency represents a monetary unit used for multi-currency
        transactions, financial accounting, and dealings with counterparts,
        integrated with international exchange rates.
      summary: Get a Currency
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/uom:
    get:
      description: >+
        Units of Measure represent standardized values used for measuring and
        accounting for materials.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List UnitOfMeasures
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/UnitOfMeasure'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/uom/{key}:
    get:
      description: >
        Units of Measure represent standardized values used for measuring and
        accounting for materials.
      summary: Get an UnitOfMeasure
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/companies:
    get:
      description: |+
        Contact information for a third-party entity.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Companies
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Company'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/companies/{key}:
    get:
      description: |
        Contact information for a third-party entity.
      summary: Get a Company
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/vendors:
    get:
      description: >+
        An external entity that provides services or supplies. Subdivision of
        Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Vendors
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Vendor'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/vendors/{key}:
    get:
      description: >
        An external entity that provides services or supplies. Subdivision of
        Company
      summary: Get a Vendor
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/customers:
    get:
      description: >+
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Customers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Customer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/customers/{key}:
    get:
      description: >
        An external entity that can consume products or services, used as a
        target in sales and shipment orders. Subdivision of Company
      summary: Get a Customer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/groups:
    get:
      description: >+
        A Product Group categorizes similar items or products together for
        streamlined inventory management and analysis.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List ProductGroups
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProductGroup'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/groups/{key}:
    get:
      description: >
        A Product Group categorizes similar items or products together for
        streamlined inventory management and analysis.
      summary: Get a ProductGroup
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/products:
    get:
      description: >+
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Products
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Product'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/products/{key}:
    get:
      description: >
        The item available for sale could be either physical or digital, offered
        either at a fixed price or as a subscription service. Depending on the
        type of business, one may offer one or more products, each with separate
        pricing or add-ons. The description encompasses details such as
        features, pricing, availability, supplier, manufacturing, and sales
        information.
      summary: Get a Product
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/stocks:
    get:
      description: |+
        The quantity of materials per location and storeroom

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Stocks
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Stock'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stocks/{key}:
    get:
      description: |
        The quantity of materials per location and storeroom
      summary: Get a Stock
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/sales-orders:
    get:
      description: >+
        A sales order is a document where customers specify what they want to
        buy

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List SalesOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/SalesOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/sales-orders/{key}:
    get:
      description: >
        A sales order is a document where customers specify what they want to
        buy
      summary: Get a SalesOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/purchase-orders/{key}/status:
    put:
      description: ''
      summary: Update a PurchaseOrderStatus
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  nullable: true
                  format: string
              example:
                status: string
  /api/wms/purchase-orders:
    get:
      description: >+
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List PurchaseOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a PurchaseOrder
      parameters: []
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '03000546443401'
                vendorKey: '03000978527983'
                code: '66085904'
                orderNo: string
                orderDate: '1995-03-02T10:32:57Z'
                statusKey: '09000435790228'
                title: Commodi adipisci aut odio fugit.
                description: Sapiente dicta voluptatum ex.
                dueAt: '1995-08-19T01:03:40Z'
                approvedAt: '1990-06-20T20:24:17Z'
                completedAt: '2018-05-29T04:37:11Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '03000168872702'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '2012-10-24T17:16:00Z'
                updatedAt: '2017-04-20T20:26:34Z'
  /api/wms/purchase-orders/{key}:
    get:
      description: >
        A purchase order is a document for ordering goods or services,
        specifying the details, conditions of the purchase and line items
      summary: Get a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a PurchaseOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKey:
                  type: string
                  nullable: true
                  format: string
                vendorKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: false
                  format: string
                orderNo:
                  type: string
                  nullable: true
                  format: string
                orderDate:
                  type: object
                  nullable: true
                  format: object
                statusKey:
                  type: string
                  nullable: true
                  format: string
                title:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                dueAt:
                  type: string
                  nullable: true
                  format: string
                approvedAt:
                  type: string
                  nullable: true
                  format: string
                completedAt:
                  type: string
                  nullable: true
                  format: string
                shippingMethod:
                  type: string
                  nullable: true
                  format: string
                terms:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                currencyKey:
                  type: string
                  nullable: true
                  format: string
                totalNetValue:
                  type: object
                  nullable: true
                  format: object
                totalTaxValue:
                  type: object
                  nullable: true
                  format: object
                totalGrossValue:
                  type: object
                  nullable: true
                  format: object
                createdAt:
                  type: string
                  nullable: true
                  format: string
                updatedAt:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKey: '06000516383650'
                vendorKey: '00000860992648'
                code: '84498670'
                orderNo: string
                orderDate: '2019-10-06T04:14:21Z'
                statusKey: '06000009629496'
                title: Fugiat temporibus atque dicta consequatur.
                description: Illo perspiciatis laudantium eos nemo corrupti.
                dueAt: '1999-12-21T00:44:43Z'
                approvedAt: '1987-06-21T20:16:46Z'
                completedAt: '1975-02-16T10:32:29Z'
                shippingMethod: string
                terms: string
                notes: string
                currencyKey: '09000838634939'
                totalNetValue: string
                totalTaxValue: string
                totalGrossValue: string
                createdAt: '1996-09-01T04:24:45Z'
                updatedAt: '1978-10-27T23:49:17Z'
  /api/wms/purchase-orders.line-items:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List LineItems
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/LineItem'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/purchase-orders.line-items/{key}:
    get:
      description: ''
      summary: Get a LineItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/materials/{key}/inventory:
    put:
      description: ''
      summary: Update a MaterialInventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialInventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '85040489'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '00000484321369'
  /api/wms/materials/{key}/children:
    get:
      description: ''
      summary: Get a MaterialItem
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/materials:
    get:
      description: >+
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Materials
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Material'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
    post:
      description: ''
      summary: Create a Material
      parameters: []
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '05000652130337'
                code: '98741625'
                isAssembly: string
                partNumber: string
                name: string
                description: Nemo omnis consequuntur est ut ea corporis ut.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/wms/materials/{key}:
    get:
      description: >
        Material refers to consumables, spare parts and tools used in
        maintenance and production chains.
      summary: Get a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update a Material
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteKeys:
                  type: array
                  nullable: true
                  format: array
                parentKeys:
                  type: array
                  nullable: true
                  format: array
                assetKeys:
                  type: array
                  nullable: true
                  format: array
                vendorKeys:
                  type: string
                  nullable: true
                  format: string
                documents:
                  type: array
                  nullable: true
                  format: array
                accountKey:
                  type: string
                  nullable: true
                  format: string
                code:
                  type: string
                  nullable: true
                  format: string
                isAssembly:
                  type: boolean
                  nullable: true
                  format: boolean
                partNumber:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                description:
                  type: string
                  nullable: true
                  format: string
                notes:
                  type: string
                  nullable: true
                  format: string
                criticality:
                  type: string
                  nullable: true
                  format: string
                isActive:
                  type: boolean
                  nullable: true
                  format: boolean
                manufacturerName:
                  type: string
                  nullable: true
                  format: string
                minimumQuantity:
                  type: string
                  nullable: true
                  format: string
                cost:
                  type: object
                  nullable: true
                  format: object
                currency:
                  type: string
                  nullable: true
                  format: string
              example:
                siteKeys: '[]'
                parentKeys: '[]'
                assetKeys: '[]'
                vendorKeys: string
                documents: '[]'
                accountKey: '03000823824335'
                code: '73121428'
                isAssembly: string
                partNumber: string
                name: string
                description: Blanditiis maxime natus temporibus ipsum quia.
                notes: string
                criticality: string
                isActive: string
                manufacturerName: string
                minimumQuantity: string
                cost: string
                currency: string
  /api/wms/stock-transfers:
    get:
      description: >+
        "Stock Transfer" is a record of the movement of goods between warehouse
        locations, containing location and warehouse keys, status, code, date,
        line item information, and timestamps.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List StockTransfers
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/StockTransfer'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stock-transfers/{key}:
    get:
      description: >
        "Stock Transfer" is a record of the movement of goods between warehouse
        locations, containing location and warehouse keys, status, code, date,
        line item information, and timestamps.
      summary: Get a StockTransfer
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/stock-adjustments:
    get:
      description: >+
        Is a record of inventory changes within a location or storeroom,
        detailing the user, date, reason, line items, adjustment number, total
        quantity adjusted, type, and timestamps.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List StockAdjustments
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/StockAdjustment'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/stock-adjustments/{key}:
    get:
      description: >
        Is a record of inventory changes within a location or storeroom,
        detailing the user, date, reason, line items, adjustment number, total
        quantity adjusted, type, and timestamps.
      summary: Get a StockAdjustment
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/shipment-orders:
    get:
      description: >+
        A shipment order is a document used by organizations to specify what
        items are being transferred from a storage location to a person at a new
        destination. It accompanies the shipment so the recipient can confirm
        they received the correct items.

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List ShipmentOrders
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ShipmentOrder'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/shipment-orders/{key}:
    get:
      description: >
        A shipment order is a document used by organizations to specify what
        items are being transferred from a storage location to a person at a new
        destination. It accompanies the shipment so the recipient can confirm
        they received the correct items.
      summary: Get a ShipmentOrder
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/shipment-orders/{key}/delivered:
    post:
      description: ''
      summary: Create a ShipmentOrderDelivered
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentOrderDelivered'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties: []
  /api/wms/inventories:
    get:
      description: |2+

         Filtering:

         * filter[name]=HelloFromMakiniAPI
         * filter[name:contains]=Makini
         * filter[name:startsWith]=Hello
         * filter[name:startsWith]=API
         * filter[createdAt:gt]=2023-11-07
         * filter[createdAt:gteq]=2023-11-07
         * filter[createdAt:lt]=2023-11-07
         * filter[createdAt:lted]=2023-11-07

         Fitler matching:

         * filter[filterMatch]=any // OR
         * filter[filterMatch]=all // AND

         Sorting
         * sort[createdAt]=1 // DESC
         * sort[createdAt]=0 // ASC

      summary: List Inventories
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: per_page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Inventory'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        format: nullable
                      next:
                        type: string
                        format: nullable
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                      from:
                        type: number
                      last_page:
                        type: number
                      path:
                        type: string
                      per_page:
                        type: number
                      to:
                        type: number
                      total:
                        type: number
  /api/wms/inventories/{key}:
    get:
      description: ''
      summary: Get an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      description: ''
      summary: Update an Inventory
      parameters:
        - name: key
          description: string|required
          in: path
          style: simple
          required: true
          schema:
            type: string
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  format: string
                name:
                  type: string
                  nullable: true
                  format: string
                quantity:
                  type: integer
                  nullable: true
                  format: integer
                unitCost:
                  type: integer
                  nullable: true
                  format: integer
                locationKey:
                  type: string
                  nullable: true
                  format: string
              example:
                code: '25337396'
                name: string
                quantity: 10
                unitCost: 10
                locationKey: '06000067641889'
  /api/wms/statuses/purchase-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/statuses/sales-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/statuses/stock-transfers:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/wms/statuses/shipment-orders:
    get:
      description: >
        Indicates the current condition or state of a process, object, or
        situation, highlighting its progress, position, or quality at any
        specific moment.
      summary: Get a Status
      parameters:
        - name: filter
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
        - name: page
          description: integer
          in: query
          style: form
          required: false
          schema:
            type: integer
        - name: sort
          description: array
          in: query
          style: form
          required: false
          schema:
            type: array
      tags:
        - WMS
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
  /api/integrations/current:
    get:
      description: ''
      summary: Get an Integration
      parameters: []
      tags:
        - System
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    delete:
      description: ''
      summary: Delete an Integration
      parameters: []
      tags:
        - System
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Organization:
      title: Organization
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        addresses:
          type: array
          description: Description
          nullable: false
          format: array
        billingAddress:
          type: string
          description: Description
          nullable: false
          format: string
        contacts:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000105913209'
        currencyKey: '02000900012694'
        name: string
        code: '19578026'
        description: Qui beatae facere et similique optio.
        addresses: '[]'
        billingAddress: string
        contacts: '[]'
        createdAt: '1989-07-31T16:01:01Z'
        updatedAt: '1987-08-10T13:37:14Z'
        deletedAt: '2009-04-23T05:40:59Z'
    Site:
      title: Site
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        contact:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        lat:
          type: string
          description: Description
          nullable: false
          format: string
        lng:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: string
          description: Description
          nullable: false
          format: string
        properties:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000292849101'
        code: '13737184'
        contact: string
        organizationKey: '01000958114444'
        customerKey: '04000676194456'
        name: string
        lat: string
        lng: string
        address: string
        properties: string
        notes: string
        createdAt: '2022-06-05T03:41:27Z'
        updatedAt: '1995-06-09T00:16:46Z'
        deletedAt: '2017-04-30T22:12:49Z'
    Location:
      title: Location
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000968124721'
        siteKey: '05000158284136'
        parentKey: '04000670776299'
        name: string
        description: Sed sunt maiores explicabo debitis.
        code: '25460148'
        type: string
        address: string
        createdAt: '1992-05-09T13:31:17Z'
        updatedAt: '2021-07-21T19:20:37Z'
        deletedAt: '1984-10-16T17:51:52Z'
    Storeroom:
      title: Storeroom
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        userManagerKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        priority:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000169377775'
        parentKey: '07000003875737'
        siteKey: '02000388939081'
        locationKey: '09000103414513'
        userManagerKey: '09000978311771'
        code: '06449827'
        name: string
        type: string
        description: Cupiditate cumque maxime autem qui.
        priority: string
        createdAt: '1985-05-25T06:38:32Z'
        updatedAt: '1985-11-02T02:53:15Z'
        deletedAt: '1981-06-02T13:15:00Z'
    Account:
      title: Account
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000950202814'
        code: '17745109'
        name: string
        description: Quia culpa sapiente aspernatur aut iusto sequi.
        createdAt: '2011-06-03T09:42:30Z'
        updatedAt: '1987-10-31T20:56:36Z'
        deletedAt: '2015-03-24T17:59:35Z'
    Team:
      title: Team
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '01000446030008'
        accountKey: '04000053097788'
        code: '54139152'
        name: string
        description: Repellat omnis odio consequatur vel vitae.
        createdAt: '1998-09-15T04:44:39Z'
        updatedAt: '1984-10-16T14:16:24Z'
        deletedAt: '1988-11-10T16:05:26Z'
    Labor:
      title: Labor
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        locationKeys:
          type: array
          description: Description
          nullable: false
          format: array
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userId:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        note:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        cost:
          type: string
          description: Description
          nullable: false
          format: string
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '07000296862737'
        siteKeys: '[]'
        locationKeys: '[]'
        accountKey: '05000224065853'
        teamKey: '06000945801629'
        userId: string
        name: string
        roleName: string
        description: Eum vel autem ipsa nam numquam cum voluptas.
        note: string
        isActive: string
        cost: string
        currency: string
        createdAt: '2024-04-22T17:49:45Z'
        updatedAt: '2013-05-16T00:12:47Z'
        deletedAt: '1973-07-04T01:08:08Z'
    User:
      title: User
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        locationKeys:
          type: array
          description: Description
          nullable: false
          format: array
        name:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000624003695'
        organizationKey: '07000504749708'
        siteKeys: '[]'
        locationKeys: '[]'
        name: string
        roleName: string
        description: Aut in aut quasi ut nostrum ex.
        notes: string
        isActive: string
        createdAt: '1992-06-24T20:59:14Z'
        updatedAt: '1975-06-15T08:56:31Z'
        deletedAt: '1976-05-07T23:41:54Z'
    UnitOfMeasure:
      title: UnitOfMeasure
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
      example:
        key: '02000977393184'
        name: string
        code: '78221697'
        isActive: string
    Company:
      title: Company
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        addresses:
          type: array
          description: Description
          nullable: false
          format: array
        billingAddress:
          type: array
          description: Description
          nullable: false
          format: array
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000562945937'
        parentKey: '05000055632506'
        name: string
        code: '48866569'
        addresses: '[]'
        billingAddress: '[]'
        currencyKey: '04000488006178'
        notes: string
        createdAt: '2001-07-27T16:26:50Z'
        updatedAt: '2005-07-23T06:25:03Z'
        deletedAt: '2015-10-11T05:41:02Z'
    Vendor:
      title: Vendor
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: string
          description: Description
          nullable: false
          format: string
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000319278142'
        name: string
        code: '39152237'
        address: string
        currency: string
        notes: string
        createdAt: '2019-03-08T23:23:22Z'
        updatedAt: '2001-09-10T10:27:56Z'
        deletedAt: '2015-08-13T04:22:37Z'
    Customer:
      title: Customer
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        address:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        contactPerson:
          type: string
          description: Description
          nullable: false
          format: string
        paymentTerms:
          type: string
          description: Description
          nullable: false
          format: string
        currencyCode:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000608464753'
        name: string
        code: '26541266'
        address: string
        notes: string
        isActive: string
        contactPerson: string
        paymentTerms: string
        currencyCode: string
        createdAt: '2013-01-11T21:08:55Z'
        updatedAt: '2013-03-22T04:07:41Z'
        deletedAt: '1984-08-19T08:22:37Z'
    Stock:
      title: Stock
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        productKey:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        position:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        expiresAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000541583133'
        productKey: '00000605175926'
        materialKey: '05000836342546'
        locationKey: '06000999898334'
        storeroomKey: '02000931308081'
        assetKey: '07000480554722'
        position: string
        uomKey: '09000484416051'
        quantity: string
        expiresAt: '2017-06-07T09:24:57Z'
        createdAt: '2004-11-26T10:11:09Z'
        updatedAt: '2005-08-21T02:38:44Z'
        deletedAt: '2014-01-21T23:42:00Z'
    PurchaseOrderStatus:
      title: PurchaseOrderStatus
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: object
          description: Description
          nullable: false
          format: object
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        warehouseName:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        terms:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAddress:
          type: string
          description: Description
          nullable: false
          format: string
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        lines:
          type: array
          description: Description
          nullable: false
          format: array
      example:
        key: '03000706646302'
        siteKey: '08000483371063'
        orderDate: '2013-09-05T03:07:50Z'
        vendorKey: '07000187329155'
        orderNo: string
        status: string
        warehouseName: string
        title: Aliquid quas et eveniet ipsam est voluptatem.
        description: Quidem itaque ullam fugiat quae magni non.
        dueAt: '1975-09-10T06:28:53Z'
        approvedAt: '2007-06-10T06:02:42Z'
        completedAt: '1972-04-23T20:43:50Z'
        shippingMethod: string
        terms: string
        notes: string
        deliveryAddress: string
        currency: string
        totalNetValue: string
        totalGrossValue: string
        updatedAt: '1971-08-05T08:57:17Z'
        lines: '[]'
    PurchaseOrder:
      title: PurchaseOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: object
          description: Description
          nullable: false
          format: object
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        warehouseName:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        terms:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        deliveryAddress:
          type: string
          description: Description
          nullable: false
          format: string
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        lines:
          type: array
          description: Description
          nullable: false
          format: array
      example:
        key: '00000211902210'
        siteKey: '00000510620596'
        orderDate: '1994-11-04T20:15:51Z'
        vendorKey: '01000705916762'
        orderNo: string
        status: string
        warehouseName: string
        title: Aliquam neque aut ut omnis consectetur.
        description: Aut et magni et quia. Enim ut eveniet sit.
        dueAt: '2019-11-24T19:25:06Z'
        approvedAt: '1979-09-16T03:09:41Z'
        completedAt: '1983-09-11T01:02:52Z'
        shippingMethod: string
        terms: string
        notes: string
        deliveryAddress: string
        currency: string
        totalNetValue: string
        totalGrossValue: string
        updatedAt: '1992-05-26T23:06:03Z'
        lines: '[]'
    PurchaseOrderCollection:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseOrder'
    LineItem:
      title: LineItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        partKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineNo:
          type: string
          description: Description
          nullable: false
          format: string
        warehouseName:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        lineRef:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: string
          description: Description
          nullable: false
          format: string
        receivedQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        uom:
          type: object
          description: Description
          nullable: false
          format: object
        cost:
          type: string
          description: Description
          nullable: false
          format: string
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        lineTotalValue:
          type: object
          description: Description
          nullable: false
          format: object
        lineTaxValue:
          type: object
          description: Description
          nullable: false
          format: object
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000436829597'
        locationKey: '03000826260324'
        assetKey: '00000583492921'
        partKey: '08000811701007'
        vendorKey: '04000572925331'
        lineNo: string
        warehouseName: string
        code: '65667507'
        title: Laborum blanditiis blanditiis qui.
        description: Ab illo voluptatibus vitae.
        lineRef: string
        quantity: string
        receivedQuantity: string
        type: string
        status: string
        uom: string
        cost: string
        currency: string
        lineTotalValue: string
        lineTaxValue: string
        notes: string
        dueAt: '2014-10-05T07:50:15Z'
        createdAt: '1982-07-05T22:43:59Z'
        updatedAt: '1978-11-30T12:29:37Z'
    MaterialInventory: []
    MaterialItem:
      title: MaterialItem
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        materialKey:
          type: string
          description: Description
          nullable: false
          format: string
        assemblyKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetTemplateKey:
          type: string
          description: Description
          nullable: false
          format: string
        workOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        pmKey:
          type: string
          description: Description
          nullable: false
          format: string
        productionOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        drawingNumber:
          type: string
          description: Description
          nullable: false
          format: string
        positionNumber:
          type: string
          description: Description
          nullable: false
          format: string
        documentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        requiredQuantity:
          type: object
          description: Description
          nullable: false
          format: object
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000464048814'
        materialKey: '06000077315636'
        assemblyKey: '08000782685753'
        assetKey: '09000241477803'
        assetTemplateKey: '02000601873663'
        workOrderKey: '00000750769864'
        pmKey: '04000331920471'
        productionOrderKey: '00000389853164'
        partNumber: string
        drawingNumber: string
        positionNumber: string
        documentKey: '00000325551727'
        name: string
        uomKey: '04000519768083'
        quantity: string
        requiredQuantity: string
        createdAt: '2004-04-10T10:00:32Z'
        updatedAt: '2015-07-30T14:46:06Z'
        deletedAt: '2000-02-15T17:09:45Z'
    Material:
      title: Material
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        parentKeys:
          type: array
          description: Description
          nullable: false
          format: array
        assetKeys:
          type: array
          description: Description
          nullable: false
          format: array
        vendorKeys:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isAssembly:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        criticality:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        minimumQuantity:
          type: string
          description: Description
          nullable: false
          format: string
        uom:
          type: object
          description: Description
          nullable: false
          format: object
        cost:
          type: object
          description: Description
          nullable: false
          format: object
        currency:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
        inventory:
          type: array
          description: Description
          nullable: false
          format: array
        drawings:
          type: array
          description: Description
          nullable: false
          format: array
      example:
        key: '00000931605457'
        siteKeys: '[]'
        parentKeys: '[]'
        assetKeys: '[]'
        vendorKeys: string
        documents: '[]'
        accountKey: '07000283161052'
        code: '67710195'
        isAssembly: string
        partNumber: string
        name: string
        description: Sint quia harum nisi officiis cum enim maxime.
        notes: string
        criticality: string
        isActive: string
        manufacturerName: string
        minimumQuantity: string
        uom: string
        cost: string
        currency: string
        createdAt: '1994-11-14T21:38:43Z'
        updatedAt: '1983-03-16T09:25:58Z'
        deletedAt: '1988-01-28T06:25:16Z'
        inventory: '[]'
        drawings: '[]'
    MaterialCollection:
      type: array
      items:
        $ref: '#/components/schemas/Material'
    Asset:
      title: Asset
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        modelKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        criticality:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        modelName:
          type: string
          description: Description
          nullable: false
          format: string
        serialNumber:
          type: string
          description: Description
          nullable: false
          format: string
        activatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deactivatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000812001140'
        siteKey: '06000173313097'
        parentKey: '04000123503977'
        vendorKey: '08000015322522'
        modelKey: '05000759497520'
        teamKey: '00000973814336'
        documents: '[]'
        locationKey: '05000082559787'
        customerKey: '02000207835404'
        accountKey: '05000329778064'
        name: string
        description: Non ab exercitationem maxime.
        notes: string
        categoryName: string
        criticality: string
        isActive: string
        manufacturerName: string
        modelName: string
        serialNumber: string
        activatedAt: '1974-12-09T20:51:23Z'
        deactivatedAt: '2016-06-15T19:01:52Z'
        createdAt: '2013-04-10T07:12:51Z'
        updatedAt: '1984-09-30T10:00:05Z'
        deletedAt: '1982-01-01T19:06:33Z'
    AssetDownTime:
      title: AssetDownTime
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        startedAt:
          type: string
          description: Description
          nullable: false
          format: string
        endedAt:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000970824071'
        assetKey: '06000544434516'
        description: Temporibus incidunt consequatur est quod dicta.
        startedAt: '2011-02-18T01:12:00Z'
        endedAt: '1979-11-16T18:58:14Z'
        categoryName: string
        severity: string
        notes: string
        createdAt: '1980-11-21T19:06:45Z'
        updatedAt: '2015-01-31T11:00:57Z'
    Model:
      title: Model
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        name:
          type: string
          description: Description
          nullable: false
          format: string
        manufacturerName:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000158233652'
        siteKey: '04000102502852'
        documents: '[]'
        name: string
        manufacturerName: string
        createdAt: '1976-03-26T23:29:26Z'
        updatedAt: '1975-09-02T09:40:13Z'
        deletedAt: '2013-08-15T12:00:50Z'
    Counter:
      title: Counter
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        uom:
          type: object
          description: Description
          nullable: false
          format: object
        lastReading:
          type: object
          description: Description
          nullable: false
          format: object
        lastReadingAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000336885886'
        siteKey: '01000342510432'
        assetKey: '00000539734446'
        name: string
        uom: string
        lastReading: string
        lastReadingAt: '2012-12-01T02:58:00Z'
        createdAt: '1992-10-28T17:15:24Z'
        updatedAt: '1986-06-17T16:43:34Z'
        deletedAt: '1991-05-14T17:31:20Z'
    CounterReading:
      title: CounterReading
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        meterKey:
          type: string
          description: Description
          nullable: false
          format: string
        reading:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000904635218'
        assetKey: '06000787882587'
        meterKey: '04000377069414'
        reading: string
        createdAt: '2014-07-18T16:30:06Z'
    PreventiveMaintenance:
      title: PreventiveMaintenance
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKeys:
          type: array
          description: Description
          nullable: false
          format: array
        assetKeys:
          type: array
          description: Description
          nullable: false
          format: array
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        instructions:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        documentKey:
          type: string
          description: Description
          nullable: false
          format: string
        documentPage:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        nextScheduledAt:
          type: string
          description: Description
          nullable: false
          format: string
        lastScheduledAt:
          type: string
          description: Description
          nullable: false
          format: string
        lastCompletedAt:
          type: string
          description: Description
          nullable: false
          format: string
        lastCompletionRemarks:
          type: string
          description: Description
          nullable: false
          format: string
        materials:
          type: array
          description: Description
          nullable: false
          format: array
        triggers:
          type: array
          description: Description
          nullable: false
          format: array
        tasks:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000010121780'
        siteKeys: '[]'
        assetKeys: '[]'
        teamKey: '04000256677910'
        accountKey: '05000424973777'
        title: Saepe in eos est id aut reprehenderit.
        description: Ut quos et tempora aut delectus.
        instructions: string
        status: string
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        documents: '[]'
        documentKey: '04000755816818'
        documentPage: string
        notes: string
        dueAt: '1976-06-08T07:13:26Z'
        nextScheduledAt: '2014-09-13T05:10:52Z'
        lastScheduledAt: '2006-12-13T23:30:05Z'
        lastCompletedAt: '1971-08-07T13:11:12Z'
        lastCompletionRemarks: string
        materials: '[]'
        triggers: '[]'
        tasks: '[]'
        createdAt: '1981-03-15T08:19:53Z'
        updatedAt: '2007-03-26T02:31:08Z'
        deletedAt: '1994-07-17T21:58:09Z'
    WorkOrderStatus:
      title: WorkOrderStatus
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        workRequestKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        pmKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userAssignedKey:
          type: string
          description: Description
          nullable: false
          format: string
        userCompletedKey:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        instructions:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        documentKey:
          type: string
          description: Description
          nullable: false
          format: string
        documentPage:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        scheduledAt:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completionRemarks:
          type: string
          description: Description
          nullable: false
          format: string
        materials:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000696878797'
        siteKey: '00000378059436'
        assetKey: '04000368538812'
        accountKey: '05000414486926'
        title: Neque iure atque optio voluptas quidem est.
        description: Dolorum fugiat qui dolore sunt dolor.
        workRequestKey: '09000081355248'
        code: '17386333'
        pmKey: '09000035589777'
        teamKey: '07000350264001'
        userAssignedKey: '02000975150626'
        userCompletedKey: '07000794631961'
        organizationKey: '06000555042338'
        instructions: string
        status: string
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        documentKey: '01000305662368'
        documentPage: string
        notes: string
        approvedAt: '2012-11-23T23:20:10Z'
        dueAt: '2016-02-14T11:16:44Z'
        scheduledAt: '2015-10-04T04:42:14Z'
        completedAt: '2018-05-09T09:01:23Z'
        completionRemarks: string
        materials: string
        documents: '[]'
        createdAt: '2012-09-01T19:00:36Z'
        updatedAt: '2009-01-20T12:57:30Z'
        deletedAt: '2015-06-01T18:11:18Z'
    WorkOrder:
      title: WorkOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        workRequestKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        pmKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userAssignedKey:
          type: string
          description: Description
          nullable: false
          format: string
        userCompletedKey:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        instructions:
          type: string
          description: Description
          nullable: false
          format: string
        status:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        documentKey:
          type: string
          description: Description
          nullable: false
          format: string
        documentPage:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        scheduledAt:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        completionRemarks:
          type: string
          description: Description
          nullable: false
          format: string
        materials:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        tasks:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '07000496323509'
        siteKey: '00000152102138'
        assetKey: '09000507740573'
        accountKey: '07000511305385'
        title: Voluptatem et unde sed nostrum.
        description: Laborum omnis perferendis laborum accusantium.
        workRequestKey: '00000750010245'
        code: '71856896'
        pmKey: '06000745058629'
        teamKey: '09000909798569'
        userAssignedKey: '06000929884748'
        userCompletedKey: '04000060950900'
        organizationKey: '01000571240152'
        instructions: string
        status: string
        statusKey: '02000036375218'
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        documentKey: '00000798001195'
        documentPage: string
        notes: string
        approvedAt: '1980-09-10T06:05:18Z'
        dueAt: '1986-11-28T02:57:33Z'
        scheduledAt: '1998-03-16T21:16:32Z'
        completedAt: '1998-04-17T08:13:05Z'
        completionRemarks: string
        materials: string
        documents: '[]'
        tasks: '[]'
        createdAt: '1972-12-16T22:02:37Z'
        updatedAt: '1979-08-29T04:21:57Z'
        deletedAt: '2015-07-03T20:32:52Z'
    WorkOrderCollection:
      type: array
      items:
        $ref: '#/components/schemas/WorkOrder'
    ServiceRequest:
      title: ServiceRequest
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        assetKey:
          type: string
          description: Description
          nullable: false
          format: string
        workOrderKey:
          type: string
          description: Description
          nullable: false
          format: string
        teamKey:
          type: string
          description: Description
          nullable: false
          format: string
        userRequestedKey:
          type: string
          description: Description
          nullable: false
          format: string
        userApprovedKey:
          type: string
          description: Description
          nullable: false
          format: string
        documents:
          type: array
          description: Description
          nullable: false
          format: array
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        severity:
          type: string
          description: Description
          nullable: false
          format: string
        estimatedTime:
          type: string
          description: Description
          nullable: false
          format: string
        roleName:
          type: string
          description: Description
          nullable: false
          format: string
        categoryName:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        approvedAt:
          type: string
          description: Description
          nullable: false
          format: string
        dueAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000578177129'
        siteKey: '07000814952381'
        locationKey: '01000844442669'
        storeroomKey: '00000978268395'
        assetKey: '03000782776718'
        workOrderKey: '01000555279357'
        teamKey: '09000115340582'
        userRequestedKey: '03000957785135'
        userApprovedKey: '06000344856246'
        documents: '[]'
        title: Sit eos velit vitae placeat.
        description: Omnis amet eum beatae rem nam et provident.
        statusKey: '08000860612889'
        severity: string
        estimatedTime: string
        roleName: string
        categoryName: string
        notes: string
        approvedAt: '1992-06-14T06:04:00Z'
        dueAt: '2023-08-18T03:46:37Z'
        createdAt: '1988-08-20T09:01:25Z'
        updatedAt: '2002-12-29T12:12:34Z'
        deletedAt: '1997-01-15T16:48:33Z'
    Document:
      title: Document
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        entityKeys:
          type: array
          description: Description
          nullable: false
          format: array
        name:
          type: string
          description: Description
          nullable: false
          format: string
        url:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        contentType:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '04000451282880'
        entityKeys: '[]'
        name: string
        url: string
        type: string
        contentType: string
        description: Magnam fugit consequatur molestiae.
        notes: string
        createdAt: '1972-06-09T17:14:58Z'
        updatedAt: '1976-11-30T05:04:30Z'
    Inventory:
      title: Inventory
      properties:
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: integer
          description: Description
          nullable: false
          format: integer
        unitCost:
          type: integer
          description: Description
          nullable: false
          format: integer
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        code: '48813792'
        name: string
        quantity: 10
        unitCost: 10
        locationKey: '05000348495314'
        updatedAt: '2013-12-09T16:49:13Z'
    Status:
      title: Status
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        subCode:
          type: string
          description: Description
          nullable: false
          format: string
        scope:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000156176512'
        organizationKey: '02000448237324'
        parentKey: '06000027614384'
        name: string
        code: '56596168'
        subCode: string
        scope: string
        isActive: string
        createdAt: '1987-11-03T19:50:51Z'
        updatedAt: '2022-11-11T10:41:40Z'
        deletedAt: '2013-12-16T02:46:45Z'
    Tax:
      title: Tax
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        organizationKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        taxPercentage:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000243617850'
        organizationKey: '08000836983086'
        name: string
        type: string
        taxPercentage: string
        isActive: string
        createdAt: '2011-11-26T16:42:11Z'
        updatedAt: '1977-12-17T03:44:53Z'
        deletedAt: '1997-09-17T08:13:03Z'
    Currency:
      title: Currency
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        isBase:
          type: string
          description: Description
          nullable: false
          format: string
        isActive:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000893550961'
        name: string
        code: '13550790'
        isBase: string
        isActive: string
        createdAt: '1996-01-26T08:57:47Z'
        updatedAt: '1973-12-06T08:24:00Z'
        deletedAt: '2023-07-04T07:18:58Z'
    ExchangeRate:
      title: ExchangeRate
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        baseCurrencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        rate:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '07000120261375'
        currencyKey: '03000557995470'
        baseCurrencyKey: '09000978075524'
        rate: string
        createdAt: '2004-02-14T13:12:53Z'
    Product:
      title: Product
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        groupKey:
          type: string
          description: Description
          nullable: false
          format: string
        uomKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        type:
          type: string
          description: Description
          nullable: false
          format: string
        isTaxable:
          type: boolean
          description: Description
          nullable: false
          format: boolean
        taxKeys:
          type: array
          description: Description
          nullable: false
          format: array
        status:
          type: string
          description: Description
          nullable: false
          format: string
        price:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        quantity:
          type: object
          description: Description
          nullable: false
          format: object
        sku:
          type: string
          description: Description
          nullable: false
          format: string
        upc:
          type: string
          description: Description
          nullable: false
          format: string
        ean:
          type: string
          description: Description
          nullable: false
          format: string
        isbn:
          type: string
          description: Description
          nullable: false
          format: string
        partNumber:
          type: string
          description: Description
          nullable: false
          format: string
        reorderLevel:
          type: object
          description: Description
          nullable: false
          format: object
        dimensions:
          type: object
          description: Description
          nullable: false
          format: object
        supplyOptions:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '08000590794935'
        groupKey: '06000963785483'
        uomKey: '02000504788471'
        code: '85283527'
        name: string
        description: Quia eaque et similique ad et repudiandae.
        type: string
        isTaxable: string
        taxKeys: '[]'
        status: string
        price: string
        currencyKey: '07000001066311'
        quantity: string
        sku: string
        upc: string
        ean: string
        isbn: string
        partNumber: string
        reorderLevel: string
        dimensions: string
        supplyOptions: '[]'
        createdAt: '1988-02-12T23:01:42Z'
        updatedAt: '2009-11-26T04:12:48Z'
        deletedAt: '2018-09-04T16:11:21Z'
    SalesOrder:
      title: SalesOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        shipmentDate:
          type: string
          description: Description
          nullable: false
          format: string
        contactPerson:
          type: string
          description: Description
          nullable: false
          format: string
        lines:
          type: array
          description: Description
          nullable: false
          format: array
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        currencyRate:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '06000791243467'
        customerKey: '01000416609003'
        userKey: '04000553850279'
        code: '65599655'
        orderNumber: string
        date: string
        statusKey: '02000712825908'
        shipmentDate: '1984-05-31T08:55:28Z'
        contactPerson: string
        lines: '[]'
        currencyKey: '04000825072706'
        currencyRate: string
        createdAt: '1985-11-13T00:26:24Z'
        updatedAt: '1986-01-03T16:58:50Z'
        deletedAt: '1980-04-24T05:45:20Z'
    Project:
      title: Project
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        accountKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        budget:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '07000270267454'
        siteKey: '04000599172596'
        name: string
        accountKey: '01000812160646'
        statusKey: '04000324969168'
        budget: string
        createdAt: '1991-11-28T01:15:47Z'
        updatedAt: '2021-01-19T06:38:49Z'
        deletedAt: '2013-11-07T03:19:17Z'
    Invoice:
      title: Invoice
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        invoiceNumber:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        poKey:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          description: Description
          nullable: false
          format: array
        invoiceDate:
          type: string
          description: Description
          nullable: false
          format: string
        dueDate:
          type: string
          description: Description
          nullable: false
          format: string
        receivedDate:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '03000381721457'
        invoiceNumber: string
        vendorKey: '04000822884034'
        poKey: '03000351566476'
        statusKey: '00000042361343'
        lineItems: '[]'
        invoiceDate: '1979-06-07T06:20:27Z'
        dueDate: '2010-06-23T10:40:23Z'
        receivedDate: '2016-09-06T23:56:18Z'
        currencyKey: '02000733560466'
        createdAt: '1999-10-23T11:22:54Z'
        updatedAt: '2014-09-10T01:03:03Z'
        deletedAt: '2002-04-06T00:31:17Z'
    Receipt:
      title: Receipt
      type: object
    BillOfMaterial:
      title: BillOfMaterial
      type: object
    ProductionOrder:
      title: ProductionOrder
      type: object
    Receiving:
      title: Receiving
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        siteKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        poKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        orderNo:
          type: string
          description: Description
          nullable: false
          format: string
        orderDate:
          type: string
          description: Description
          nullable: false
          format: string
        title:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        completedAt:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        currencyKey:
          type: string
          description: Description
          nullable: false
          format: string
        totalNetValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalTaxValue:
          type: string
          description: Description
          nullable: false
          format: string
        totalGrossValue:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          description: Description
          nullable: false
          format: array
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000044578698'
        siteKey: '00000459108703'
        vendorKey: '04000691925252'
        poKey: '02000664474609'
        code: '65288658'
        orderNo: string
        orderDate: '1986-06-30T10:27:22Z'
        title: Inventore sunt natus eos atque expedita.
        description: Quae error eaque id rem esse.
        completedAt: '2008-06-03T09:20:06Z'
        shippingMethod: string
        notes: string
        currencyKey: '03000004968600'
        totalNetValue: string
        totalTaxValue: string
        totalGrossValue: string
        lineItems: '[]'
        createdAt: '2019-07-23T23:26:26Z'
        updatedAt: '1996-08-01T06:16:28Z'
    RequestForQuotation:
      title: RequestForQuotation
      type: object
    PurchaseRequisition:
      title: PurchaseRequisition
      type: object
    ProductGroup:
      title: ProductGroup
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        parentKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        name:
          type: string
          description: Description
          nullable: false
          format: string
        description:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '05000388243089'
        parentKey: '04000584598505'
        code: '26998695'
        name: string
        description: Numquam inventore fugiat dolor ut.
        updatedAt: '2009-01-02T05:18:28Z'
        createdAt: '1997-03-29T20:19:41Z'
        deletedAt: '2009-03-26T11:13:23Z'
    StockTransfer:
      title: StockTransfer
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        fromLocationKey:
          type: string
          description: Description
          nullable: false
          format: string
        toLocationKey:
          type: string
          description: Description
          nullable: false
          format: string
        fromStoreroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        toStoreroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        code:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: string
          description: Description
          nullable: false
          format: string
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '02000814357004'
        fromLocationKey: '08000262705780'
        toLocationKey: '01000903714849'
        fromStoreroomKey: '00000212158199'
        toStoreroomKey: '08000614257129'
        code: '52027864'
        date: string
        lineItems: string
        orderNumber: string
        createdAt: '1998-05-16T05:18:26Z'
        updatedAt: '1973-09-23T03:16:54Z'
        deletedAt: '1982-09-14T15:49:19Z'
    StockAdjustment:
      title: StockAdjustment
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        locationKey:
          type: string
          description: Description
          nullable: false
          format: string
        storeroomKey:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        reason:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          description: Description
          nullable: false
          format: array
        adjustmentNumber:
          type: string
          description: Description
          nullable: false
          format: string
        total:
          type: object
          description: Description
          nullable: false
          format: object
        type:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '09000221277982'
        locationKey: '06000725152236'
        storeroomKey: '02000829672493'
        userKey: '05000604591466'
        date: string
        reason: string
        lineItems: '[]'
        adjustmentNumber: string
        total: string
        type: string
        createdAt: '1972-08-07T22:45:58Z'
        updatedAt: '1984-03-08T17:01:25Z'
        deletedAt: '1973-05-31T21:44:13Z'
    ShipmentOrder:
      title: ShipmentOrder
      properties:
        key:
          type: string
          description: Description
          nullable: false
          format: string
        userKey:
          type: string
          description: Description
          nullable: false
          format: string
        customerKey:
          type: string
          description: Description
          nullable: false
          format: string
        vendorKey:
          type: string
          description: Description
          nullable: false
          format: string
        orderNumber:
          type: string
          description: Description
          nullable: false
          format: string
        shipmentNumber:
          type: string
          description: Description
          nullable: false
          format: string
        date:
          type: string
          description: Description
          nullable: false
          format: string
        statusKey:
          type: string
          description: Description
          nullable: false
          format: string
        lineItems:
          type: array
          description: Description
          nullable: false
          format: array
        destinationAddress:
          type: string
          description: Description
          nullable: false
          format: string
        carrierName:
          type: string
          description: Description
          nullable: false
          format: string
        shippingMethod:
          type: string
          description: Description
          nullable: false
          format: string
        notes:
          type: string
          description: Description
          nullable: false
          format: string
        createdAt:
          type: string
          description: Description
          nullable: false
          format: string
        updatedAt:
          type: string
          description: Description
          nullable: false
          format: string
        deletedAt:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        key: '00000466671392'
        userKey: '03000801270347'
        customerKey: '05000061367130'
        vendorKey: '04000327376510'
        orderNumber: string
        shipmentNumber: string
        date: string
        statusKey: '02000477407042'
        lineItems: '[]'
        destinationAddress: string
        carrierName: string
        shippingMethod: string
        notes: string
        createdAt: '1973-06-16T07:06:38Z'
        updatedAt: '2009-12-20T05:22:21Z'
        deletedAt: '1990-05-15T22:11:49Z'
    ShipmentOrderDelivered: []
    Integration:
      title: Integration
      properties:
        id:
          type: string
          description: Description
          nullable: false
          format: string
        company_name:
          type: string
          description: Description
          nullable: false
          format: string
        email:
          type: string
          description: Description
          nullable: false
          format: string
        provider:
          type: string
          description: Description
          nullable: false
          format: string
        updated_at:
          type: string
          description: Description
          nullable: false
          format: string
        sync_status:
          type: string
          description: Description
          nullable: false
          format: string
        sync_updated_at:
          type: string
          description: Description
          nullable: false
          format: string
      example:
        id: string
        company_name: string
        email: string
        provider: string
        updated_at: string
        sync_status: string
        sync_updated_at: string
