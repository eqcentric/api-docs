{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Makini API Docs",
    "description": "Makini API Docs",
    "x-logo": {
      "url": "https://cdn.prod.website-files.com/6075c27738665c833a39fd83/608566aaabf4b474f887440f_Light.svg",
      "backgroundColor": "#000000",
      "altText": "Makini Logo"
    }
  },
  "servers": [
    {
      "url": "https://www.makini.io"
    }
  ],
  "paths": {
    "/api/eam/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "01000228756924",
                  "vendorKey": "02000697339534",
                  "code": "07778322",
                  "orderNo": "string",
                  "orderDate": "1981-05-22T03:11:43Z",
                  "statusKey": "07000520925371",
                  "title": "Est numquam et vero qui perspiciatis atque earum.",
                  "description": "Voluptatem ut a aut in.",
                  "dueAt": "2019-07-09T07:35:44Z",
                  "approvedAt": "1981-12-15T13:20:07Z",
                  "completedAt": "2000-11-15T09:14:59Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "02000196596261",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1977-05-05T11:19:34Z",
                  "updatedAt": "2011-01-30T07:37:16Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "06000994534019",
                  "vendorKey": "03000634320227",
                  "code": "81541836",
                  "orderNo": "string",
                  "orderDate": "2001-05-13T20:43:38Z",
                  "statusKey": "04000907412540",
                  "title": "In pariatur voluptates illo ad qui vitae ipsum.",
                  "description": "Veritatis quae tempore omnis aut.",
                  "dueAt": "1997-07-06T12:05:13Z",
                  "approvedAt": "2006-05-03T14:06:23Z",
                  "completedAt": "1977-07-31T21:28:43Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "05000257742861",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1983-06-25T11:16:00Z",
                  "updatedAt": "1981-11-01T21:04:28Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Material"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "75577254",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "03000002355037"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "07000527970626",
                  "code": "04896944",
                  "isAssembly": "false",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Non autem aut unde.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "07000421295133",
                  "code": "34670118",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Dolor ea quas corporis.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets": {
      "get": {
        "description": "A physical entity in the facility's hierarchy structure. It can be either equipment available for maintenance or system of assets in site hierarchy.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Assets",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Asset"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Asset"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets/{key}": {
      "get": {
        "description": "A physical entity in the facility's hierarchy structure. It can be either equipment available for maintenance or system of assets in site hierarchy.\n",
        "summary": "Get an Asset",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Asset"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Asset"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Asset",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Asset"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Asset"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "parentKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "modelKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "modelName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serialNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "activatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deactivatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "01000730818282",
                  "parentKey": "07000139279047",
                  "vendorKey": "03000531245547",
                  "modelKey": "03000750530601",
                  "teamKey": "02000096716696",
                  "locationKey": "04000294120214",
                  "accountKey": "08000694101186",
                  "name": "string",
                  "description": "Facere quaerat sunt voluptas natus dolores.",
                  "notes": "string",
                  "categoryName": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "modelName": "string",
                  "serialNumber": "string",
                  "activatedAt": "2022-10-27T16:08:01Z",
                  "deactivatedAt": "1985-03-08T07:19:14Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets-downtime": {
      "get": {
        "description": "Information on planned or unplanned downtime periods for assets.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List AssetDowntimes",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["AssetDowntime"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssetDowntime"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets-downtime/{key}": {
      "get": {
        "description": "Information on planned or unplanned downtime periods for assets.\n",
        "summary": "Get an AssetDowntime",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["AssetDowntime"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssetDowntime"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Models",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Model"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Model"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Model",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Model"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Model"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meters": {
      "get": {
        "description": "Is a tool for tracking the number of specific events or operations, used for analyzing performance and other parameters, as well as scheduling condition-based maintenance\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Counters",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Counter"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Counter"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meters/{key}": {
      "get": {
        "description": "Is a tool for tracking the number of specific events or operations, used for analyzing performance and other parameters, as well as scheduling condition-based maintenance\n",
        "summary": "Get a Counter",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Counter"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Counter"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meter-readings": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List CounterReadings",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["CounterReading"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CounterReading"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meter-readings/{key}": {
      "get": {
        "description": "",
        "summary": "Get a CounterReading",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["CounterReading"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CounterReading"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm": {
      "get": {
        "description": "Templates for time-based or counter-based maintenance, used as a basis for creating new work orders\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PreventiveMaintenances",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["PreventiveMaintenance"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PreventiveMaintenance"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm/{key}": {
      "get": {
        "description": "Templates for time-based or counter-based maintenance, used as a basis for creating new work orders\n",
        "summary": "Get a PreventiveMaintenance",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PreventiveMaintenance"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreventiveMaintenance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/custom-fields": {
      "get": {
        "description": "",
        "summary": "List CustomFields of Custom-field",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["CustomField"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomField"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WorkOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders": {
      "get": {
        "description": "A work order is a document for organizing the execution of work or service, describing the task, location, resources, and deadlines\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List WorkOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WorkOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a WorkOrder",
        "parameters": [],
        "tags": ["WorkOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "storeroomKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetDowntimeKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serviceRequestKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "pmKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "laborAssignedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "userApprovedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "instructions": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "severity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "actualTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "roleName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "type": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "contentType": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "tasks": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "priority": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "checkList": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completionRemarks": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "title": "Molestiae inventore fugiat consequatur officiis.",
                  "statusKey": "00000621235943",
                  "scheduledAt": "1977-07-03T22:49:29Z",
                  "siteKey": "00000720335306",
                  "locationKey": "01000132039213",
                  "storeroomKey": "02000873143450",
                  "assetKey": "03000801906564",
                  "assetDowntimeKey": "05000693556228",
                  "serviceRequestKey": "07000562703729",
                  "pmKey": "02000678269600",
                  "teamKey": "06000970657655",
                  "laborAssignedKey": "09000735942347",
                  "accountKey": "06000699794265",
                  "userApprovedKey": "04000897270237",
                  "code": "44428686",
                  "description": "Quia omnis officia animi consequuntur quidem.",
                  "instructions": "string",
                  "severity": "string",
                  "estimatedTime": 10,
                  "actualTime": 10,
                  "roleName": "string",
                  "categoryName": "string",
                  "documents": [
                    {
                      "name": "string",
                      "url": "string",
                      "type": "string",
                      "contentType": "string",
                      "description": "Qui ratione id eaque porro porro.",
                      "notes": "string"
                    }
                  ],
                  "tasks": [
                    {
                      "code": "32537741",
                      "title": "Voluptates dicta repellendus a mollitia quia nam.",
                      "description": "Expedita qui repudiandae architecto molestias.",
                      "priority": "string",
                      "checkList": "string"
                    }
                  ],
                  "notes": "string",
                  "approvedAt": "1983-10-25T02:21:03Z",
                  "dueAt": "1998-06-04T00:36:49Z",
                  "completedAt": "2024-03-30T12:22:11Z",
                  "completionRemarks": "string",
                  "createdAt": "1982-12-02T18:08:10Z",
                  "updatedAt": "1972-09-24T03:37:02Z",
                  "deletedAt": "2016-04-02T01:24:44Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}": {
      "get": {
        "description": "A work order is a document for organizing the execution of work or service, describing the task, location, resources, and deadlines\n",
        "summary": "Get a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WorkOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WorkOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "storeroomKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetDowntimeKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serviceRequestKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "pmKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "laborAssignedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "userApprovedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "instructions": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "severity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "actualTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "roleName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "type": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "contentType": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "tasks": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "priority": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "checkList": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completionRemarks": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "title": "Sapiente incidunt placeat ut et.",
                  "statusKey": "06000791755770",
                  "scheduledAt": "1983-11-25T00:20:46Z",
                  "siteKey": "00000041243086",
                  "locationKey": "02000636914310",
                  "storeroomKey": "01000718975414",
                  "assetKey": "01000893709696",
                  "assetDowntimeKey": "02000278375781",
                  "serviceRequestKey": "09000162321716",
                  "pmKey": "07000966978140",
                  "teamKey": "02000375373824",
                  "laborAssignedKey": "00000764878673",
                  "accountKey": "07000124429340",
                  "userApprovedKey": "06000250658557",
                  "code": "88288505",
                  "description": "Qui et et culpa et facere et id.",
                  "instructions": "string",
                  "severity": "string",
                  "estimatedTime": 10,
                  "actualTime": 10,
                  "roleName": "string",
                  "categoryName": "string",
                  "documents": [
                    {
                      "name": "string",
                      "url": "string",
                      "type": "string",
                      "contentType": "string",
                      "description": "Amet est error rerum rerum.",
                      "notes": "string"
                    }
                  ],
                  "tasks": [
                    {
                      "code": "63873757",
                      "title": "Alias id veniam neque doloremque impedit itaque.",
                      "description": "Pariatur perferendis enim odio ea eos eligendi.",
                      "priority": "string",
                      "checkList": "string"
                    }
                  ],
                  "notes": "string",
                  "approvedAt": "2022-06-17T08:06:07Z",
                  "dueAt": "1987-03-23T07:12:57Z",
                  "completedAt": "2004-01-13T04:17:22Z",
                  "completionRemarks": "string",
                  "createdAt": "2000-06-04T20:49:51Z",
                  "updatedAt": "2007-07-22T07:03:38Z",
                  "deletedAt": "1991-07-31T15:34:43Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/service-requests": {
      "get": {
        "description": "Internal or external request for services or support, aimed at maintaining operational activities made by employees or customer and partners\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ServiceRequests",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ServiceRequest"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRequest"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a ServiceRequest",
        "parameters": [],
        "tags": ["ServiceRequest"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userRequestedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "userRequestedKey": "05000684377425",
                  "title": "Minus libero odit ea amet qui suscipit.",
                  "assetKey": "05000468292377",
                  "description": "Iusto aliquid sunt atque rem."
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/service-requests/{key}": {
      "get": {
        "description": "Internal or external request for services or support, aimed at maintaining operational activities made by employees or customer and partners\n",
        "summary": "Get a ServiceRequest",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ServiceRequest"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/documents": {
      "get": {
        "description": "Refers to any file containing details on maintenance, operation, and asset management, including manuals, records, and reports.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Documents",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Document"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "",
        "summary": "Create a Document",
        "parameters": [],
        "tags": ["Document"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "nullable": false,
                    "format": "binary"
                  },
                  "name": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  }
                },
                "example": {
                  "file": "string",
                  "name": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/documents/{key}": {
      "get": {
        "description": "Refers to any file containing details on maintenance, operation, and asset management, including manuals, records, and reports.\n",
        "summary": "Get a Document",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Document"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "51891077",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "07000972035265"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/work-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Work-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/service-requests": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Service-request",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/taxes": {
      "get": {
        "description": "Tax applicable on sales orders and purchase orders\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Taxes",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Tax"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tax"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/taxes/{key}": {
      "get": {
        "description": "Tax applicable on sales orders and purchase orders\n",
        "summary": "Get a Tax",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Tax"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tax"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/currencies": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Currencies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Currency"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/currencies/{key}": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n",
        "summary": "Get a Currency",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Currency"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/exchange-rates": {
      "get": {
        "description": "An exchange rate refers to the value assigned to convert one currency into another for the purpose of financial transactions, accounting, and reporting within the system.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ExchangeRates",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ExchangeRate"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRate"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/exchange-rates/{key}": {
      "get": {
        "description": "An exchange rate refers to the value assigned to convert one currency into another for the purpose of financial transactions, accounting, and reporting within the system.\n",
        "summary": "Get an ExchangeRate",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ExchangeRate"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExchangeRate"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/products": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Products",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/products/{key}": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n",
        "summary": "Get a Product",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sales-orders": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List SalesOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["SalesOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sales-orders/{key}": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n",
        "summary": "Get a SalesOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["SalesOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SalesOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/projects": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Projects",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Project"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/projects/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Project",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Project"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/invoices": {
      "get": {
        "description": "Refers to a document issued by a company to a customer, confirming the completion of services rendered or goods delivered and requesting payment. It typically includes details of the products or services provided, their prices, the total amount due, as well as payment terms and methods.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Invoices",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Invoice"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create an Invoice",
        "parameters": [],
        "tags": ["Invoice"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoiceNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "poKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "lineItem": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "receivedDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "customerKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalTaxValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalGrossValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "invoiceNumber": "string",
                  "vendorKey": "05000609797120",
                  "poKey": "06000086250611",
                  "statusKey": "05000185849020",
                  "lineItem": "[]",
                  "invoiceDate": "1973-09-01T10:20:25Z",
                  "dueDate": "1989-08-14T02:26:45Z",
                  "receivedDate": "2018-12-15T04:47:44Z",
                  "currencyKey": "04000874410715",
                  "customerKey": "08000418182080",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/invoices/{key}": {
      "get": {
        "description": "Refers to a document issued by a company to a customer, confirming the completion of services rendered or goods delivered and requesting payment. It typically includes details of the products or services provided, their prices, the total amount due, as well as payment terms and methods.\n",
        "summary": "Get an Invoice",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Invoice"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Invoice",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Invoice"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoiceNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "poKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "lineItem": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "receivedDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "invoiceNumber": "string",
                  "vendorKey": "02000152472466",
                  "poKey": "07000877855763",
                  "statusKey": "08000688047166",
                  "lineItem": "[]",
                  "invoiceDate": "1978-09-29T09:53:38Z",
                  "dueDate": "1996-07-05T23:46:07Z",
                  "receivedDate": "2002-05-10T03:09:40Z",
                  "currencyKey": "03000278208687",
                  "createdAt": "2007-08-26T19:02:56Z",
                  "updatedAt": "1991-02-16T02:51:02Z",
                  "deletedAt": "2019-02-16T04:07:21Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receipts": {
      "get": {
        "description": "A 'receipt' is a document confirming payment received from a customer for goods or services.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Receipts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Receipt"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Receipt"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receipts/{key}": {
      "get": {
        "description": "A 'receipt' is a document confirming payment received from a customer for goods or services.\n",
        "summary": "Get a Receipt",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Receipt"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Receipt"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "05000834692277",
                  "vendorKey": "02000272861992",
                  "code": "39574350",
                  "orderNo": "string",
                  "orderDate": "2009-09-07T19:39:53Z",
                  "statusKey": "01000058956563",
                  "title": "A iusto animi laborum ab assumenda eum.",
                  "description": "Deleniti quo vitae minus esse asperiores totam.",
                  "dueAt": "2016-10-06T02:53:04Z",
                  "approvedAt": "1986-08-10T02:01:23Z",
                  "completedAt": "1993-03-10T17:21:57Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "09000805688344",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1980-09-25T04:27:17Z",
                  "updatedAt": "1991-12-03T16:26:41Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "06000711012889",
                  "vendorKey": "06000778328470",
                  "code": "20139087",
                  "orderNo": "string",
                  "orderDate": "1986-03-20T07:55:04Z",
                  "statusKey": "00000693666218",
                  "title": "Sunt recusandae dignissimos error et quos.",
                  "description": "Aut natus qui dignissimos corrupti rem quae.",
                  "dueAt": "1999-11-25T01:07:21Z",
                  "approvedAt": "1974-06-05T00:12:46Z",
                  "completedAt": "1994-12-03T16:31:09Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "01000601917697",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1980-11-11T17:15:06Z",
                  "updatedAt": "2015-03-21T13:11:15Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/bom": {
      "get": {
        "description": "A Bill of Materials is a detailed list of materials, instructions, or components needed to make a product. It's organized hierarchically, with the finished product at the top level, and includes quantities for production orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List BillOfMaterials",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["BillOfMaterial"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillOfMaterial"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/bom/{key}": {
      "get": {
        "description": "A Bill of Materials is a detailed list of materials, instructions, or components needed to make a product. It's organized hierarchically, with the finished product at the top level, and includes quantities for production orders.\n",
        "summary": "Get a BillOfMaterial",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["BillOfMaterial"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BillOfMaterial"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders": {
      "get": {
        "description": "An order to produce a specific quantity of products within a pre-defined time. It contains all the information required for the actual execution of the production process.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ProductionOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ProductionOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductionOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders/{key}": {
      "get": {
        "description": "An order to produce a specific quantity of products within a pre-defined time. It contains all the information required for the actual execution of the production process.\n",
        "summary": "Get a ProductionOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ProductionOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductionOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receiving": {
      "get": {
        "description": "\"Receiving\" is the process of accepting inbound products from external entities such as vendors or stores/distribution centers into the warehouse facility.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Receivings",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Receiving"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Receiving"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receiving/{key}": {
      "get": {
        "description": "\"Receiving\" is the process of accepting inbound products from external entities such as vendors or stores/distribution centers into the warehouse facility.\n",
        "summary": "Get a Receiving",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Receiving"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Receiving"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/rfq": {
      "get": {
        "description": "A Request for Quotation is a document that an organization sends to one or more suppliers asking a quotation for items.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List RequestForQuotations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["RequestForQuotation"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RequestForQuotation"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/rfq/{key}": {
      "get": {
        "description": "A Request for Quotation is a document that an organization sends to one or more suppliers asking a quotation for items.\n",
        "summary": "Get a RequestForQuotation",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["RequestForQuotation"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RequestForQuotation"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-requisitions": {
      "get": {
        "description": "A Purchase Requisition is an internal request for goods or services within a company, undergoing approval before being used to generate a purchase order for vendors.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseRequisitions",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["PurchaseRequisition"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseRequisition"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-requisitions/{key}": {
      "get": {
        "description": "A Purchase Requisition is an internal request for goods or services within a company, undergoing approval before being used to generate a purchase order for vendors.\n",
        "summary": "Get a PurchaseRequisition",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseRequisition"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseRequisition"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Material"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "74134458",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "05000231100926"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "08000789038550",
                  "code": "33900704",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Rem dolores provident repudiandae minima tempore.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "08000794767874",
                  "code": "00882002",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Omnis dicta totam quisquam consequatur.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "90424908",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "04000969347520"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/purchase-requisitions": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-requisition",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/sales-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Sales-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/projects": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Project",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/invoices": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Invoice",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/production-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Production-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/rfq": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Rfq",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/receiving": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Receiving",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Organization"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Site"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Storeroom"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Team"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Labor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/currencies": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Currencies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Currency"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/currencies/{key}": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n",
        "summary": "Get a Currency",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Currency"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["UnitOfMeasure"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Vendor"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/groups": {
      "get": {
        "description": "A Product Group categorizes similar items or products together for streamlined inventory management and analysis.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ProductGroups",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ProductGroup"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductGroup"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/groups/{key}": {
      "get": {
        "description": "A Product Group categorizes similar items or products together for streamlined inventory management and analysis.\n",
        "summary": "Get a ProductGroup",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ProductGroup"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductGroup"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/products": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Products",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/products/{key}": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n",
        "summary": "Get a Product",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Stock"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sales-orders": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List SalesOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["SalesOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sales-orders/{key}": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n",
        "summary": "Get a SalesOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["SalesOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SalesOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "08000901990848",
                  "vendorKey": "04000052223475",
                  "code": "50047659",
                  "orderNo": "string",
                  "orderDate": "2001-07-07T03:02:00Z",
                  "statusKey": "00000211313924",
                  "title": "Praesentium accusantium velit omnis.",
                  "description": "Sed velit alias dolor voluptate.",
                  "dueAt": "2009-10-03T16:21:48Z",
                  "approvedAt": "2012-02-17T00:47:21Z",
                  "completedAt": "1987-03-08T08:26:28Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "01000689440450",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1972-09-14T00:44:26Z",
                  "updatedAt": "1992-08-08T14:55:28Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["PurchaseOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "01000386831542",
                  "vendorKey": "04000254369613",
                  "code": "67188185",
                  "orderNo": "string",
                  "orderDate": "2018-09-12T16:38:44Z",
                  "statusKey": "03000333198710",
                  "title": "Doloribus quos et ad nemo quia deleniti.",
                  "description": "Laborum labore possimus explicabo.",
                  "dueAt": "2010-07-29T22:00:51Z",
                  "approvedAt": "2015-07-12T20:23:36Z",
                  "completedAt": "2011-03-23T15:38:29Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "04000416490509",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "2014-10-16T01:33:51Z",
                  "updatedAt": "2006-03-06T05:12:28Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["LineItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Material"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "42540045",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "09000496902612"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["MaterialItem"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "03000344627261",
                  "code": "21944437",
                  "isAssembly": "false",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Ad quia velit consequatur iusto nam aut.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Part"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "07000900903588",
                  "code": "31890205",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Iusto voluptates qui explicabo numquam.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "true",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-transfers": {
      "get": {
        "description": "\"Stock Transfer\" is a record of the movement of goods between warehouse locations, containing location and warehouse keys, status, code, date, line item information, and timestamps.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List StockTransfers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["StockTransfer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StockTransfer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-transfers/{key}": {
      "get": {
        "description": "\"Stock Transfer\" is a record of the movement of goods between warehouse locations, containing location and warehouse keys, status, code, date, line item information, and timestamps.\n",
        "summary": "Get a StockTransfer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["StockTransfer"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StockTransfer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-adjustments": {
      "get": {
        "description": "Is a record of inventory changes within a location or storeroom, detailing the user, date, reason, line items, adjustment number, total quantity adjusted, type, and timestamps.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List StockAdjustments",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["StockAdjustment"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StockAdjustment"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-adjustments/{key}": {
      "get": {
        "description": "Is a record of inventory changes within a location or storeroom, detailing the user, date, reason, line items, adjustment number, total quantity adjusted, type, and timestamps.\n",
        "summary": "Get a StockAdjustment",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["StockAdjustment"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StockAdjustment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders": {
      "get": {
        "description": "A shipment order is a document used by organizations to specify what items are being transferred from a storage location to a person at a new destination. It accompanies the shipment so the recipient can confirm they received the correct items.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ShipmentOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ShipmentOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders/{key}": {
      "get": {
        "description": "A shipment order is a document used by organizations to specify what items are being transferred from a storage location to a person at a new destination. It accompanies the shipment so the recipient can confirm they received the correct items.\n",
        "summary": "Get a ShipmentOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ShipmentOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders/{key}/delivered": {
      "post": {
        "description": "",
        "summary": "Create a ShipmentOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ShipmentOrder"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": []
              }
            }
          }
        }
      }
    },
    "/api/wms/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Inventory"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "03763131",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "07000937071272"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/sales-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Sales-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/stock-transfers": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Stock-transfer",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/shipment-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Shipment-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["Status"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/current": {
      "get": {
        "description": " Get current integration data.\n `sync_status` is status of our synchronization.\n   * inprogress\n   * done\n   * fulldone\n   * error\n\n   * fail (Authentication error: Invalid platform credentials)\n",
        "summary": "Get an Integration",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integration"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "Delete an Integration",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/system/connections/{id}": {
      "delete": {
        "description": "",
        "summary": "Delete a Connection",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Connection"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/system/connections/{id}/metadata": {
      "get": {
        "description": "",
        "summary": "List ConnectionMetadatas",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ConnectionMetadata"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConnectionMetadata"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a ConnectionMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ConnectionMetadata"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConnectionMetadata"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "nullable": false,
                      "format": "string"
                    },
                    "value": {
                      "type": "string",
                      "nullable": false,
                      "format": "string"
                    }
                  }
                },
                "example": [
                  {
                    "key": "uc_first",
                    "value": "UC Value"
                  },
                  {
                    "key": "uc_last",
                    "value": "Other uc value"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/system/connections": {
      "get": {
        "description": "",
        "summary": "List Connections",
        "parameters": [],
        "tags": ["Connection"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Connection"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Connection",
        "parameters": [],
        "tags": ["Connection"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConnectionStore"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "email": {
                    "type": "required|email",
                    "nullable": false,
                    "format": "required|email"
                  },
                  "provider": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "credentials": {
                    "type": "array",
                    "nullable": false,
                    "format": "array"
                  }
                },
                "example": {
                  "name": "Inextia",
                  "email": "hey@makini.io",
                  "provider": "inextia",
                  "credentials": {
                    "api": "https://sample.inextia.dk",
                    "login": "login",
                    "password": "password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passthrough": {
      "post": {
        "description": "",
        "summary": "Create a Passthrough",
        "parameters": [],
        "tags": ["Passthrough"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Passthrough"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "method": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "headers": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "query": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "base64encoded": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "body": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "sql": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "parameters": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  }
                },
                "example": {
                  "path": "dataservice",
                  "method": "post",
                  "headers": {
                    "Content-Type": "appication/json"
                  },
                  "body": {
                    "targetName": "F4801",
                    "targetType": "table",
                    "dataServiceType": "BROWSE",
                    "maxPageSize": 10,
                    "query": {
                      "autoFind": true,
                      "condition": [
                        {
                          "controlId": "F4801.DOCO",
                          "operator": "STR_NOT_BLANK"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Address": {
        "title": "Address",
        "properties": {
          "countryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addressLines": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "city": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "postCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "countryName": "string",
          "addressLines": "string",
          "city": "string",
          "postCode": "string",
          "phone": "string",
          "email": "string",
          "notes": "string",
          "createdAt": "2000-04-02T05:21:10Z",
          "updatedAt": "2014-03-10T08:15:27Z"
        }
      },
      "Contact": {
        "title": "Contact",
        "properties": {
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "position": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "phones": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "emails": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          }
        },
        "example": {
          "name": "string",
          "position": "string",
          "phones": "string",
          "emails": "string",
          "isActive": "true",
          "isDefault": "false"
        }
      },
      "Organization": {
        "title": "Organization",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "billingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000934948042",
          "currencyKey": "08000154005922",
          "name": "string",
          "code": "06766207",
          "description": "Commodi voluptas odio alias et.",
          "addresses": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1988-06-20T10:22:13Z",
              "updatedAt": "2014-08-03T17:48:49Z"
            }
          ],
          "billingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1979-03-04T06:43:08Z",
            "updatedAt": "1979-06-27T13:25:15Z"
          },
          "contacts": [
            {
              "name": "string",
              "position": "string",
              "phones": "string",
              "emails": "string",
              "isActive": "false",
              "isDefault": "true"
            }
          ],
          "createdAt": "1972-08-27T00:20:11Z",
          "updatedAt": "1990-01-11T01:36:11Z",
          "deletedAt": "1985-10-18T23:15:46Z"
        }
      },
      "Site": {
        "title": "Site",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contact": {
            "type": "object",
            "$ref": "#/components/schemas/Contact"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lng": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "properties": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000584251715",
          "organizationKey": "01000168117055",
          "name": "string",
          "code": "33437941",
          "description": "Aliquid nulla sed omnis vel.",
          "contact": {
            "name": "string",
            "position": "string",
            "phones": "string",
            "emails": "string",
            "isActive": "true",
            "isDefault": "false"
          },
          "customerKey": "03000979560529",
          "lat": "string",
          "lng": "string",
          "address": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2009-01-29T13:40:15Z",
            "updatedAt": "2020-06-28T16:33:16Z"
          },
          "billingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1978-08-23T17:47:16Z",
            "updatedAt": "1982-07-01T05:27:42Z"
          },
          "properties": "string",
          "notes": "string",
          "createdAt": "2021-11-03T16:31:36Z",
          "updatedAt": "1987-07-05T22:05:39Z",
          "deletedAt": "2008-07-01T11:34:05Z"
        }
      },
      "Location": {
        "title": "Location",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userManagerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "contact": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000051256523",
          "siteKey": "02000048052264",
          "parentKey": "01000106587581",
          "name": "string",
          "userManagerKey": "07000293266833",
          "description": "Vel sit qui optio perspiciatis.",
          "code": "39422606",
          "type": "string",
          "address": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2013-11-01T17:57:27Z",
            "updatedAt": "1988-07-07T11:46:33Z"
          },
          "isActive": "false",
          "contact": "string",
          "isDefault": "false",
          "createdAt": "2008-07-18T02:23:45Z",
          "updatedAt": "1999-05-30T07:38:18Z",
          "deletedAt": "1994-09-30T04:51:18Z"
        }
      },
      "Storeroom": {
        "title": "Storeroom",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userManagerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "priority": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000798665970",
          "parentKey": "01000903268541",
          "siteKey": "09000704697568",
          "locationKey": "03000956618275",
          "userManagerKey": "00000282420113",
          "code": "20087944",
          "name": "string",
          "type": "string",
          "description": "Consequuntur cupiditate est ut aut et.",
          "priority": "string",
          "createdAt": "1993-05-17T14:06:16Z",
          "updatedAt": "2010-03-12T08:33:28Z",
          "deletedAt": "1996-07-29T06:57:49Z"
        }
      },
      "Account": {
        "title": "Account",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "activatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "expiresAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000550660438",
          "code": "27168370",
          "name": "string",
          "description": "Laudantium blanditiis explicabo deserunt ut.",
          "activatedAt": "1979-12-03T00:57:43Z",
          "expiresAt": "2007-08-22T14:42:30Z",
          "createdAt": "2013-01-13T11:03:56Z",
          "updatedAt": "1996-05-05T06:47:27Z",
          "deletedAt": "2021-01-13T22:53:46Z"
        }
      },
      "Team": {
        "title": "Team",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000419674912",
          "accountKey": "00000411939695",
          "code": "65668702",
          "name": "string",
          "description": "Ea rerum aut sint.",
          "createdAt": "2002-08-08T20:16:31Z",
          "updatedAt": "2006-07-23T23:51:07Z",
          "deletedAt": "1982-06-06T03:20:39Z",
          "organizationKey": "06000353522714"
        }
      },
      "Labor": {
        "title": "Labor",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "locationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "costUomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000775281218",
          "organizationKeys": "string",
          "siteKeys": "[]",
          "locationKeys": "[]",
          "accountKey": "03000697705798",
          "vendorKey": "03000480949923",
          "userKey": "00000262975947",
          "teamKey": "08000593898777",
          "name": "string",
          "roleName": "string",
          "description": "Consectetur expedita omnis ipsam blanditiis et.",
          "notes": "string",
          "isActive": "true",
          "costUomKey": "00000271056203",
          "currencyKey": "09000008614766",
          "createdAt": "2004-05-04T06:03:19Z",
          "updatedAt": "1988-11-08T02:55:39Z",
          "deletedAt": "2017-01-13T06:39:38Z"
        }
      },
      "User": {
        "title": "User",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "locationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000972001729",
          "organizationKey": "02000576494551",
          "siteKeys": "[]",
          "locationKeys": "[]",
          "name": "string",
          "roleName": "string",
          "description": "Sed at sed voluptate eum.",
          "notes": "string",
          "isActive": "string",
          "createdAt": "1973-11-25T23:48:19Z",
          "updatedAt": "1989-01-17T08:18:05Z",
          "deletedAt": "1971-10-14T11:29:31Z"
        }
      },
      "UnitOfMeasure": {
        "title": "UnitOfMeasure",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          }
        },
        "example": {
          "key": "01000811548108",
          "name": "string",
          "code": "43302604",
          "isActive": "false"
        }
      },
      "Company": {
        "title": "Company",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "billingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000066444674",
          "parentKey": "00000491938693",
          "name": "string",
          "code": "13215323",
          "addresses": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1974-09-16T08:23:56Z",
              "updatedAt": "2016-04-30T02:53:46Z"
            }
          ],
          "billingAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1993-06-21T09:59:10Z",
              "updatedAt": "1995-07-20T19:04:20Z"
            }
          ],
          "currencyKey": "05000924411670",
          "notes": "string",
          "createdAt": "1978-11-15T08:46:30Z",
          "updatedAt": "2002-08-10T18:08:18Z",
          "deletedAt": "1992-10-04T14:01:21Z"
        }
      },
      "Vendor": {
        "title": "Vendor",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "companyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000317519790",
          "name": "string",
          "code": "14407291",
          "companyKey": "06000266678965",
          "createdAt": "2005-11-13T23:54:14Z",
          "updatedAt": "1975-09-03T05:39:22Z",
          "deletedAt": "1987-10-08T05:50:13Z"
        }
      },
      "Customer": {
        "title": "Customer",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "companyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000066979316",
          "name": "string",
          "code": "90473814",
          "companyKey": "08000349096320",
          "createdAt": "1993-04-18T02:42:14Z",
          "updatedAt": "2005-11-17T05:50:45Z",
          "deletedAt": "2001-11-14T03:04:46Z"
        }
      },
      "Stock": {
        "title": "Stock",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "position": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "expiresAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000862431573",
          "productKey": "05000529048100",
          "materialKey": "09000799718294",
          "locationKey": "03000269089434",
          "storeroomKey": "09000783263671",
          "assetKey": "00000451752719",
          "position": "string",
          "uomKey": "05000516588308",
          "quantity": "string",
          "expiresAt": "1972-06-17T03:48:13Z",
          "createdAt": "1992-12-10T04:04:08Z",
          "updatedAt": "1973-05-28T10:25:58Z",
          "deletedAt": "2023-09-06T02:11:57Z"
        }
      },
      "POLineItem": {
        "title": "POLineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000038100294",
          "locationKey": "02000181524998",
          "vendorKey": "00000034040673",
          "assetKey": "07000265981168",
          "materialKey": "06000874785607",
          "productKey": "01000508981444",
          "statusKey": "01000750142316",
          "storeroomKey": "03000840587232",
          "lineNo": "string",
          "code": "02951645",
          "type": "string",
          "name": "string",
          "description": "Corporis iste esse atque veritatis animi a alias.",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "uomKey": "06000465957490",
          "currencyKey": "02000844727608",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "notes": "string",
          "deliveryAt": "1992-10-15T17:56:36Z",
          "dueAt": "1987-08-23T20:15:19Z",
          "updatedAt": "2011-03-21T15:00:07Z"
        }
      },
      "PurchaseOrder": {
        "title": "PurchaseOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "terms": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          }
        },
        "example": {
          "key": "01000611322269",
          "siteKey": "04000434146944",
          "orderDate": "2011-05-15T18:13:54Z",
          "vendorKey": "04000653760072",
          "orderNo": "string",
          "statusKey": "03000311034134",
          "title": "Non sint unde est ipsa. Fuga sunt facilis at.",
          "description": "Earum earum laudantium et dolore.",
          "dueAt": "1975-11-24T15:10:53Z",
          "approvedAt": "2008-08-18T02:34:09Z",
          "completedAt": "1973-04-01T00:03:22Z",
          "shippingMethod": "string",
          "terms": "string",
          "notes": "string",
          "deliveryAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2007-07-11T13:39:38Z",
            "updatedAt": "1999-01-08T23:23:50Z"
          },
          "currencyKey": "04000740349312",
          "totalNetValue": "string",
          "totalGrossValue": "string",
          "updatedAt": "1991-07-28T16:29:52Z",
          "lineItems": [
            {
              "key": "06000309196598",
              "locationKey": "08000625913684",
              "vendorKey": "03000040387662",
              "assetKey": "03000349715049",
              "materialKey": "03000798495031",
              "productKey": "09000674843503",
              "statusKey": "05000621218170",
              "storeroomKey": "08000541434848",
              "lineNo": "string",
              "code": "56375718",
              "type": "string",
              "name": "string",
              "description": "Magnam odit esse qui voluptates sit iste non.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "07000674426130",
              "currencyKey": "02000625312751",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "2015-06-01T08:28:12Z",
              "dueAt": "2015-04-05T18:40:37Z",
              "updatedAt": "2015-07-06T01:11:20Z"
            }
          ]
        }
      },
      "PurchaseOrderCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PurchaseOrder"
        }
      },
      "LineItem": {
        "title": "LineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "cost": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "lineTaxValue": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "07000601783635",
          "locationKey": "05000042551853",
          "assetKey": "07000232031116",
          "statusKey": "01000184325698",
          "materialKey": "07000816163324",
          "storeroomKey": "07000469050461",
          "vendorKey": "04000100624579",
          "productKey": "03000898138056",
          "price": "string",
          "discount": "string",
          "deliveryAt": "1985-08-18T00:51:44Z",
          "lineNo": "string",
          "code": "64701622",
          "name": "string",
          "description": "Accusantium magnam qui rerum quis et velit aut.",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "type": "string",
          "uomKey": "00000183678020",
          "cost": "string",
          "currencyKey": "07000670248048",
          "lineTotalValue": "string",
          "lineTaxValue": "string",
          "notes": "string",
          "dueAt": "1993-10-31T22:30:37Z",
          "createdAt": "1983-11-21T22:47:24Z",
          "updatedAt": "2017-12-28T18:14:51Z"
        }
      },
      "SupplyOption": {
        "title": "SupplyOption",
        "properties": {
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "price": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "uomKey": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "vendorKey": "02000135266853",
          "partNumber": "[]",
          "price": "[]",
          "uomKey": "09000143841920",
          "currencyKey": "08000526655257",
          "createdAt": "1987-06-29T11:33:20Z",
          "updatedAt": "1972-01-26T15:21:52Z"
        }
      },
      "Inventory": {
        "title": "Inventory",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "integer",
            "description": "Description",
            "nullable": false,
            "format": "integer"
          },
          "unitCost": {
            "type": "integer",
            "description": "Description",
            "nullable": false,
            "format": "integer"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000184256654",
          "code": "65246153",
          "name": "string",
          "quantity": 10,
          "unitCost": 10,
          "locationKey": "04000892173472",
          "updatedAt": "2020-03-26T15:31:22Z",
          "createdAt": "1971-03-10T17:09:45Z"
        }
      },
      "Dimension": [],
      "Material": {
        "title": "Material",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "parentKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isAssembly": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "supplyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplyOption"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "inventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inventory"
            }
          },
          "dimensions": {
            "type": "object",
            "$ref": "#/components/schemas/Dimension"
          }
        },
        "example": {
          "key": "05000524003802",
          "organizationKeys": "[]",
          "parentKeys": "[]",
          "assetKeys": "[]",
          "code": "43895380",
          "isAssembly": "true",
          "partNumber": "string",
          "name": "string",
          "description": "Quae officia iure libero qui.",
          "notes": "string",
          "criticality": "string",
          "isActive": "true",
          "manufacturerName": "string",
          "uomKey": "02000606807942",
          "supplyOptions": [
            {
              "vendorKey": "07000944640502",
              "partNumber": "[]",
              "price": "[]",
              "uomKey": "04000815814323",
              "currencyKey": "09000532404834",
              "createdAt": "1985-06-10T05:19:43Z",
              "updatedAt": "1993-01-13T13:02:47Z"
            }
          ],
          "createdAt": "1984-04-28T02:44:07Z",
          "updatedAt": "2016-04-09T00:47:11Z",
          "deletedAt": "1990-07-30T04:39:34Z",
          "inventories": [
            {
              "key": "05000758865286",
              "code": "10349069",
              "name": "string",
              "quantity": 10,
              "unitCost": 10,
              "locationKey": "08000912954458",
              "updatedAt": "2000-07-01T19:16:31Z",
              "createdAt": "1984-01-27T21:33:20Z"
            }
          ],
          "dimensions": []
        }
      },
      "MaterialItem": {
        "title": "MaterialItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assemblyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetTemplateKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "workOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "pmKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productionOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "drawingNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "positionNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "requiredQuantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000783856606",
          "materialKey": "09000179820572",
          "assemblyKey": "04000531044848",
          "assetKey": "00000938692093",
          "assetTemplateKey": "04000201637428",
          "workOrderKey": "01000898945586",
          "pmKey": "06000258368035",
          "productionOrderKey": "07000336131787",
          "partNumber": "string",
          "drawingNumber": "string",
          "positionNumber": "string",
          "documentKey": "00000580276849",
          "name": "string",
          "uomKey": "04000439791906",
          "quantity": "string",
          "requiredQuantity": "string",
          "createdAt": "2009-08-14T12:41:11Z",
          "updatedAt": "1977-06-17T19:36:13Z",
          "deletedAt": "1978-04-23T11:08:12Z"
        }
      },
      "Document": {
        "title": "Document",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "entityKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contentType": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000776221854",
          "entityKeys": "[]",
          "name": "string",
          "url": "string",
          "type": "string",
          "contentType": "string",
          "description": "Dolor vel quia totam ullam odio ut corporis.",
          "notes": "string",
          "createdAt": "1993-02-23T09:17:04Z",
          "updatedAt": "1993-11-16T08:35:58Z"
        }
      },
      "Drawing": {
        "title": "Drawing",
        "properties": {
          "drawingNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "drawingPos": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "referenceNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "referencePos": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "example": {
          "drawingNo": "string",
          "drawingPos": "string",
          "referenceNo": "string",
          "referencePos": "string",
          "documents": [
            {
              "key": "02000849799236",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Nam est alias et corrupti.",
              "notes": "string",
              "createdAt": "1996-09-16T06:44:32Z",
              "updatedAt": "1975-01-10T18:24:19Z"
            }
          ]
        }
      },
      "Part": {
        "title": "Part",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "parentKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "vendorKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isAssembly": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "minimumQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uom": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "cost": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "currency": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "inventory": {
            "type": "object",
            "$ref": "#/components/schemas/Inventory"
          },
          "drawings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Drawing"
            }
          }
        },
        "example": {
          "key": "06000970753329",
          "siteKeys": "[]",
          "parentKeys": "[]",
          "assetKeys": "[]",
          "vendorKeys": "string",
          "documents": [
            {
              "key": "07000929246340",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Eos cupiditate et voluptatem ut doloremque.",
              "notes": "string",
              "createdAt": "1991-02-09T19:09:12Z",
              "updatedAt": "1976-06-23T23:46:23Z"
            }
          ],
          "accountKey": "08000977353605",
          "code": "80083832",
          "isAssembly": "true",
          "partNumber": "string",
          "name": "string",
          "description": "Sunt maxime culpa ducimus in.",
          "notes": "string",
          "criticality": "string",
          "isActive": "true",
          "manufacturerName": "string",
          "minimumQuantity": "string",
          "uom": "string",
          "cost": "string",
          "currency": "string",
          "createdAt": "2021-11-30T21:17:17Z",
          "updatedAt": "2001-07-09T00:32:07Z",
          "deletedAt": "2000-09-23T18:56:20Z",
          "inventory": {
            "key": "09000116390766",
            "code": "70994735",
            "name": "string",
            "quantity": 10,
            "unitCost": 10,
            "locationKey": "01000200873532",
            "updatedAt": "1984-06-01T02:35:07Z",
            "createdAt": "1976-12-27T16:16:38Z"
          },
          "drawings": [
            {
              "drawingNo": "string",
              "drawingPos": "string",
              "referenceNo": "string",
              "referencePos": "string",
              "documents": [
                {
                  "key": "02000157519470",
                  "entityKeys": "[]",
                  "name": "string",
                  "url": "string",
                  "type": "string",
                  "contentType": "string",
                  "description": "Vitae delectus ut accusamus molestias alias.",
                  "notes": "string",
                  "createdAt": "2013-02-02T00:41:27Z",
                  "updatedAt": "1980-03-23T03:31:01Z"
                }
              ]
            }
          ]
        }
      },
      "PartCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Part"
        }
      },
      "Asset": {
        "title": "Asset",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "makeCompanyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetTemplateKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isPhysical": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "makeName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "modelName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "activatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000380750291",
          "siteKey": "02000244768270",
          "parentKey": "04000603510453",
          "vendorKey": "08000962172756",
          "teamKey": "03000054639087",
          "documents": [
            {
              "key": "01000716387520",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Quia maxime ut qui.",
              "notes": "string",
              "createdAt": "2003-01-25T06:12:50Z",
              "updatedAt": "1973-01-13T21:40:53Z"
            }
          ],
          "locationKey": "00000739759570",
          "customerKey": "09000853036778",
          "accountKeys": "string",
          "name": "string",
          "description": "Nobis incidunt eum ullam dolor aut ut nesciunt.",
          "makeCompanyKey": "08000606004608",
          "assetTemplateKey": "09000646399240",
          "isPhysical": "false",
          "notes": "string",
          "categoryName": "string",
          "criticality": "string",
          "isActive": "false",
          "makeName": "string",
          "modelName": "string",
          "serialNumber": "string",
          "activatedAt": "2000-09-22T16:03:06Z",
          "deactivatedAt": "1980-01-27T03:29:20Z",
          "createdAt": "2003-09-27T10:58:07Z",
          "updatedAt": "1974-09-26T08:51:06Z",
          "deletedAt": "2016-04-07T23:30:19Z"
        }
      },
      "AssetDowntime": {
        "title": "AssetDowntime",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "startedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "endedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000854351205",
          "assetKey": "04000544696755",
          "description": "In neque eligendi consequuntur rerum saepe.",
          "startedAt": "2005-11-21T06:31:17Z",
          "endedAt": "1975-09-19T02:02:09Z",
          "categoryName": "string",
          "severity": "string",
          "notes": "string",
          "createdAt": "1975-01-14T08:47:05Z",
          "updatedAt": "1993-03-25T00:37:53Z"
        }
      },
      "Model": {
        "title": "Model",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000257165904",
          "siteKey": "03000579447889",
          "documents": [
            {
              "key": "09000924455108",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Corrupti et harum ratione qui harum repellendus.",
              "notes": "string",
              "createdAt": "1995-08-22T10:17:05Z",
              "updatedAt": "1978-07-02T16:28:22Z"
            }
          ],
          "name": "string",
          "manufacturerName": "string",
          "createdAt": "2010-12-23T10:20:25Z",
          "updatedAt": "2019-01-15T00:05:03Z",
          "deletedAt": "1990-03-02T23:17:30Z"
        }
      },
      "Counter": {
        "title": "Counter",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lastReading": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "lastReadingAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000822155412",
          "siteKey": "04000807464333",
          "assetKeys": "string",
          "uomName": "string",
          "uomKey": "00000315176620",
          "lastReading": "string",
          "lastReadingAt": "1981-06-04T12:33:13Z",
          "createdAt": "1985-04-17T18:38:07Z",
          "updatedAt": "2016-05-29T15:35:03Z",
          "deletedAt": "1988-01-17T21:04:55Z"
        }
      },
      "CounterReading": {
        "title": "CounterReading",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "meterKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reading": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000505095455",
          "assetKey": "09000691763122",
          "meterKey": "08000762516679",
          "reading": "string",
          "createdAt": "1979-01-19T20:29:33Z"
        }
      },
      "WorkTrigger": {
        "title": "WorkTrigger",
        "properties": {
          "uom": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "interval": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "recurring": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "uom": "string",
          "type": "string",
          "interval": "string",
          "recurring": "string",
          "dueAt": "1993-12-25T06:00:42Z"
        }
      },
      "Task": {
        "title": "Task",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "priority": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "checkList": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          }
        },
        "example": {
          "key": "05000701555794",
          "parentKey": "09000205651243",
          "code": "22713377",
          "title": "Error quia dolore id molestiae.",
          "description": "Repellendus dolor ut a eligendi.",
          "priority": "string",
          "checkList": "[]"
        }
      },
      "PreventiveMaintenance": {
        "title": "PreventiveMaintenance",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetTemplateKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "requiresMaterials": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTrigger"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "07000540608033",
          "siteKeys": "[]",
          "assetKeys": "[]",
          "teamKey": "08000903133030",
          "accountKey": "06000310172346",
          "title": "Dolores sint quia ut quidem.",
          "description": "Est et dolores earum laboriosam reiciendis non.",
          "status": "string",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "documents": "[]",
          "assetTemplateKeys": "string",
          "statusKey": "04000414255292",
          "notes": "string",
          "dueAt": "1970-06-23T04:56:02Z",
          "categoryCode": "string",
          "requiresMaterials": "false",
          "triggers": [
            {
              "uom": "string",
              "type": "string",
              "interval": "string",
              "recurring": "string",
              "dueAt": "1975-02-23T23:37:02Z"
            }
          ],
          "tasks": [
            {
              "key": "09000014666340",
              "parentKey": "05000975985327",
              "code": "11414551",
              "title": "Consequatur in ut nobis odio qui enim eaque.",
              "description": "Earum dolorem expedita est quas aut.",
              "priority": "string",
              "checkList": "[]"
            }
          ],
          "createdAt": "1977-11-05T03:36:18Z",
          "updatedAt": "2013-02-27T22:20:58Z",
          "deletedAt": "1987-08-03T16:30:40Z"
        }
      },
      "CustomField": {
        "title": "CustomField",
        "properties": {
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "name": "string"
        }
      },
      "WorkOrder": {
        "title": "WorkOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "serviceRequestKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "pmKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userApprovedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetDowntimeKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "instructions": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scheduledAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "actualTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completionRemarks": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000012106260",
          "siteKey": "09000247775434",
          "assetKey": "01000801302366",
          "accountKey": "01000380946969",
          "title": "Facere facilis voluptas blanditiis mollitia.",
          "description": "Dolorem quibusdam quos nemo qui corrupti nihil.",
          "serviceRequestKey": "07000863902865",
          "code": "19419398",
          "pmKey": "06000050474803",
          "teamKey": "01000281656837",
          "userApprovedKey": "04000365982811",
          "assetDowntimeKey": "06000348223770",
          "organizationKey": "08000165317781",
          "instructions": "string",
          "status": "string",
          "statusKey": "07000759039685",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "storeroomKey": "03000844799099",
          "notes": "string",
          "approvedAt": "2001-02-13T13:08:27Z",
          "dueAt": "1977-10-30T12:25:57Z",
          "scheduledAt": "1999-11-15T11:59:01Z",
          "actualTime": "string",
          "completedAt": "1999-01-01T00:08:36Z",
          "completionRemarks": "string",
          "tasks": [
            {
              "key": "06000656302061",
              "parentKey": "05000449626330",
              "code": "88631592",
              "title": "Rerum minima magni veniam est debitis.",
              "description": "Harum ad eligendi omnis quo non.",
              "priority": "string",
              "checkList": "[]"
            }
          ],
          "documents": [
            {
              "key": "04000029193054",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Natus quia non delectus voluptatum ut et odit.",
              "notes": "string",
              "createdAt": "2002-01-06T14:01:28Z",
              "updatedAt": "2001-05-21T09:35:56Z"
            }
          ],
          "createdAt": "1975-09-09T08:59:37Z",
          "updatedAt": "1977-06-05T02:36:13Z",
          "deletedAt": "1976-09-24T01:37:31Z"
        }
      },
      "WorkOrderCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WorkOrder"
        }
      },
      "ServiceRequest": {
        "title": "ServiceRequest",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "workOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userRequestedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userApprovedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000208632321",
          "siteKey": "05000250211982",
          "locationKey": "00000274582852",
          "storeroomKey": "06000260406979",
          "assetKey": "01000076749455",
          "workOrderKey": "07000558614017",
          "teamKey": "01000485633577",
          "userRequestedKey": "05000109377494",
          "userApprovedKey": "00000992624111",
          "documents": [
            {
              "key": "03000139677585",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Ea quia et earum debitis.",
              "notes": "string",
              "createdAt": "1980-07-31T03:03:22Z",
              "updatedAt": "1981-09-02T05:34:19Z"
            }
          ],
          "title": "Laborum accusamus doloribus dolorum dolorem.",
          "description": "Aut sint ducimus reprehenderit.",
          "statusKey": "01000319145967",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "notes": "string",
          "approvedAt": "2007-10-07T06:48:10Z",
          "dueAt": "2021-03-21T12:29:15Z",
          "createdAt": "2024-01-10T18:21:33Z",
          "updatedAt": "2023-06-17T05:21:37Z",
          "deletedAt": "1990-04-07T11:01:28Z"
        }
      },
      "ServiceRequestCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ServiceRequest"
        }
      },
      "Status": {
        "title": "Status",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "subCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scope": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000455343331",
          "organizationKey": "05000871462956",
          "parentKey": "04000035264050",
          "name": "string",
          "code": "79702836",
          "subCode": "string",
          "scope": "string",
          "isActive": "true",
          "createdAt": "2009-02-24T08:04:19Z",
          "updatedAt": "1998-06-20T09:31:51Z",
          "deletedAt": "2012-12-31T17:32:14Z"
        }
      },
      "Tax": {
        "title": "Tax",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "taxPercentage": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000300483765",
          "organizationKey": "07000756487280",
          "name": "string",
          "type": "string",
          "taxPercentage": "string",
          "isActive": "false",
          "createdAt": "2016-06-30T16:14:40Z",
          "updatedAt": "1994-12-09T14:47:05Z",
          "deletedAt": "1973-09-02T18:41:14Z"
        }
      },
      "Currency": {
        "title": "Currency",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isBase": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000152898320",
          "name": "string",
          "code": "56171198",
          "isBase": "string",
          "isActive": "string",
          "createdAt": "1996-04-17T03:29:59Z",
          "updatedAt": "2004-06-26T16:12:50Z",
          "deletedAt": "2019-08-13T22:20:34Z"
        }
      },
      "ExchangeRate": {
        "title": "ExchangeRate",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "baseCurrencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "rate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000804260124",
          "currencyKey": "01000020195819",
          "baseCurrencyKey": "07000820775039",
          "rate": "string",
          "createdAt": "1996-06-22T01:17:39Z"
        }
      },
      "Product": {
        "title": "Product",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "groupKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "taxKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "sku": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "upc": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "ean": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isbn": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reorderLevel": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "dimensions": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "supplyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplyOption"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000873755001",
          "groupKey": "09000100075830",
          "uomKey": "04000246008902",
          "code": "92209923",
          "name": "string",
          "description": "Occaecati molestiae aut corrupti iure ea.",
          "type": "string",
          "isTaxable": "false",
          "taxKeys": "[]",
          "status": "string",
          "price": "string",
          "currencyKey": "03000677468971",
          "quantity": "string",
          "sku": "string",
          "upc": "string",
          "ean": "string",
          "isbn": "string",
          "partNumber": "string",
          "reorderLevel": "string",
          "dimensions": "string",
          "supplyOptions": [
            {
              "vendorKey": "09000657858010",
              "partNumber": "[]",
              "price": "[]",
              "uomKey": "02000880790075",
              "currencyKey": "03000113992325",
              "createdAt": "1987-11-28T06:20:59Z",
              "updatedAt": "1997-08-07T07:53:58Z"
            }
          ],
          "createdAt": "1994-09-06T12:49:46Z",
          "updatedAt": "1970-02-19T21:05:31Z",
          "deletedAt": "1995-05-03T03:20:27Z"
        }
      },
      "SalesLineItem": {
        "title": "SalesLineItem",
        "properties": {
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "quantityRequired": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "taxKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "productKey": "04000339325498",
          "locationKey": "08000699583453",
          "storeroomKey": "02000296344759",
          "quantity": "string",
          "quantityRequired": "string",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "taxKey": "03000116006676"
        }
      },
      "SalesOrder": {
        "title": "SalesOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shipmentDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contactPerson": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesLineItem"
            }
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyRate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000689667004",
          "customerKey": "09000561323817",
          "userKey": "07000179335942",
          "code": "91712967",
          "orderNumber": "string",
          "date": "string",
          "statusKey": "02000476724196",
          "shipmentDate": "1992-12-03T15:52:41Z",
          "contactPerson": "string",
          "lines": [
            {
              "productKey": "01000886270237",
              "locationKey": "08000714201309",
              "storeroomKey": "03000098059577",
              "quantity": "string",
              "quantityRequired": "string",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "taxKey": "02000090876499"
            }
          ],
          "currencyKey": "07000855104955",
          "currencyRate": "string",
          "createdAt": "1991-02-01T09:55:03Z",
          "updatedAt": "1983-12-26T00:35:21Z",
          "deletedAt": "2005-02-11T07:54:41Z"
        }
      },
      "Project": {
        "title": "Project",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "budget": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000509589837",
          "siteKey": "01000877501468",
          "name": "string",
          "accountKey": "05000754519632",
          "statusKey": "06000070910153",
          "budget": "string",
          "createdAt": "2008-08-17T12:29:33Z",
          "updatedAt": "2015-12-16T18:01:59Z",
          "deletedAt": "1984-02-26T08:03:14Z"
        }
      },
      "InvoiceLineItem": {
        "title": "InvoiceLineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000027350814",
          "locationKey": "07000687045890",
          "vendorKey": "05000593954168",
          "productKey": "08000782626240",
          "statusKey": "00000012251961",
          "storeroomKey": "08000059977324",
          "currencyKey": "00000061807982",
          "lineNo": "string",
          "code": "08384409",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "uomKey": "05000062623542",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "notes": "string",
          "deliveryAt": "1988-09-25T02:19:02Z",
          "createdAt": "2005-05-04T19:56:33Z",
          "updatedAt": "2019-06-14T18:14:30Z",
          "deletedAt": "1977-04-23T14:48:18Z"
        }
      },
      "Invoice": {
        "title": "Invoice",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "receivedDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000639132558",
          "customerKey": "06000662639946",
          "invoiceNumber": "string",
          "vendorKey": "02000120468510",
          "poKey": "02000951064507",
          "statusKey": "08000475475351",
          "lineItems": [
            {
              "key": "02000946840199",
              "locationKey": "07000727044704",
              "vendorKey": "00000643360042",
              "productKey": "00000865100656",
              "statusKey": "00000891729217",
              "storeroomKey": "02000706683526",
              "currencyKey": "05000841736144",
              "lineNo": "string",
              "code": "79337366",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "04000604752906",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1996-03-02T18:48:57Z",
              "createdAt": "2003-05-06T23:15:57Z",
              "updatedAt": "1982-04-30T17:02:35Z",
              "deletedAt": "2021-09-13T20:38:54Z"
            }
          ],
          "invoiceDate": "1990-06-27T13:13:54Z",
          "dueDate": "1988-05-02T00:31:38Z",
          "receivedDate": "2018-06-12T02:21:42Z",
          "currencyKey": "00000720248883",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "1987-11-28T06:23:20Z",
          "updatedAt": "1992-02-24T16:39:48Z",
          "deletedAt": "2006-02-14T03:24:05Z"
        }
      },
      "InvoiceCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Invoice"
        }
      },
      "Receipt": {
        "title": "Receipt",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000462625787",
          "siteKey": "08000049468298",
          "vendorKey": "07000767770866",
          "poKey": "03000350012014",
          "code": "38436581",
          "orderNo": "string",
          "orderDate": "2017-04-04T06:25:56Z",
          "title": "Rem accusantium nobis et adipisci.",
          "description": "Hic doloribus quod est laudantium asperiores.",
          "completedAt": "1993-01-13T02:14:33Z",
          "shippingMethod": "string",
          "notes": "string",
          "currencyKey": "05000606790817",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "lineItems": [
            {
              "key": "09000592394628",
              "locationKey": "02000371395506",
              "vendorKey": "03000168917524",
              "assetKey": "08000118378531",
              "materialKey": "06000707286098",
              "productKey": "03000721061602",
              "statusKey": "02000675671064",
              "storeroomKey": "05000362086773",
              "lineNo": "string",
              "code": "56196092",
              "type": "string",
              "name": "string",
              "description": "Totam distinctio doloribus error dolorem et qui.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "07000400557855",
              "currencyKey": "06000120793943",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1973-12-24T13:20:22Z",
              "dueAt": "2010-09-03T13:37:53Z",
              "updatedAt": "2018-11-30T06:18:07Z"
            }
          ],
          "createdAt": "1977-01-16T05:18:27Z",
          "updatedAt": "2020-03-28T13:52:37Z"
        }
      },
      "BOMLineItem": {
        "title": "BOMLineItem",
        "properties": {
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "locationKey": "09000000674751",
          "materialKey": "09000694737488",
          "productKey": "00000570712978",
          "currencyKey": "05000162797469",
          "description": "Occaecati consequatur asperiores laborum.",
          "quantity": "string",
          "uomKey": "04000130932729",
          "notes": "string",
          "price": "string",
          "createdAt": "1977-02-18T15:39:11Z",
          "updatedAt": "1981-09-11T08:27:58Z"
        }
      },
      "BillOfMaterial": {
        "title": "BillOfMaterial",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "projectKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BOMLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000165220536",
          "siteKey": "04000143476998",
          "name": "string",
          "projectKey": "00000247451158",
          "type": "string",
          "lineItems": [
            {
              "locationKey": "07000756745162",
              "materialKey": "07000300150117",
              "productKey": "07000448597077",
              "currencyKey": "03000446106198",
              "description": "Inventore ex aperiam laborum.",
              "quantity": "string",
              "uomKey": "09000246045280",
              "notes": "string",
              "price": "string",
              "createdAt": "2008-07-30T08:13:57Z",
              "updatedAt": "1996-02-25T15:04:37Z"
            }
          ],
          "createdAt": "2013-11-28T11:32:46Z",
          "updatedAt": "1980-02-09T14:13:36Z"
        }
      },
      "ProductionOrder": {
        "title": "ProductionOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "note": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000922314258",
          "siteKey": "08000323874151",
          "statusKey": "00000292099954",
          "locationKey": "05000183415519",
          "orderNo": "string",
          "orderDate": "1977-07-18T00:23:44Z",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "note": "string",
          "lineItems": [
            {
              "key": "03000896394844",
              "locationKey": "08000202520865",
              "vendorKey": "05000988550044",
              "assetKey": "01000840893158",
              "materialKey": "00000667963717",
              "productKey": "03000745568177",
              "statusKey": "06000363770979",
              "storeroomKey": "09000623749033",
              "lineNo": "string",
              "code": "94169423",
              "type": "string",
              "name": "string",
              "description": "Rerum et delectus similique qui omnis porro odio.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "05000151593602",
              "currencyKey": "08000321449050",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1983-09-25T13:35:46Z",
              "dueAt": "2010-10-28T21:54:27Z",
              "updatedAt": "1993-01-06T20:57:20Z"
            }
          ],
          "createdAt": "1996-08-21T23:37:53Z",
          "updatedAt": "1998-11-24T16:07:14Z",
          "deletedAt": "2008-02-27T00:51:24Z"
        }
      },
      "Receiving": {
        "title": "Receiving",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000803730576",
          "siteKey": "05000772340165",
          "vendorKey": "03000303451395",
          "poKey": "02000812368851",
          "code": "84356376",
          "orderNo": "string",
          "orderDate": "1991-06-06T18:45:31Z",
          "title": "Eum et deserunt placeat non nostrum autem.",
          "description": "Tempore ad eos ut quae vitae minima veritatis.",
          "completedAt": "1999-03-02T12:52:55Z",
          "shippingMethod": "string",
          "notes": "string",
          "currencyKey": "00000891522444",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "lineItems": [
            {
              "key": "01000082636410",
              "locationKey": "07000803917101",
              "vendorKey": "07000069358481",
              "assetKey": "09000051596800",
              "materialKey": "02000606109743",
              "productKey": "04000793921151",
              "statusKey": "09000324012722",
              "storeroomKey": "02000407723525",
              "lineNo": "string",
              "code": "46114389",
              "type": "string",
              "name": "string",
              "description": "Praesentium omnis omnis omnis sit.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "03000383302201",
              "currencyKey": "00000169622984",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "2018-01-17T00:57:09Z",
              "dueAt": "2017-09-06T21:41:09Z",
              "updatedAt": "2001-06-02T09:46:51Z"
            }
          ],
          "createdAt": "1979-05-10T09:41:51Z",
          "updatedAt": "1975-12-17T14:36:51Z"
        }
      },
      "RequestForQuotation": {
        "title": "RequestForQuotation",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "documentKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000740135686",
          "siteKey": "08000376498502",
          "vendorKey": "02000530574276",
          "accountKey": "02000475157093",
          "code": "84833150",
          "statusKey": "04000802982227",
          "shippingMethod": "string",
          "shippingAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "2000-06-17T15:02:42Z",
              "updatedAt": "2023-08-29T01:52:46Z"
            }
          ],
          "lineItems": [
            {
              "key": "03000708578556",
              "locationKey": "06000668888086",
              "vendorKey": "09000395650614",
              "assetKey": "08000382710673",
              "materialKey": "08000900207999",
              "productKey": "08000986436391",
              "statusKey": "05000994859021",
              "storeroomKey": "09000122853939",
              "lineNo": "string",
              "code": "77155450",
              "type": "string",
              "name": "string",
              "description": "Vel nulla doloribus eos placeat.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "06000023305717",
              "currencyKey": "05000324953960",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1973-07-31T22:40:38Z",
              "dueAt": "1990-02-04T10:40:22Z",
              "updatedAt": "1983-05-05T18:31:51Z"
            }
          ],
          "documentKeys": "string",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "2003-03-05T05:17:18Z",
          "updatedAt": "2016-08-02T03:47:05Z",
          "deletedAt": "1986-01-07T15:16:24Z"
        }
      },
      "PurchaseRequisition": {
        "title": "PurchaseRequisition",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "requesterKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "documentKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000696162941",
          "siteKey": "02000643064740",
          "requesterKey": "06000622774606",
          "accountKey": "07000900028894",
          "code": "05884513",
          "statusKey": "02000176691593",
          "shippingMethod": "string",
          "shippingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1999-09-24T04:24:40Z",
            "updatedAt": "1991-08-03T22:39:43Z"
          },
          "lineItems": [
            {
              "key": "04000023942594",
              "locationKey": "07000114565945",
              "vendorKey": "02000804594928",
              "assetKey": "07000821889360",
              "materialKey": "05000307504218",
              "productKey": "01000879368590",
              "statusKey": "03000782373328",
              "storeroomKey": "08000553051963",
              "lineNo": "string",
              "code": "68649098",
              "type": "string",
              "name": "string",
              "description": "Et ducimus fuga officiis.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "05000735315847",
              "currencyKey": "01000768281329",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1994-09-17T07:41:46Z",
              "dueAt": "1995-08-04T12:57:29Z",
              "updatedAt": "1971-09-29T20:04:51Z"
            }
          ],
          "documentKeys": "string",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "1997-03-19T14:24:42Z",
          "updatedAt": "2020-02-29T07:32:27Z",
          "deletedAt": "2011-01-08T07:19:20Z"
        }
      },
      "ProductGroup": {
        "title": "ProductGroup",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000128990917",
          "parentKey": "01000967214812",
          "code": "38507915",
          "name": "string",
          "description": "Cupiditate qui animi delectus sit sed et quis.",
          "updatedAt": "2002-11-05T00:52:16Z",
          "createdAt": "1998-12-27T12:10:09Z",
          "deletedAt": "1993-11-16T11:35:30Z"
        }
      },
      "StockLineItem": {
        "title": "StockLineItem",
        "properties": {
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "productKey": "08000430420148",
          "materialKey": "07000469570288",
          "quantity": "string",
          "locationKey": "01000402865694",
          "storeroomKey": "06000290464120"
        }
      },
      "StockTransfer": {
        "title": "StockTransfer",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "fromLocationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "toLocationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "fromStoreroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "toStoreroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000168514372",
          "fromLocationKey": "00000213041600",
          "toLocationKey": "04000997980711",
          "fromStoreroomKey": "00000744071482",
          "toStoreroomKey": "03000944871862",
          "statusKey": "02000297514769",
          "code": "92617148",
          "date": "string",
          "lineItems": [
            {
              "productKey": "04000172263086",
              "materialKey": "07000515078858",
              "quantity": "string",
              "locationKey": "03000179438423",
              "storeroomKey": "01000271031108"
            }
          ],
          "orderNumber": "string",
          "createdAt": "1978-08-24T10:06:53Z",
          "updatedAt": "1993-04-22T22:19:15Z",
          "deletedAt": "1978-08-20T04:34:26Z"
        }
      },
      "StockAdjustment": {
        "title": "StockAdjustment",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reason": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "adjustmentNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "total": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000918389813",
          "locationKey": "09000415349061",
          "storeroomKey": "02000079436349",
          "userKey": "03000125778938",
          "date": "string",
          "reason": "string",
          "lineItems": [
            {
              "productKey": "08000974807073",
              "materialKey": "08000321530241",
              "quantity": "string",
              "locationKey": "00000600697866",
              "storeroomKey": "02000708912857"
            }
          ],
          "adjustmentNumber": "string",
          "total": "string",
          "type": "string",
          "createdAt": "2022-05-05T03:44:28Z",
          "updatedAt": "2008-02-16T12:39:16Z",
          "deletedAt": "1984-02-01T08:43:36Z"
        }
      },
      "ShipmentOrder": {
        "title": "ShipmentOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shipmentNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "destinationAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "carrierName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000058138687",
          "userKey": "03000596486779",
          "customerKey": "06000193452026",
          "vendorKey": "08000767224460",
          "orderNumber": "string",
          "shipmentNumber": "string",
          "date": "string",
          "statusKey": "05000677402003",
          "lineItems": [
            {
              "productKey": "01000154678055",
              "materialKey": "03000442188126",
              "quantity": "string",
              "locationKey": "02000280708080",
              "storeroomKey": "01000254137241"
            }
          ],
          "destinationAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1998-10-05T17:48:51Z",
              "updatedAt": "2020-12-08T01:47:36Z"
            }
          ],
          "carrierName": "string",
          "shippingMethod": "string",
          "notes": "string",
          "createdAt": "1985-09-20T20:42:35Z",
          "updatedAt": "2023-07-29T11:17:34Z",
          "deletedAt": "2011-06-30T18:01:57Z"
        }
      },
      "Integration": {
        "title": "Integration",
        "properties": {
          "id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "company_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "provider": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "sync_status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "sync_updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "id": "string",
          "company_name": "string",
          "email": "string",
          "provider": "string",
          "updated_at": "string",
          "sync_status": "string",
          "sync_updated_at": "string"
        }
      },
      "Connection": {
        "title": "Connection",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "integration_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "redirect": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scopes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "user_metadata": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "client_id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "created_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "connected_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000559491478",
          "name": "string",
          "email": "string",
          "status": "string",
          "integration_name": "string",
          "redirect": "string",
          "scopes": "string",
          "user_metadata": "string",
          "client_id": "string",
          "updated_at": "string",
          "created_at": "string",
          "connected_at": "string"
        }
      },
      "ConnectionMetadata": {
        "title": "ConnectionMetadata",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "integration_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "redirect": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scopes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "user_metadata": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "client_id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "created_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "connected_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000549644000",
          "name": "string",
          "email": "string",
          "status": "string",
          "integration_name": "string",
          "redirect": "string",
          "scopes": "string",
          "user_metadata": "string",
          "client_id": "string",
          "updated_at": "string",
          "created_at": "string",
          "connected_at": "string"
        }
      },
      "ConnectionMetadataCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectionMetadata"
        }
      },
      "ConnectionStoreCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectionStore"
        }
      },
      "ConnectionStore": {
        "title": "ConnectionStore",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "refresh_token": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "expires_in": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "access_token": "string",
          "refresh_token": "string",
          "expires_in": "string"
        }
      },
      "Passthrough": []
    }
  }
}
