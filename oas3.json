{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Makini API Docs",
    "description": "Makini API Docs",
    "x-logo": {
      "url": "https://cdn.prod.website-files.com/6075c27738665c833a39fd83/608566aaabf4b474f887440f_Light.svg",
      "backgroundColor": "#000000",
      "altText": "Makini Logo"
    }
  },
  "servers": [
    {
      "url": "https://www.makini.io"
    }
  ],
  "paths": {
    "/api/eam/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "03000527637160",
                  "vendorKey": "05000377898355",
                  "code": "39222381",
                  "orderNo": "string",
                  "orderDate": "2002-03-07T01:46:43Z",
                  "statusKey": "00000368283604",
                  "title": "Id suscipit et explicabo voluptate voluptatum.",
                  "description": "Ducimus est est dolor quia sit.",
                  "dueAt": "1977-10-16T20:33:20Z",
                  "approvedAt": "1996-04-24T08:19:42Z",
                  "completedAt": "2006-08-01T00:40:07Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "09000235566372",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "2014-09-16T16:26:17Z",
                  "updatedAt": "1984-11-04T11:59:32Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "08000303716889",
                  "vendorKey": "00000547082588",
                  "code": "32510461",
                  "orderNo": "string",
                  "orderDate": "1981-06-19T08:41:23Z",
                  "statusKey": "01000856520463",
                  "title": "Facilis eos sed nulla laborum ipsum.",
                  "description": "Consequuntur ipsam autem magni.",
                  "dueAt": "2019-10-21T20:34:31Z",
                  "approvedAt": "1997-06-06T01:06:48Z",
                  "completedAt": "2002-11-26T06:02:21Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "03000589911298",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "2017-07-14T15:29:01Z",
                  "updatedAt": "2009-02-13T23:34:52Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "31268783",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "09000715812087"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "00000171013145",
                  "code": "40390017",
                  "isAssembly": "false",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Temporibus totam rerum a hic error perferendis.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "true",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "01000562444591",
                  "code": "69270796",
                  "isAssembly": "false",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Accusamus et consequatur sed ut qui quod.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets": {
      "get": {
        "description": "A physical entity in the facility's hierarchy structure. It can be either equipment available for maintenance or system of assets in site hierarchy.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Assets",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Asset"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets/{key}": {
      "get": {
        "description": "A physical entity in the facility's hierarchy structure. It can be either equipment available for maintenance or system of assets in site hierarchy.\n",
        "summary": "Get an Asset",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Asset"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Asset",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Asset"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "parentKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "modelKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "modelName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serialNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "activatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deactivatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "00000837298170",
                  "parentKey": "07000461083569",
                  "vendorKey": "07000119047099",
                  "modelKey": "02000718654482",
                  "teamKey": "05000617639678",
                  "locationKey": "00000235673811",
                  "accountKey": "06000681388410",
                  "name": "string",
                  "description": "Veniam beatae enim impedit nisi enim.",
                  "notes": "string",
                  "categoryName": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "modelName": "string",
                  "serialNumber": "string",
                  "activatedAt": "2021-06-07T13:04:00Z",
                  "deactivatedAt": "2024-03-17T13:52:11Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets-downtime": {
      "get": {
        "description": "Information on planned or unplanned downtime periods for assets.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List AssetDowntimes",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssetDowntime"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/assets-downtime/{key}": {
      "get": {
        "description": "Information on planned or unplanned downtime periods for assets.\n",
        "summary": "Get an AssetDowntime",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssetDowntime"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Models",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Model"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/asset-templates/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Model",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Model"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meters": {
      "get": {
        "description": "Is a tool for tracking the number of specific events or operations, used for analyzing performance and other parameters, as well as scheduling condition-based maintenance\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Counters",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Counter"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meters/{key}": {
      "get": {
        "description": "Is a tool for tracking the number of specific events or operations, used for analyzing performance and other parameters, as well as scheduling condition-based maintenance\n",
        "summary": "Get a Counter",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Counter"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meter-readings": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List CounterReadings",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CounterReading"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/meter-readings/{key}": {
      "get": {
        "description": "",
        "summary": "Get a CounterReading",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CounterReading"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm": {
      "get": {
        "description": "Templates for time-based or counter-based maintenance, used as a basis for creating new work orders\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PreventiveMaintenances",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PreventiveMaintenance"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/pm/{key}": {
      "get": {
        "description": "Templates for time-based or counter-based maintenance, used as a basis for creating new work orders\n",
        "summary": "Get a PreventiveMaintenance",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreventiveMaintenance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/custom-fields": {
      "get": {
        "description": "",
        "summary": "List CustomFields of Custom-field",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomField"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders": {
      "get": {
        "description": "A work order is a document for organizing the execution of work or service, describing the task, location, resources, and deadlines\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List WorkOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a WorkOrder",
        "parameters": [],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "storeroomKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetDowntimeKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serviceRequestKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "pmKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "laborAssignedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "userApprovedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "instructions": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "severity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "actualTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "roleName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "type": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "contentType": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "tasks": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "priority": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "checkList": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completionRemarks": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "title": "Doloribus velit amet qui magni.",
                  "statusKey": "06000018718447",
                  "scheduledAt": "1980-04-27T23:29:56Z",
                  "siteKey": "06000678012247",
                  "locationKey": "04000019289635",
                  "storeroomKey": "08000379979597",
                  "assetKey": "05000579401958",
                  "assetDowntimeKey": "01000284352406",
                  "serviceRequestKey": "06000489012536",
                  "pmKey": "07000738727213",
                  "teamKey": "07000778692411",
                  "laborAssignedKey": "07000859341018",
                  "accountKey": "05000907679569",
                  "userApprovedKey": "01000720978390",
                  "code": "85806832",
                  "description": "Consequatur nam aut nesciunt ex eveniet animi.",
                  "instructions": "string",
                  "severity": "string",
                  "estimatedTime": 10,
                  "actualTime": 10,
                  "roleName": "string",
                  "categoryName": "string",
                  "documents": [
                    {
                      "name": "string",
                      "url": "string",
                      "type": "string",
                      "contentType": "string",
                      "description": "Assumenda officia est est. Sed aut et sunt.",
                      "notes": "string"
                    }
                  ],
                  "tasks": [
                    {
                      "code": "78159235",
                      "title": "Rerum facere odit sint voluptatem ipsam.",
                      "description": "Aut velit occaecati dolores.",
                      "priority": "string",
                      "checkList": "string"
                    }
                  ],
                  "notes": "string",
                  "approvedAt": "1978-06-13T02:25:43Z",
                  "dueAt": "2016-01-15T08:38:07Z",
                  "completedAt": "2017-07-25T09:08:44Z",
                  "completionRemarks": "string",
                  "createdAt": "2020-12-31T22:00:10Z",
                  "updatedAt": "1977-05-05T23:07:01Z",
                  "deletedAt": "1974-09-07T13:16:08Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/work-orders/{key}": {
      "get": {
        "description": "A work order is a document for organizing the execution of work or service, describing the task, location, resources, and deadlines\n",
        "summary": "Get a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a WorkOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WorkOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "storeroomKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetDowntimeKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "serviceRequestKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "pmKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "teamKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "laborAssignedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "userApprovedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "instructions": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "severity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "actualTime": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "roleName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "categoryName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "type": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "contentType": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "tasks": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "priority": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      },
                      "checkList": {
                        "type": "string",
                        "nullable": true,
                        "format": "string"
                      }
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completionRemarks": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "title": "Iusto a esse ea alias eum pariatur.",
                  "statusKey": "08000837092221",
                  "scheduledAt": "1997-08-20T07:41:42Z",
                  "siteKey": "03000335239460",
                  "locationKey": "05000468872150",
                  "storeroomKey": "08000568994591",
                  "assetKey": "06000406637454",
                  "assetDowntimeKey": "07000430814001",
                  "serviceRequestKey": "04000443274538",
                  "pmKey": "02000577930222",
                  "teamKey": "00000356846941",
                  "laborAssignedKey": "03000125253030",
                  "accountKey": "04000171880076",
                  "userApprovedKey": "07000193000351",
                  "code": "04286844",
                  "description": "Voluptatibus dignissimos quas et quaerat aut.",
                  "instructions": "string",
                  "severity": "string",
                  "estimatedTime": 10,
                  "actualTime": 10,
                  "roleName": "string",
                  "categoryName": "string",
                  "documents": [
                    {
                      "name": "string",
                      "url": "string",
                      "type": "string",
                      "contentType": "string",
                      "description": "In reprehenderit est qui ut.",
                      "notes": "string"
                    }
                  ],
                  "tasks": [
                    {
                      "code": "81245307",
                      "title": "Eos nulla quas perspiciatis vel dolor quia.",
                      "description": "Quo soluta dolores nisi ea nisi.",
                      "priority": "string",
                      "checkList": "string"
                    }
                  ],
                  "notes": "string",
                  "approvedAt": "1986-03-16T19:58:27Z",
                  "dueAt": "2013-04-29T11:35:32Z",
                  "completedAt": "1984-03-06T03:15:13Z",
                  "completionRemarks": "string",
                  "createdAt": "2009-02-23T19:54:06Z",
                  "updatedAt": "1994-05-15T02:57:24Z",
                  "deletedAt": "2003-12-14T06:45:01Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/service-requests": {
      "get": {
        "description": "Internal or external request for services or support, aimed at maintaining operational activities made by employees or customer and partners\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ServiceRequests",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRequest"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a ServiceRequest",
        "parameters": [],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userRequestedKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "assetKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "userRequestedKey": "08000186270567",
                  "title": "Perferendis asperiores aliquam autem.",
                  "assetKey": "06000145294729",
                  "description": "Corrupti omnis eos tempore quod molestiae."
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/service-requests/{key}": {
      "get": {
        "description": "Internal or external request for services or support, aimed at maintaining operational activities made by employees or customer and partners\n",
        "summary": "Get a ServiceRequest",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/documents": {
      "get": {
        "description": "Refers to any file containing details on maintenance, operation, and asset management, including manuals, records, and reports.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Documents",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "",
        "summary": "Create a Document",
        "parameters": [],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "nullable": false,
                    "format": "binary"
                  },
                  "name": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  }
                },
                "example": {
                  "file": "string",
                  "name": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/documents/{key}": {
      "get": {
        "description": "Refers to any file containing details on maintenance, operation, and asset management, including manuals, records, and reports.\n",
        "summary": "Get a Document",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "35961857",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "02000101855140"
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/work-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Work-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/eam/statuses/service-requests": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Service-request",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["EAM/CMMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/taxes": {
      "get": {
        "description": "Tax applicable on sales orders and purchase orders\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Taxes",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tax"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/taxes/{key}": {
      "get": {
        "description": "Tax applicable on sales orders and purchase orders\n",
        "summary": "Get a Tax",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tax"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/currencies": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Currencies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/currencies/{key}": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n",
        "summary": "Get a Currency",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/exchange-rates": {
      "get": {
        "description": "An exchange rate refers to the value assigned to convert one currency into another for the purpose of financial transactions, accounting, and reporting within the system.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ExchangeRates",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRate"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/exchange-rates/{key}": {
      "get": {
        "description": "An exchange rate refers to the value assigned to convert one currency into another for the purpose of financial transactions, accounting, and reporting within the system.\n",
        "summary": "Get an ExchangeRate",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExchangeRate"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/products": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Products",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/products/{key}": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n",
        "summary": "Get a Product",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sales-orders": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List SalesOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/sales-orders/{key}": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n",
        "summary": "Get a SalesOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SalesOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/projects": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Projects",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/projects/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Project",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/invoices": {
      "get": {
        "description": "Refers to a document issued by a company to a customer, confirming the completion of services rendered or goods delivered and requesting payment. It typically includes details of the products or services provided, their prices, the total amount due, as well as payment terms and methods.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Invoices",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create an Invoice",
        "parameters": [],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoiceNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "poKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "lineItem": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "receivedDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "customerKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalTaxValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalGrossValue": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "invoiceNumber": "string",
                  "vendorKey": "04000394268837",
                  "poKey": "06000194970499",
                  "statusKey": "00000593915523",
                  "lineItem": "[]",
                  "invoiceDate": "1981-11-09T09:18:54Z",
                  "dueDate": "1983-05-25T23:14:47Z",
                  "receivedDate": "2003-01-16T12:15:05Z",
                  "currencyKey": "00000102011106",
                  "customerKey": "01000947427301",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/invoices/{key}": {
      "get": {
        "description": "Refers to a document issued by a company to a customer, confirming the completion of services rendered or goods delivered and requesting payment. It typically includes details of the products or services provided, their prices, the total amount due, as well as payment terms and methods.\n",
        "summary": "Get an Invoice",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Invoice",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoiceNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "poKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "lineItem": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "receivedDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "deletedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "invoiceNumber": "string",
                  "vendorKey": "09000202551747",
                  "poKey": "01000312483716",
                  "statusKey": "02000513505745",
                  "lineItem": "[]",
                  "invoiceDate": "1987-07-21T07:47:11Z",
                  "dueDate": "2007-08-28T13:25:39Z",
                  "receivedDate": "1975-01-13T01:13:52Z",
                  "currencyKey": "05000820238809",
                  "createdAt": "1999-02-07T19:25:32Z",
                  "updatedAt": "1983-03-04T23:26:59Z",
                  "deletedAt": "2014-12-31T17:53:17Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receipts": {
      "get": {
        "description": "A 'receipt' is a document confirming payment received from a customer for goods or services.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Receipts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Receipt"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receipts/{key}": {
      "get": {
        "description": "A 'receipt' is a document confirming payment received from a customer for goods or services.\n",
        "summary": "Get a Receipt",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Receipt"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "08000726963601",
                  "vendorKey": "02000688669174",
                  "code": "90670350",
                  "orderNo": "string",
                  "orderDate": "2005-05-01T08:18:36Z",
                  "statusKey": "00000973517525",
                  "title": "Quos iste voluptatibus et quas saepe quos beatae.",
                  "description": "Cumque commodi ut qui quidem est.",
                  "dueAt": "2015-06-04T05:56:16Z",
                  "approvedAt": "2008-09-26T20:42:31Z",
                  "completedAt": "1984-10-01T18:47:13Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "09000282594932",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1986-12-15T19:18:00Z",
                  "updatedAt": "1996-05-09T13:33:18Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "02000479196576",
                  "vendorKey": "09000703802377",
                  "code": "35604174",
                  "orderNo": "string",
                  "orderDate": "1986-08-07T19:50:15Z",
                  "statusKey": "02000086207705",
                  "title": "Est voluptatem veritatis voluptas iure.",
                  "description": "Ducimus eum aperiam ut nemo.",
                  "dueAt": "1970-05-28T01:03:55Z",
                  "approvedAt": "2023-04-20T21:48:19Z",
                  "completedAt": "1993-11-07T10:49:29Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "04000705812659",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1982-02-08T07:01:33Z",
                  "updatedAt": "1994-01-05T21:44:22Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/bom": {
      "get": {
        "description": "A Bill of Materials is a detailed list of materials, instructions, or components needed to make a product. It's organized hierarchically, with the finished product at the top level, and includes quantities for production orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List BillOfMaterials",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillOfMaterial"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/bom/{key}": {
      "get": {
        "description": "A Bill of Materials is a detailed list of materials, instructions, or components needed to make a product. It's organized hierarchically, with the finished product at the top level, and includes quantities for production orders.\n",
        "summary": "Get a BillOfMaterial",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BillOfMaterial"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders/{key}/materials": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders": {
      "get": {
        "description": "An order to produce a specific quantity of products within a pre-defined time. It contains all the information required for the actual execution of the production process.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ProductionOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductionOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/production-orders/{key}": {
      "get": {
        "description": "An order to produce a specific quantity of products within a pre-defined time. It contains all the information required for the actual execution of the production process.\n",
        "summary": "Get a ProductionOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductionOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receiving": {
      "get": {
        "description": "\"Receiving\" is the process of accepting inbound products from external entities such as vendors or stores/distribution centers into the warehouse facility.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Receivings",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Receiving"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/receiving/{key}": {
      "get": {
        "description": "\"Receiving\" is the process of accepting inbound products from external entities such as vendors or stores/distribution centers into the warehouse facility.\n",
        "summary": "Get a Receiving",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Receiving"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/rfq": {
      "get": {
        "description": "A Request for Quotation is a document that an organization sends to one or more suppliers asking a quotation for items.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List RequestForQuotations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RequestForQuotation"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/rfq/{key}": {
      "get": {
        "description": "A Request for Quotation is a document that an organization sends to one or more suppliers asking a quotation for items.\n",
        "summary": "Get a RequestForQuotation",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RequestForQuotation"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-requisitions": {
      "get": {
        "description": "A Purchase Requisition is an internal request for goods or services within a company, undergoing approval before being used to generate a purchase order for vendors.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseRequisitions",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseRequisition"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/purchase-requisitions/{key}": {
      "get": {
        "description": "A Purchase Requisition is an internal request for goods or services within a company, undergoing approval before being used to generate a purchase order for vendors.\n",
        "summary": "Get a PurchaseRequisition",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseRequisition"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "25779936",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "06000787826073"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "01000768625188",
                  "code": "60892034",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Cum tempora molestias molestiae praesentium.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "04000067611774",
                  "code": "45905063",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Nam ut et sed voluptate nostrum consequatur et.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "true",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "17834094",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "02000062113927"
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/purchase-requisitions": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-requisition",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/sales-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Sales-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/projects": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Project",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/invoices": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Invoice",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/production-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Production-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/rfq": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Rfq",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/erp/statuses/receiving": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Receiving",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["ERP"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/organizations": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Organizations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/organizations/{key}": {
      "get": {
        "description": "Organization endpoint provides access to information about organizations, including their names, contact information, and structures. It is a top-level entity in the system, available for systems that support a multi-organizational structure.\n",
        "summary": "Get an Organization",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sites": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "List Sites",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sites/{key}": {
      "get": {
        "description": "Site represents a physical location or facility where equipment is installed, or operations are conducted. This can include manufacturing plants or offices.\n",
        "summary": "Get a Site",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/locations": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Locations",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/locations/{key}": {
      "get": {
        "description": "Location is a specific subdivision within a site where equipment or material stock is located. For example, a particular machine may be situated in a specific area within a manufacturing plant, or materials can be stored in a specific warehouse.\n",
        "summary": "Get a Location",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/storerooms": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Storerooms",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Storeroom"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/storerooms/{key}": {
      "get": {
        "description": "Is a designated space within a location used for the storage and management of inventory, supplies, or equipment.\n",
        "summary": "Get a Storeroom",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Storeroom"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/accounts": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/accounts/{key}": {
      "get": {
        "description": "Is a financial record in the general ledger, tracking debit and credit transactions to reflect a business's financial transactions and positions.\n",
        "summary": "Get an Account",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/teams": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Teams",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/teams/{key}": {
      "get": {
        "description": "A division responsible for conducting asset maintenance. It can be assigned to execute work orders.\n",
        "summary": "Get a Team",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/labors": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Labors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Labor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/labors/{key}": {
      "get": {
        "description": "Refers to internal or external human resources involved in the execution of work orders. It is used to track cost and time for planning purposes.\n",
        "summary": "Get a Labor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Labor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/users": {
      "get": {
        "description": "User account in the system\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Users",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/users/{key}": {
      "get": {
        "description": "User account in the system\n",
        "summary": "Get an User",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/currencies": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Currencies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/currencies/{key}": {
      "get": {
        "description": "Currency represents a monetary unit used for multi-currency transactions, financial accounting, and dealings with counterparts, integrated with international exchange rates.\n",
        "summary": "Get a Currency",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/uom": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List UnitOfMeasures",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/uom/{key}": {
      "get": {
        "description": "Units of Measure represent standardized values used for measuring and accounting for materials.\n",
        "summary": "Get an UnitOfMeasure",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitOfMeasure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/companies": {
      "get": {
        "description": "Contact information for a third-party entity.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Companies",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/companies/{key}": {
      "get": {
        "description": "Contact information for a third-party entity.\n",
        "summary": "Get a Company",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/vendors": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Vendors",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/vendors/{key}": {
      "get": {
        "description": "An external entity that provides services or supplies. Subdivision of Company\n",
        "summary": "Get a Vendor",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/customers": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Customers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/customers/{key}": {
      "get": {
        "description": "An external entity that can consume products or services, used as a target in sales and shipment orders. Subdivision of Company\n",
        "summary": "Get a Customer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/groups": {
      "get": {
        "description": "A Product Group categorizes similar items or products together for streamlined inventory management and analysis.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ProductGroups",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductGroup"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/groups/{key}": {
      "get": {
        "description": "A Product Group categorizes similar items or products together for streamlined inventory management and analysis.\n",
        "summary": "Get a ProductGroup",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductGroup"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/products": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Products",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/products/{key}": {
      "get": {
        "description": "The item available for sale could be either physical or digital, offered either at a fixed price or as a subscription service. Depending on the type of business, one may offer one or more products, each with separate pricing or add-ons. The description encompasses details such as features, pricing, availability, supplier, manufacturing, and sales information.\n",
        "summary": "Get a Product",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stocks": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Stocks",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stocks/{key}": {
      "get": {
        "description": "The quantity of materials per location and storeroom\n",
        "summary": "Get a Stock",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sales-orders": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List SalesOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/sales-orders/{key}": {
      "get": {
        "description": "A sales order is a document where customers specify what they want to buy\n",
        "summary": "Get a SalesOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SalesOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders/{key}/status": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "status": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List PurchaseOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a PurchaseOrder",
        "parameters": [],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "02000539109933",
                  "vendorKey": "04000845515802",
                  "code": "57792057",
                  "orderNo": "string",
                  "orderDate": "1998-11-13T04:49:09Z",
                  "statusKey": "03000838965979",
                  "title": "Tempore sunt a fugit non aut ex et.",
                  "description": "Molestiae perspiciatis rem aspernatur.",
                  "dueAt": "1976-08-28T01:41:37Z",
                  "approvedAt": "2004-03-13T14:05:07Z",
                  "completedAt": "1983-02-05T04:26:57Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "05000683118833",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "1987-07-07T05:01:58Z",
                  "updatedAt": "1974-10-20T23:11:40Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders/{key}": {
      "get": {
        "description": "A purchase order is a document for ordering goods or services, specifying the details, conditions of the purchase and line items\n",
        "summary": "Get a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a PurchaseOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "vendorKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "orderNo": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "orderDate": {
                    "type": "nullable|date",
                    "nullable": true,
                    "format": "nullable|date"
                  },
                  "statusKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "dueAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "approvedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "completedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "shippingMethod": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "terms": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "currencyKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "totalNetValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalTaxValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "totalGrossValue": {
                    "type": "nullable|float",
                    "nullable": true,
                    "format": "nullable|float"
                  },
                  "createdAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "updatedAt": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKey": "04000250354944",
                  "vendorKey": "05000631099200",
                  "code": "69930072",
                  "orderNo": "string",
                  "orderDate": "1982-03-29T08:44:08Z",
                  "statusKey": "03000218481403",
                  "title": "Quis quasi ea aut qui molestiae nesciunt.",
                  "description": "Et quos deleniti a sint vitae.",
                  "dueAt": "1981-07-12T09:50:46Z",
                  "approvedAt": "1983-02-06T01:43:18Z",
                  "completedAt": "1994-06-13T17:59:29Z",
                  "shippingMethod": "string",
                  "terms": "string",
                  "notes": "string",
                  "currencyKey": "06000827224088",
                  "totalNetValue": "string",
                  "totalTaxValue": "string",
                  "totalGrossValue": "string",
                  "createdAt": "2015-09-13T06:48:09Z",
                  "updatedAt": "2005-12-03T13:49:26Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders.line-items": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List LineItems",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LineItem"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/purchase-orders.line-items/{key}": {
      "get": {
        "description": "",
        "summary": "Get a LineItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LineItem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}/inventory": {
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Material",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Material"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "29699186",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "09000921554792"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}/children": {
      "get": {
        "description": "",
        "summary": "Get a MaterialItem",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Parts",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Part"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Create a Part",
        "parameters": [],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "01000529522523",
                  "code": "39949790",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "Nostrum quod tenetur nesciunt libero.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/materials/{key}": {
      "get": {
        "description": "",
        "summary": "Get a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update a Part",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Part"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "parentKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "assetKeys": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "vendorKeys": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "documents": {
                    "type": "array",
                    "nullable": true,
                    "format": "array"
                  },
                  "accountKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isAssembly": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "partNumber": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "criticality": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "manufacturerName": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "minimumQuantity": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "cost": {
                    "type": "nullable|numeric",
                    "nullable": true,
                    "format": "nullable|numeric"
                  },
                  "currency": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "siteKeys": "[]",
                  "parentKeys": "[]",
                  "assetKeys": "[]",
                  "vendorKeys": "string",
                  "documents": "[]",
                  "accountKey": "07000165191564",
                  "code": "65847732",
                  "isAssembly": "true",
                  "partNumber": "string",
                  "name": "string",
                  "description": "At qui aut recusandae quis magni ipsa.",
                  "notes": "string",
                  "criticality": "string",
                  "isActive": "false",
                  "manufacturerName": "string",
                  "minimumQuantity": "string",
                  "cost": "string",
                  "currency": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-transfers": {
      "get": {
        "description": "\"Stock Transfer\" is a record of the movement of goods between warehouse locations, containing location and warehouse keys, status, code, date, line item information, and timestamps.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List StockTransfers",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StockTransfer"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-transfers/{key}": {
      "get": {
        "description": "\"Stock Transfer\" is a record of the movement of goods between warehouse locations, containing location and warehouse keys, status, code, date, line item information, and timestamps.\n",
        "summary": "Get a StockTransfer",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StockTransfer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-adjustments": {
      "get": {
        "description": "Is a record of inventory changes within a location or storeroom, detailing the user, date, reason, line items, adjustment number, total quantity adjusted, type, and timestamps.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List StockAdjustments",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StockAdjustment"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/stock-adjustments/{key}": {
      "get": {
        "description": "Is a record of inventory changes within a location or storeroom, detailing the user, date, reason, line items, adjustment number, total quantity adjusted, type, and timestamps.\n",
        "summary": "Get a StockAdjustment",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StockAdjustment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders": {
      "get": {
        "description": "A shipment order is a document used by organizations to specify what items are being transferred from a storage location to a person at a new destination. It accompanies the shipment so the recipient can confirm they received the correct items.\n <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List ShipmentOrders",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentOrder"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders/{key}": {
      "get": {
        "description": "A shipment order is a document used by organizations to specify what items are being transferred from a storage location to a person at a new destination. It accompanies the shipment so the recipient can confirm they received the correct items.\n",
        "summary": "Get a ShipmentOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentOrder"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/shipment-orders/{key}/delivered": {
      "post": {
        "description": "",
        "summary": "Create a ShipmentOrder",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": []
              }
            }
          }
        }
      }
    },
    "/api/wms/inventories": {
      "get": {
        "description": " <details>\n   <summary>Filtering</summary>\n\n     * filter[name]=HelloFromMakiniAPI\n     * filter[name:contains]=Makini\n     * filter[name:startsWith]=Hello\n     * filter[name:startsWith]=API\n     * filter[createdAt:gt]=2023-11-07\n     * filter[createdAt:gteq]=2023-11-07\n     * filter[createdAt:lt]=2023-11-07\n     * filter[createdAt:lted]=2023-11-07\n\n </details>\n <details>\n   <summary>Filter matching</summary>\n\n     * filterMatch=any // OR\n     * filterMatch=all // AND\n\n </details>\n <details>\n   <summary>Sorting</summary>\n\n     * sort[createdAt]=1 // DESC\n     * sort[createdAt]=0 // ASC\n\n </details>\n\n",
        "summary": "List Inventories",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "per_page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/inventories/{key}": {
      "get": {
        "description": "",
        "summary": "Get an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n",
        "summary": "Update an Inventory",
        "parameters": [
          {
            "name": "key",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inventory"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "unitCost": {
                    "type": "integer",
                    "nullable": true,
                    "format": "integer"
                  },
                  "locationKey": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  }
                },
                "example": {
                  "code": "45247750",
                  "name": "string",
                  "quantity": 10,
                  "unitCost": 10,
                  "locationKey": "05000910176449"
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/purchase-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Purchase-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/sales-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Sales-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/stock-transfers": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Stock-transfer",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/wms/statuses/shipment-orders": {
      "get": {
        "description": "Indicates the current condition or state of a process, object, or situation, highlighting its progress, position, or quality at any specific moment.\n",
        "summary": "List Statuses of Shipment-order",
        "parameters": [
          {
            "name": "filter",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "page",
            "description": "integer",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "description": "array",
            "in": "query",
            "style": "form",
            "required": false,
            "schema": {
              "type": "array"
            }
          }
        ],
        "tags": ["WMS"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/current": {
      "get": {
        "description": " Get current integration data.\n `sync_status` is status of our synchronization.\n   * inprogress\n   * done\n   * fulldone\n   * error\n\n   * fail (Authentication error: Invalid platform credentials)\n",
        "summary": "Get an Integration",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integration"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "Delete an Integration",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/system/connections": {
      "get": {
        "description": "",
        "summary": "List Connections",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Connection"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n\nSample payload:\n```json\n {\n     \"name\": \"Inextia\",\n     \"email\": \"hey@makini.io\",\n     \"provider\": \"inextia\",\n     \"credentials\": {\n         \"api\": \"https://sample.inextia.dk\",\n         \"login\": \"login\",\n         \"password\": \"password\"\n     }\n }\n\n```",
        "summary": "Create a Connection",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConnectionStore"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "email": {
                    "type": "required|email",
                    "nullable": false,
                    "format": "required|email"
                  },
                  "provider": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "credentials": {
                    "type": "array",
                    "nullable": false,
                    "format": "array"
                  }
                },
                "example": {
                  "name": "Inextia",
                  "email": "hey@makini.io",
                  "provider": "inextia",
                  "credentials": {
                    "api": "https://sample.inextia.dk",
                    "login": "login",
                    "password": "password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/connections/{id}": {
      "delete": {
        "description": "",
        "summary": "Delete a Connection",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/system/connections/{id}/metadata": {
      "get": {
        "description": "",
        "summary": "List ConnectionMetadatas",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConnectionMetadata"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "next": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "last_page": {
                          "type": "number"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "\n[Detail validations](docs/platform-validation.md)\n\nSample payload:\n```json\n [\n     {\n         \"key\": \"uc_first\",\n         \"value\": \"UC Value\"\n     },\n     {\n         \"key\": \"uc_last\",\n         \"value\": \"Other uc value\"\n     }\n ]\n\n```",
        "summary": "Create a ConnectionMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "string|required",
            "in": "path",
            "style": "simple",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConnectionMetadata"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "nullable": false,
                      "format": "string"
                    },
                    "value": {
                      "type": "string",
                      "nullable": false,
                      "format": "string"
                    }
                  }
                },
                "example": [
                  {
                    "key": "uc_first",
                    "value": "UC Value"
                  },
                  {
                    "key": "uc_last",
                    "value": "Other uc value"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/passthrough": {
      "post": {
        "description": "\nSample payload:\n```json\n {\n     \"path\": \"dataservice\",\n     \"method\": \"post\",\n     \"headers\": {\n         \"Content-Type\": \"appication/json\"\n     },\n     \"body\": {\n         \"targetName\": \"F4801\",\n         \"targetType\": \"table\",\n         \"dataServiceType\": \"BROWSE\",\n         \"maxPageSize\": 10,\n         \"query\": {\n             \"autoFind\": true,\n             \"condition\": [\n                 {\n                     \"controlId\": \"F4801.DOCO\",\n                     \"operator\": \"STR_NOT_BLANK\"\n                 }\n             ]\n         }\n     }\n }\n\n```",
        "summary": "Create a Passthrough",
        "parameters": [],
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Passthrough"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "method": {
                    "type": "string",
                    "nullable": false,
                    "format": "string"
                  },
                  "headers": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "query": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "base64encoded": {
                    "type": "boolean",
                    "nullable": true,
                    "format": "boolean"
                  },
                  "body": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  },
                  "sql": {
                    "type": "string",
                    "nullable": true,
                    "format": "string"
                  },
                  "parameters": {
                    "type": "nullable",
                    "nullable": true,
                    "format": "nullable"
                  }
                },
                "example": {
                  "path": "dataservice",
                  "method": "post",
                  "headers": {
                    "Content-Type": "appication/json"
                  },
                  "body": {
                    "targetName": "F4801",
                    "targetType": "table",
                    "dataServiceType": "BROWSE",
                    "maxPageSize": 10,
                    "query": {
                      "autoFind": true,
                      "condition": [
                        {
                          "controlId": "F4801.DOCO",
                          "operator": "STR_NOT_BLANK"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Address": {
        "title": "Address",
        "properties": {
          "countryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addressLines": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "city": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "postCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "countryName": "string",
          "addressLines": "string",
          "city": "string",
          "postCode": "string",
          "phone": "string",
          "email": "string",
          "notes": "string",
          "createdAt": "2008-07-21T23:37:02Z",
          "updatedAt": "2013-10-07T18:30:22Z"
        }
      },
      "Contact": {
        "title": "Contact",
        "properties": {
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "position": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "phones": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "emails": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          }
        },
        "example": {
          "name": "string",
          "position": "string",
          "phones": "string",
          "emails": "string",
          "isActive": "false",
          "isDefault": "false"
        }
      },
      "Organization": {
        "title": "Organization",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "billingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000644745519",
          "currencyKey": "09000708389216",
          "name": "string",
          "code": "49001150",
          "description": "Commodi reprehenderit iusto aut est eum.",
          "addresses": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1973-10-12T21:21:13Z",
              "updatedAt": "1999-02-24T07:10:10Z"
            }
          ],
          "billingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1977-03-10T07:42:51Z",
            "updatedAt": "2003-07-18T18:08:53Z"
          },
          "contacts": [
            {
              "name": "string",
              "position": "string",
              "phones": "string",
              "emails": "string",
              "isActive": "false",
              "isDefault": "false"
            }
          ],
          "createdAt": "1975-09-04T04:35:18Z",
          "updatedAt": "1993-08-01T17:31:58Z",
          "deletedAt": "2000-07-15T23:07:00Z"
        }
      },
      "Site": {
        "title": "Site",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contact": {
            "type": "object",
            "$ref": "#/components/schemas/Contact"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lng": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "properties": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000707789241",
          "organizationKey": "00000197782883",
          "name": "string",
          "code": "03580097",
          "description": "Consequatur velit quae voluptatem ea.",
          "contact": {
            "name": "string",
            "position": "string",
            "phones": "string",
            "emails": "string",
            "isActive": "true",
            "isDefault": "true"
          },
          "customerKey": "03000498111376",
          "lat": "string",
          "lng": "string",
          "address": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1971-04-09T01:53:55Z",
            "updatedAt": "1999-07-09T09:10:07Z"
          },
          "billingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "1975-07-11T22:34:40Z",
            "updatedAt": "2003-02-23T02:25:20Z"
          },
          "properties": "string",
          "notes": "string",
          "createdAt": "1981-03-08T08:11:36Z",
          "updatedAt": "2013-06-28T09:59:08Z",
          "deletedAt": "2005-12-27T08:18:35Z"
        }
      },
      "Location": {
        "title": "Location",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userManagerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "contact": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000988437633",
          "siteKey": "06000557234834",
          "parentKey": "05000560225914",
          "name": "string",
          "userManagerKey": "09000154966490",
          "description": "Aut sed ullam omnis qui culpa quidem temporibus.",
          "code": "82761332",
          "type": "string",
          "address": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2021-08-05T18:28:06Z",
            "updatedAt": "1995-04-17T05:26:19Z"
          },
          "isActive": "true",
          "contact": "string",
          "isDefault": "true",
          "createdAt": "1991-10-20T05:07:17Z",
          "updatedAt": "1977-02-01T03:05:11Z",
          "deletedAt": "1977-03-14T08:33:05Z"
        }
      },
      "Storeroom": {
        "title": "Storeroom",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userManagerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "priority": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000064531052",
          "parentKey": "05000820899448",
          "siteKey": "05000892631829",
          "locationKey": "00000531440956",
          "userManagerKey": "04000459833685",
          "code": "67853151",
          "name": "string",
          "type": "string",
          "description": "Sint ut quo tenetur suscipit omnis laborum.",
          "priority": "string",
          "createdAt": "2023-12-09T02:01:28Z",
          "updatedAt": "2005-10-28T15:34:22Z",
          "deletedAt": "1985-05-13T20:53:45Z"
        }
      },
      "Account": {
        "title": "Account",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "activatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "expiresAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000860570378",
          "code": "48372749",
          "name": "string",
          "description": "Sapiente et aut illum vitae reiciendis earum ut.",
          "activatedAt": "2010-12-22T20:48:01Z",
          "expiresAt": "2017-08-13T16:10:21Z",
          "createdAt": "1970-03-04T15:12:19Z",
          "updatedAt": "2005-02-17T09:49:46Z",
          "deletedAt": "2016-03-02T01:32:19Z"
        }
      },
      "Team": {
        "title": "Team",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000697651469",
          "accountKey": "08000793250282",
          "code": "71780498",
          "name": "string",
          "description": "Odio labore at nisi est sunt occaecati assumenda.",
          "createdAt": "1973-06-18T23:26:03Z",
          "updatedAt": "2001-02-16T18:43:04Z",
          "deletedAt": "2023-04-20T10:24:44Z",
          "organizationKey": "08000793339235"
        }
      },
      "Labor": {
        "title": "Labor",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "locationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "costUomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000703299169",
          "organizationKeys": "string",
          "siteKeys": "[]",
          "locationKeys": "[]",
          "accountKey": "05000094476801",
          "vendorKey": "08000988339439",
          "userKey": "05000697537187",
          "teamKey": "03000152688120",
          "name": "string",
          "roleName": "string",
          "description": "Vero sapiente numquam debitis delectus.",
          "notes": "string",
          "isActive": "false",
          "costUomKey": "06000564805465",
          "currencyKey": "05000119526955",
          "createdAt": "1987-04-03T19:25:52Z",
          "updatedAt": "2021-01-12T08:21:57Z",
          "deletedAt": "1985-03-05T01:31:19Z"
        }
      },
      "User": {
        "title": "User",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "locationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000231145440",
          "organizationKey": "09000994448720",
          "siteKeys": "[]",
          "locationKeys": "[]",
          "name": "string",
          "roleName": "string",
          "description": "Quod non et similique omnis.",
          "notes": "string",
          "isActive": "string",
          "createdAt": "2019-04-10T18:29:03Z",
          "updatedAt": "1970-05-08T16:01:40Z",
          "deletedAt": "2011-06-13T12:04:53Z"
        }
      },
      "UnitOfMeasure": {
        "title": "UnitOfMeasure",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          }
        },
        "example": {
          "key": "09000688399929",
          "name": "string",
          "code": "25542004",
          "isActive": "false"
        }
      },
      "Company": {
        "title": "Company",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "billingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000862947025",
          "parentKey": "04000371887383",
          "name": "string",
          "code": "98259274",
          "addresses": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "2012-09-08T00:00:14Z",
              "updatedAt": "1986-02-21T11:37:35Z"
            }
          ],
          "billingAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "2012-12-14T23:30:57Z",
              "updatedAt": "2021-08-23T22:02:06Z"
            }
          ],
          "currencyKey": "05000610185828",
          "notes": "string",
          "createdAt": "1985-01-23T20:55:33Z",
          "updatedAt": "2004-02-28T11:47:15Z",
          "deletedAt": "2015-08-01T09:29:45Z"
        }
      },
      "Vendor": {
        "title": "Vendor",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "companyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000463309420",
          "name": "string",
          "code": "22278296",
          "companyKey": "06000588128495",
          "createdAt": "2005-03-13T09:49:55Z",
          "updatedAt": "1999-01-20T23:10:12Z",
          "deletedAt": "1974-05-02T21:55:44Z"
        }
      },
      "Customer": {
        "title": "Customer",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "companyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000833454094",
          "name": "string",
          "code": "39575371",
          "companyKey": "01000301414788",
          "createdAt": "2024-02-20T13:10:12Z",
          "updatedAt": "1977-01-17T08:21:30Z",
          "deletedAt": "2000-02-18T15:06:44Z"
        }
      },
      "Stock": {
        "title": "Stock",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "position": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "expiresAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000610633923",
          "productKey": "06000289438529",
          "materialKey": "08000846574245",
          "locationKey": "09000619673786",
          "storeroomKey": "09000856381240",
          "assetKey": "02000310894144",
          "position": "string",
          "uomKey": "07000303934474",
          "quantity": "string",
          "expiresAt": "1990-02-24T16:07:08Z",
          "createdAt": "1971-08-21T06:51:00Z",
          "updatedAt": "2002-06-10T18:37:24Z",
          "deletedAt": "2017-06-03T08:15:12Z"
        }
      },
      "POLineItem": {
        "title": "POLineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000738543169",
          "locationKey": "07000200109341",
          "vendorKey": "08000157456978",
          "assetKey": "06000215264340",
          "materialKey": "00000173367636",
          "productKey": "00000801955794",
          "statusKey": "02000446598456",
          "storeroomKey": "06000803900493",
          "lineNo": "string",
          "code": "15047526",
          "type": "string",
          "name": "string",
          "description": "Porro sed soluta ab totam dolores.",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "uomKey": "02000216972265",
          "currencyKey": "01000760090160",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "notes": "string",
          "deliveryAt": "1999-04-15T20:02:54Z",
          "dueAt": "1972-04-01T23:05:57Z",
          "updatedAt": "2013-09-08T08:37:57Z"
        }
      },
      "PurchaseOrder": {
        "title": "PurchaseOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "terms": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          }
        },
        "example": {
          "key": "05000978757595",
          "siteKey": "05000237022551",
          "orderDate": "2013-11-01T01:15:29Z",
          "vendorKey": "00000460379165",
          "orderNo": "string",
          "statusKey": "00000507768577",
          "title": "Officiis et voluptas fugiat mollitia.",
          "description": "Sapiente et velit magni sunt repellat.",
          "dueAt": "2013-08-28T18:42:59Z",
          "approvedAt": "2007-05-14T08:43:34Z",
          "completedAt": "2010-03-19T08:31:15Z",
          "shippingMethod": "string",
          "terms": "string",
          "notes": "string",
          "deliveryAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2009-08-26T20:40:28Z",
            "updatedAt": "1984-04-11T03:21:01Z"
          },
          "currencyKey": "04000009634686",
          "totalNetValue": "string",
          "totalGrossValue": "string",
          "updatedAt": "2015-06-07T19:19:49Z",
          "lineItems": [
            {
              "key": "09000299696746",
              "locationKey": "00000494154718",
              "vendorKey": "07000320514787",
              "assetKey": "05000248369960",
              "materialKey": "00000763509005",
              "productKey": "08000563468482",
              "statusKey": "08000783637014",
              "storeroomKey": "08000745076710",
              "lineNo": "string",
              "code": "08441836",
              "type": "string",
              "name": "string",
              "description": "Corporis incidunt quasi sed quo labore qui omnis.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "07000675799343",
              "currencyKey": "04000324009511",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1975-11-02T20:19:29Z",
              "dueAt": "1970-02-26T23:29:22Z",
              "updatedAt": "1973-05-22T14:34:04Z"
            }
          ]
        }
      },
      "PurchaseOrderCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PurchaseOrder"
        }
      },
      "LineItem": {
        "title": "LineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "cost": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "lineTaxValue": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000449596618",
          "locationKey": "05000530352170",
          "assetKey": "00000184259375",
          "statusKey": "04000397715395",
          "materialKey": "06000254074529",
          "storeroomKey": "07000299710028",
          "vendorKey": "00000949556206",
          "productKey": "05000005481832",
          "price": "string",
          "discount": "string",
          "deliveryAt": "1999-07-01T01:56:28Z",
          "lineNo": "string",
          "code": "38545269",
          "name": "string",
          "description": "Nemo natus odio exercitationem ab.",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "type": "string",
          "uomKey": "09000559238430",
          "cost": "string",
          "currencyKey": "07000878814811",
          "lineTotalValue": "string",
          "lineTaxValue": "string",
          "notes": "string",
          "dueAt": "2007-07-14T22:19:53Z",
          "createdAt": "1989-11-02T17:53:59Z",
          "updatedAt": "1986-09-10T23:24:40Z"
        }
      },
      "SupplyOption": {
        "title": "SupplyOption",
        "properties": {
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "price": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "uomKey": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "vendorKey": "09000243897733",
          "partNumber": "[]",
          "price": "[]",
          "uomKey": "08000861492587",
          "currencyKey": "02000390263989",
          "createdAt": "2016-12-28T19:05:38Z",
          "updatedAt": "2016-05-24T21:01:22Z"
        }
      },
      "Inventory": {
        "title": "Inventory",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "integer",
            "description": "Description",
            "nullable": false,
            "format": "integer"
          },
          "unitCost": {
            "type": "integer",
            "description": "Description",
            "nullable": false,
            "format": "integer"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000986784046",
          "code": "99047047",
          "name": "string",
          "quantity": 10,
          "unitCost": 10,
          "locationKey": "03000485283572",
          "updatedAt": "2014-05-15T02:35:14Z",
          "createdAt": "2016-12-24T11:58:57Z"
        }
      },
      "Dimension": [],
      "Material": {
        "title": "Material",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "parentKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isAssembly": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "supplyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplyOption"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "inventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inventory"
            }
          },
          "dimensions": {
            "type": "object",
            "$ref": "#/components/schemas/Dimension"
          }
        },
        "example": {
          "key": "07000982499127",
          "organizationKeys": "[]",
          "parentKeys": "[]",
          "assetKeys": "[]",
          "code": "91810205",
          "isAssembly": "false",
          "partNumber": "string",
          "name": "string",
          "description": "Nisi architecto ut maxime itaque laudantium.",
          "notes": "string",
          "criticality": "string",
          "isActive": "true",
          "manufacturerName": "string",
          "uomKey": "01000743199160",
          "supplyOptions": [
            {
              "vendorKey": "09000170053264",
              "partNumber": "[]",
              "price": "[]",
              "uomKey": "06000198797474",
              "currencyKey": "04000042957184",
              "createdAt": "2023-02-04T14:47:17Z",
              "updatedAt": "1996-06-15T07:59:53Z"
            }
          ],
          "createdAt": "1976-06-06T06:52:27Z",
          "updatedAt": "2015-01-08T07:45:20Z",
          "deletedAt": "1994-09-20T22:29:26Z",
          "inventories": [
            {
              "key": "02000443472429",
              "code": "44726119",
              "name": "string",
              "quantity": 10,
              "unitCost": 10,
              "locationKey": "02000935654976",
              "updatedAt": "1998-09-27T16:29:44Z",
              "createdAt": "2001-08-20T16:29:32Z"
            }
          ],
          "dimensions": []
        }
      },
      "MaterialItem": {
        "title": "MaterialItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assemblyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetTemplateKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "workOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "pmKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productionOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "drawingNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "positionNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "requiredQuantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000497136060",
          "materialKey": "03000260122908",
          "assemblyKey": "02000420212705",
          "assetKey": "03000858864252",
          "assetTemplateKey": "02000117165529",
          "workOrderKey": "09000495812562",
          "pmKey": "09000349598987",
          "productionOrderKey": "02000372896937",
          "partNumber": "string",
          "drawingNumber": "string",
          "positionNumber": "string",
          "documentKey": "09000254025456",
          "name": "string",
          "uomKey": "07000221384814",
          "quantity": "string",
          "requiredQuantity": "string",
          "createdAt": "2005-02-03T06:44:37Z",
          "updatedAt": "2015-10-02T17:15:13Z",
          "deletedAt": "1998-05-03T14:41:40Z"
        }
      },
      "Document": {
        "title": "Document",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "entityKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contentType": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000494938195",
          "entityKeys": "[]",
          "name": "string",
          "url": "string",
          "type": "string",
          "contentType": "string",
          "description": "Placeat voluptatum autem aut.",
          "notes": "string",
          "createdAt": "1991-04-24T11:32:15Z",
          "updatedAt": "2007-02-08T09:32:43Z"
        }
      },
      "Drawing": {
        "title": "Drawing",
        "properties": {
          "drawingNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "drawingPos": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "referenceNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "referencePos": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "example": {
          "drawingNo": "string",
          "drawingPos": "string",
          "referenceNo": "string",
          "referencePos": "string",
          "documents": [
            {
              "key": "00000751422337",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Totam corrupti tempora ipsum.",
              "notes": "string",
              "createdAt": "1988-07-23T15:12:07Z",
              "updatedAt": "1970-01-10T23:22:06Z"
            }
          ]
        }
      },
      "Part": {
        "title": "Part",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "parentKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "vendorKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isAssembly": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "minimumQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uom": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "cost": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "currency": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "inventory": {
            "type": "object",
            "$ref": "#/components/schemas/Inventory"
          },
          "drawings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Drawing"
            }
          }
        },
        "example": {
          "key": "00000924834061",
          "siteKeys": "[]",
          "parentKeys": "[]",
          "assetKeys": "[]",
          "vendorKeys": "string",
          "documents": [
            {
              "key": "00000301440966",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Ut impedit libero odit est ullam.",
              "notes": "string",
              "createdAt": "2002-11-12T03:40:17Z",
              "updatedAt": "1980-05-24T15:54:42Z"
            }
          ],
          "accountKey": "03000943900723",
          "code": "02782331",
          "isAssembly": "false",
          "partNumber": "string",
          "name": "string",
          "description": "Vero nobis qui repellendus maiores.",
          "notes": "string",
          "criticality": "string",
          "isActive": "false",
          "manufacturerName": "string",
          "minimumQuantity": "string",
          "uom": "string",
          "cost": "string",
          "currency": "string",
          "createdAt": "1992-06-13T18:08:05Z",
          "updatedAt": "1987-03-30T22:52:37Z",
          "deletedAt": "1987-08-03T23:28:10Z",
          "inventory": {
            "key": "09000429511250",
            "code": "27551707",
            "name": "string",
            "quantity": 10,
            "unitCost": 10,
            "locationKey": "00000301612113",
            "updatedAt": "1985-06-11T11:56:44Z",
            "createdAt": "1996-04-12T06:38:59Z"
          },
          "drawings": [
            {
              "drawingNo": "string",
              "drawingPos": "string",
              "referenceNo": "string",
              "referencePos": "string",
              "documents": [
                {
                  "key": "04000715960824",
                  "entityKeys": "[]",
                  "name": "string",
                  "url": "string",
                  "type": "string",
                  "contentType": "string",
                  "description": "Quasi at quaerat culpa voluptatem in numquam ex.",
                  "notes": "string",
                  "createdAt": "1976-11-22T03:50:13Z",
                  "updatedAt": "2021-08-28T04:56:17Z"
                }
              ]
            }
          ]
        }
      },
      "PartCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Part"
        }
      },
      "Asset": {
        "title": "Asset",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "makeCompanyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetTemplateKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isPhysical": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "criticality": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "makeName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "modelName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "activatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000232778713",
          "siteKey": "02000140933587",
          "parentKey": "05000963022309",
          "vendorKey": "02000675406411",
          "teamKey": "07000134395545",
          "documents": [
            {
              "key": "02000774246093",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Ut reprehenderit voluptas omnis ipsa molestiae.",
              "notes": "string",
              "createdAt": "1970-09-07T22:18:26Z",
              "updatedAt": "1971-06-30T10:51:35Z"
            }
          ],
          "locationKey": "06000506598179",
          "customerKey": "07000216598483",
          "accountKeys": "string",
          "name": "string",
          "description": "Vitae qui debitis aut.",
          "makeCompanyKey": "00000576357803",
          "assetTemplateKey": "00000018146780",
          "isPhysical": "true",
          "notes": "string",
          "categoryName": "string",
          "criticality": "string",
          "isActive": "true",
          "makeName": "string",
          "modelName": "string",
          "serialNumber": "string",
          "activatedAt": "2022-02-06T01:12:33Z",
          "deactivatedAt": "1985-09-20T08:46:14Z",
          "createdAt": "2024-05-10T08:33:30Z",
          "updatedAt": "1978-03-21T14:24:42Z",
          "deletedAt": "2015-09-03T12:15:06Z"
        }
      },
      "AssetDowntime": {
        "title": "AssetDowntime",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "startedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "endedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000356933685",
          "assetKey": "00000815564944",
          "description": "Reiciendis porro libero enim magnam tempore sit.",
          "startedAt": "2016-06-22T15:14:47Z",
          "endedAt": "1989-06-24T06:32:56Z",
          "categoryName": "string",
          "severity": "string",
          "notes": "string",
          "createdAt": "1977-10-26T10:07:22Z",
          "updatedAt": "1997-11-20T21:04:59Z"
        }
      },
      "Model": {
        "title": "Model",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "manufacturerName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000353647730",
          "siteKey": "09000055514093",
          "documents": [
            {
              "key": "05000736374432",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Amet quo doloribus accusantium et ducimus libero.",
              "notes": "string",
              "createdAt": "2010-04-04T02:16:16Z",
              "updatedAt": "1975-01-17T02:45:35Z"
            }
          ],
          "name": "string",
          "manufacturerName": "string",
          "createdAt": "2011-10-12T10:51:19Z",
          "updatedAt": "2016-04-12T19:06:27Z",
          "deletedAt": "1990-02-12T16:40:16Z"
        }
      },
      "Counter": {
        "title": "Counter",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lastReading": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "lastReadingAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000040257348",
          "siteKey": "03000788532212",
          "assetKeys": "string",
          "uomName": "string",
          "uomKey": "07000612659389",
          "lastReading": "string",
          "lastReadingAt": "1998-07-21T15:53:56Z",
          "createdAt": "2008-01-03T03:28:49Z",
          "updatedAt": "2013-06-25T10:03:48Z",
          "deletedAt": "2016-02-02T19:17:25Z"
        }
      },
      "CounterReading": {
        "title": "CounterReading",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "meterKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reading": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000962931745",
          "assetKey": "06000720337226",
          "meterKey": "09000153845793",
          "reading": "string",
          "createdAt": "1993-03-11T16:47:44Z"
        }
      },
      "WorkTrigger": {
        "title": "WorkTrigger",
        "properties": {
          "uom": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "interval": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "recurring": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "uom": "string",
          "type": "string",
          "interval": "string",
          "recurring": "string",
          "dueAt": "1974-03-25T15:30:13Z"
        }
      },
      "Task": {
        "title": "Task",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "priority": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "checkList": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          }
        },
        "example": {
          "key": "03000282882079",
          "parentKey": "08000305713824",
          "code": "78397453",
          "title": "Ut nemo officia nulla.",
          "description": "Et qui fugit eos est saepe reprehenderit.",
          "priority": "string",
          "checkList": "[]"
        }
      },
      "PreventiveMaintenance": {
        "title": "PreventiveMaintenance",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "assetTemplateKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "requiresMaterials": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTrigger"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000605746406",
          "siteKeys": "[]",
          "assetKeys": "[]",
          "teamKey": "01000906393962",
          "accountKey": "04000703270164",
          "title": "Ut enim sit cum iste.",
          "description": "Rerum ex rerum ut provident debitis.",
          "status": "string",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "documents": "[]",
          "assetTemplateKeys": "string",
          "statusKey": "07000956525423",
          "notes": "string",
          "dueAt": "2001-11-13T16:01:31Z",
          "categoryCode": "string",
          "requiresMaterials": "false",
          "triggers": [
            {
              "uom": "string",
              "type": "string",
              "interval": "string",
              "recurring": "string",
              "dueAt": "1976-06-02T08:02:23Z"
            }
          ],
          "tasks": [
            {
              "key": "07000656985669",
              "parentKey": "03000246724183",
              "code": "60977465",
              "title": "Optio est qui harum similique.",
              "description": "Vero aut qui illum.",
              "priority": "string",
              "checkList": "[]"
            }
          ],
          "createdAt": "1985-08-31T05:51:09Z",
          "updatedAt": "1991-12-21T02:14:05Z",
          "deletedAt": "1976-12-07T16:06:07Z"
        }
      },
      "CustomField": {
        "title": "CustomField",
        "properties": {
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "name": "string"
        }
      },
      "WorkOrder": {
        "title": "WorkOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "serviceRequestKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "pmKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userApprovedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetDowntimeKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "instructions": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scheduledAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "actualTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completionRemarks": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000292170804",
          "siteKey": "00000465026666",
          "assetKey": "01000809395978",
          "accountKey": "09000645166436",
          "title": "Eligendi est maiores doloremque provident.",
          "description": "Illum dignissimos ipsam possimus vero.",
          "serviceRequestKey": "09000245187920",
          "code": "06338695",
          "pmKey": "08000416001416",
          "teamKey": "01000845188443",
          "userApprovedKey": "06000564016669",
          "assetDowntimeKey": "04000802967132",
          "organizationKey": "04000720349686",
          "instructions": "string",
          "status": "string",
          "statusKey": "04000960788496",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "storeroomKey": "03000804767543",
          "notes": "string",
          "approvedAt": "1997-08-07T18:46:35Z",
          "dueAt": "2014-06-04T17:55:40Z",
          "scheduledAt": "2010-06-12T14:05:29Z",
          "actualTime": "string",
          "completedAt": "2005-06-24T09:56:09Z",
          "completionRemarks": "string",
          "tasks": [
            {
              "key": "06000775605839",
              "parentKey": "07000704784076",
              "code": "13632458",
              "title": "Ut laudantium sequi id cupiditate illo.",
              "description": "Et iste et quis ut corrupti.",
              "priority": "string",
              "checkList": "[]"
            }
          ],
          "documents": [
            {
              "key": "02000307706136",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Nam aut facilis dolorem porro unde nam eligendi.",
              "notes": "string",
              "createdAt": "1991-11-01T16:48:50Z",
              "updatedAt": "2012-07-14T08:25:24Z"
            }
          ],
          "createdAt": "1993-12-07T20:08:52Z",
          "updatedAt": "1983-11-20T09:01:43Z",
          "deletedAt": "2001-01-31T06:12:00Z"
        }
      },
      "WorkOrderCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WorkOrder"
        }
      },
      "ServiceRequest": {
        "title": "ServiceRequest",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "assetKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "workOrderKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "teamKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userRequestedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userApprovedKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "severity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "estimatedTime": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "roleName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "approvedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000604223680",
          "siteKey": "01000686986847",
          "locationKey": "05000680632900",
          "storeroomKey": "02000498690915",
          "assetKey": "09000935263925",
          "workOrderKey": "04000642768881",
          "teamKey": "07000326935641",
          "userRequestedKey": "06000972923764",
          "userApprovedKey": "01000243933537",
          "documents": [
            {
              "key": "07000989119729",
              "entityKeys": "[]",
              "name": "string",
              "url": "string",
              "type": "string",
              "contentType": "string",
              "description": "Optio recusandae velit eius tenetur.",
              "notes": "string",
              "createdAt": "2003-03-09T20:36:08Z",
              "updatedAt": "2002-02-02T14:26:31Z"
            }
          ],
          "title": "Corporis accusamus consequuntur occaecati ipsa.",
          "description": "Illum odit sunt maiores aut voluptas sed.",
          "statusKey": "06000979042375",
          "severity": "string",
          "estimatedTime": "string",
          "roleName": "string",
          "categoryName": "string",
          "notes": "string",
          "approvedAt": "2013-07-21T02:40:48Z",
          "dueAt": "1982-06-02T00:34:25Z",
          "createdAt": "1985-06-16T11:39:12Z",
          "updatedAt": "1982-09-28T09:31:49Z",
          "deletedAt": "1993-08-29T06:40:06Z"
        }
      },
      "ServiceRequestCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ServiceRequest"
        }
      },
      "Status": {
        "title": "Status",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "subCode": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scope": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000477388761",
          "organizationKey": "03000515164089",
          "parentKey": "03000950211211",
          "name": "string",
          "code": "89489987",
          "subCode": "string",
          "scope": "string",
          "isActive": "true",
          "createdAt": "1979-06-23T06:05:15Z",
          "updatedAt": "1991-12-15T13:31:55Z",
          "deletedAt": "1995-08-05T11:00:06Z"
        }
      },
      "Tax": {
        "title": "Tax",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "organizationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "taxPercentage": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000737786994",
          "organizationKey": "09000741964513",
          "name": "string",
          "type": "string",
          "taxPercentage": "string",
          "isActive": "true",
          "createdAt": "1996-07-13T11:33:17Z",
          "updatedAt": "2020-04-15T19:32:01Z",
          "deletedAt": "2004-06-07T23:23:13Z"
        }
      },
      "Currency": {
        "title": "Currency",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isBase": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isActive": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000009944242",
          "name": "string",
          "code": "35694397",
          "isBase": "string",
          "isActive": "string",
          "createdAt": "2016-01-12T17:19:40Z",
          "updatedAt": "1991-07-21T20:22:44Z",
          "deletedAt": "2002-08-11T07:15:46Z"
        }
      },
      "ExchangeRate": {
        "title": "ExchangeRate",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "baseCurrencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "rate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "07000899235152",
          "currencyKey": "04000658218471",
          "baseCurrencyKey": "06000877814528",
          "rate": "string",
          "createdAt": "2006-06-21T01:44:59Z"
        }
      },
      "Product": {
        "title": "Product",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "groupKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Description",
            "nullable": false,
            "format": "boolean"
          },
          "taxKeys": {
            "type": "array",
            "description": "Description",
            "nullable": false,
            "format": "array"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "sku": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "upc": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "ean": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "isbn": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "partNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reorderLevel": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "dimensions": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "supplyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplyOption"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000761074605",
          "groupKey": "06000863785625",
          "uomKey": "04000609497719",
          "code": "75909567",
          "name": "string",
          "description": "Illum earum et tempora.",
          "type": "string",
          "isTaxable": "true",
          "taxKeys": "[]",
          "status": "string",
          "price": "string",
          "currencyKey": "08000516577531",
          "quantity": "string",
          "sku": "string",
          "upc": "string",
          "ean": "string",
          "isbn": "string",
          "partNumber": "string",
          "reorderLevel": "string",
          "dimensions": "string",
          "supplyOptions": [
            {
              "vendorKey": "06000154231731",
              "partNumber": "[]",
              "price": "[]",
              "uomKey": "01000439485430",
              "currencyKey": "08000136366808",
              "createdAt": "1979-12-12T03:25:11Z",
              "updatedAt": "1991-05-02T04:29:18Z"
            }
          ],
          "createdAt": "2017-01-31T00:41:48Z",
          "updatedAt": "2006-11-27T11:39:19Z",
          "deletedAt": "1991-11-23T07:05:56Z"
        }
      },
      "SalesLineItem": {
        "title": "SalesLineItem",
        "properties": {
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "quantityRequired": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "taxKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "productKey": "04000902776391",
          "locationKey": "00000313817173",
          "storeroomKey": "07000749351722",
          "quantity": "string",
          "quantityRequired": "string",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "taxKey": "05000192683500"
        }
      },
      "SalesOrder": {
        "title": "SalesOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shipmentDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "contactPerson": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesLineItem"
            }
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyRate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000217876368",
          "customerKey": "03000155148376",
          "userKey": "06000470037748",
          "code": "59051138",
          "orderNumber": "string",
          "date": "string",
          "statusKey": "01000988796889",
          "shipmentDate": "2003-11-21T06:52:47Z",
          "contactPerson": "string",
          "lines": [
            {
              "productKey": "01000618509267",
              "locationKey": "09000484690834",
              "storeroomKey": "01000344480770",
              "quantity": "string",
              "quantityRequired": "string",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "taxKey": "08000398379903"
            }
          ],
          "currencyKey": "04000859437098",
          "currencyRate": "string",
          "createdAt": "2008-02-18T19:16:39Z",
          "updatedAt": "1995-07-01T04:18:16Z",
          "deletedAt": "2015-04-07T15:00:38Z"
        }
      },
      "Project": {
        "title": "Project",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "budget": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "06000875400482",
          "siteKey": "02000510761275",
          "name": "string",
          "accountKey": "03000435433495",
          "statusKey": "03000037734061",
          "budget": "string",
          "createdAt": "1973-08-08T23:11:56Z",
          "updatedAt": "2006-09-15T10:38:48Z",
          "deletedAt": "2017-08-15T06:27:50Z"
        }
      },
      "InvoiceLineItem": {
        "title": "InvoiceLineItem",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineRef": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "receivedQuantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "discount": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineTotalValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deliveryAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "07000727031275",
          "locationKey": "01000388320712",
          "vendorKey": "09000835549101",
          "productKey": "00000506272707",
          "statusKey": "05000294971910",
          "storeroomKey": "04000036728321",
          "currencyKey": "01000660661010",
          "lineNo": "string",
          "code": "61968370",
          "lineRef": "string",
          "quantity": "string",
          "receivedQuantity": "string",
          "uomKey": "01000062296462",
          "price": "string",
          "discount": "string",
          "lineTaxValue": "string",
          "lineTotalValue": "string",
          "notes": "string",
          "deliveryAt": "1995-03-25T05:53:15Z",
          "createdAt": "1977-05-22T21:09:13Z",
          "updatedAt": "2011-01-16T05:00:44Z",
          "deletedAt": "2013-12-03T23:59:48Z"
        }
      },
      "Invoice": {
        "title": "Invoice",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "dueDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "receivedDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000128643298",
          "customerKey": "00000795041939",
          "invoiceNumber": "string",
          "vendorKey": "01000082648370",
          "poKey": "01000523678831",
          "statusKey": "03000124364331",
          "lineItems": [
            {
              "key": "04000464448015",
              "locationKey": "01000428056031",
              "vendorKey": "08000088601093",
              "productKey": "06000037623887",
              "statusKey": "02000032308520",
              "storeroomKey": "04000645278022",
              "currencyKey": "09000553607644",
              "lineNo": "string",
              "code": "31795845",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "02000723093440",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1971-03-02T12:14:27Z",
              "createdAt": "2007-10-08T13:41:40Z",
              "updatedAt": "2022-04-05T00:34:23Z",
              "deletedAt": "1978-02-14T11:48:25Z"
            }
          ],
          "invoiceDate": "2001-03-29T23:09:25Z",
          "dueDate": "1973-09-24T01:39:39Z",
          "receivedDate": "1976-06-24T09:07:36Z",
          "currencyKey": "05000056777930",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "2022-11-10T16:23:06Z",
          "updatedAt": "2005-12-10T10:45:59Z",
          "deletedAt": "2012-08-28T20:47:38Z"
        }
      },
      "InvoiceCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Invoice"
        }
      },
      "Receipt": {
        "title": "Receipt",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "00000330050092",
          "siteKey": "07000399459298",
          "vendorKey": "01000733610017",
          "poKey": "04000452048685",
          "code": "66857396",
          "orderNo": "string",
          "orderDate": "2001-06-26T09:09:40Z",
          "title": "Occaecati libero aperiam dolor adipisci.",
          "description": "Aut ut quisquam saepe fugiat eveniet iusto.",
          "completedAt": "2005-12-26T00:26:08Z",
          "shippingMethod": "string",
          "notes": "string",
          "currencyKey": "07000099184899",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "lineItems": [
            {
              "key": "05000281344611",
              "locationKey": "05000272898105",
              "vendorKey": "02000789093756",
              "assetKey": "06000994406140",
              "materialKey": "04000525012539",
              "productKey": "02000458040693",
              "statusKey": "09000532785423",
              "storeroomKey": "00000172442776",
              "lineNo": "string",
              "code": "71572543",
              "type": "string",
              "name": "string",
              "description": "Sapiente magni dolores accusantium qui et.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "03000475301953",
              "currencyKey": "00000917164038",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1978-07-28T12:27:56Z",
              "dueAt": "2020-12-02T15:05:50Z",
              "updatedAt": "2020-10-08T02:35:23Z"
            }
          ],
          "createdAt": "2001-04-08T20:04:06Z",
          "updatedAt": "1993-08-13T05:09:24Z"
        }
      },
      "BOMLineItem": {
        "title": "BOMLineItem",
        "properties": {
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "uomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "price": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "locationKey": "04000663917620",
          "materialKey": "04000616015318",
          "productKey": "07000609820266",
          "currencyKey": "03000877830299",
          "description": "Repellat provident suscipit est nisi qui.",
          "quantity": "string",
          "uomKey": "02000862127461",
          "notes": "string",
          "price": "string",
          "createdAt": "2006-06-21T18:53:54Z",
          "updatedAt": "2018-01-01T06:02:05Z"
        }
      },
      "BillOfMaterial": {
        "title": "BillOfMaterial",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "projectKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BOMLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000527753870",
          "siteKey": "03000272219790",
          "name": "string",
          "projectKey": "07000217848032",
          "type": "string",
          "lineItems": [
            {
              "locationKey": "00000493266188",
              "materialKey": "00000411065091",
              "productKey": "02000994423013",
              "currencyKey": "01000321625475",
              "description": "Quis architecto est voluptatem porro repudiandae.",
              "quantity": "string",
              "uomKey": "06000306035530",
              "notes": "string",
              "price": "string",
              "createdAt": "2011-01-04T08:14:44Z",
              "updatedAt": "1983-09-14T04:59:33Z"
            }
          ],
          "createdAt": "1973-12-22T04:19:12Z",
          "updatedAt": "1992-10-08T08:32:19Z"
        }
      },
      "ProductionOrder": {
        "title": "ProductionOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "note": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "05000809411062",
          "siteKey": "04000612226295",
          "statusKey": "07000332842500",
          "locationKey": "01000194276539",
          "orderNo": "string",
          "orderDate": "1992-07-24T22:49:02Z",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "note": "string",
          "lineItems": [
            {
              "key": "04000322843132",
              "locationKey": "03000078496447",
              "vendorKey": "09000206384429",
              "assetKey": "05000411656747",
              "materialKey": "01000075618289",
              "productKey": "03000073516751",
              "statusKey": "04000909686518",
              "storeroomKey": "00000637598582",
              "lineNo": "string",
              "code": "50305865",
              "type": "string",
              "name": "string",
              "description": "Et est ea delectus saepe ipsam et distinctio.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "01000231064613",
              "currencyKey": "04000252481718",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "2004-10-06T23:58:55Z",
              "dueAt": "2014-12-07T12:17:33Z",
              "updatedAt": "2016-01-10T20:45:56Z"
            }
          ],
          "createdAt": "1977-09-04T21:33:16Z",
          "updatedAt": "1995-09-05T11:51:25Z",
          "deletedAt": "2007-04-07T19:18:56Z"
        }
      },
      "Receiving": {
        "title": "Receiving",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "poKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNo": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderDate": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "title": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "completedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "currencyKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "08000715548717",
          "siteKey": "02000629655049",
          "vendorKey": "08000278820765",
          "poKey": "01000779631523",
          "code": "32540345",
          "orderNo": "string",
          "orderDate": "1980-04-03T16:14:29Z",
          "title": "Consectetur quos animi nihil doloribus et.",
          "description": "Et aut maxime et est.",
          "completedAt": "1976-12-31T17:34:47Z",
          "shippingMethod": "string",
          "notes": "string",
          "currencyKey": "01000804558797",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "lineItems": [
            {
              "key": "02000792450532",
              "locationKey": "01000047260202",
              "vendorKey": "05000994795265",
              "assetKey": "08000637175752",
              "materialKey": "07000221902124",
              "productKey": "04000643411924",
              "statusKey": "08000327807919",
              "storeroomKey": "09000896168579",
              "lineNo": "string",
              "code": "48891981",
              "type": "string",
              "name": "string",
              "description": "Nam impedit sit maiores.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "09000220831215",
              "currencyKey": "08000458382098",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1984-10-29T01:32:54Z",
              "dueAt": "2015-12-17T06:56:45Z",
              "updatedAt": "1991-11-21T13:03:35Z"
            }
          ],
          "createdAt": "2012-03-26T14:29:44Z",
          "updatedAt": "2016-03-19T08:17:29Z"
        }
      },
      "RequestForQuotation": {
        "title": "RequestForQuotation",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "documentKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000811967682",
          "siteKey": "05000276798381",
          "vendorKey": "03000575721677",
          "accountKey": "08000107771493",
          "code": "52964312",
          "statusKey": "03000322040233",
          "shippingMethod": "string",
          "shippingAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1970-03-08T13:21:21Z",
              "updatedAt": "1992-01-27T17:51:21Z"
            }
          ],
          "lineItems": [
            {
              "key": "01000877971666",
              "locationKey": "04000109788606",
              "vendorKey": "08000826307081",
              "assetKey": "01000956482756",
              "materialKey": "01000718391600",
              "productKey": "08000966494691",
              "statusKey": "06000380783701",
              "storeroomKey": "00000431619251",
              "lineNo": "string",
              "code": "15038203",
              "type": "string",
              "name": "string",
              "description": "Qui dignissimos sit aliquid est et eos et.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "08000230144286",
              "currencyKey": "01000635150848",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "2021-05-26T05:42:25Z",
              "dueAt": "1990-12-28T22:25:55Z",
              "updatedAt": "2023-08-18T04:47:31Z"
            }
          ],
          "documentKeys": "string",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "2022-11-23T04:16:10Z",
          "updatedAt": "1999-05-17T05:54:51Z",
          "deletedAt": "2016-06-28T19:20:58Z"
        }
      },
      "PurchaseRequisition": {
        "title": "PurchaseRequisition",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "siteKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "requesterKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "accountKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POLineItem"
            }
          },
          "documentKeys": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalNetValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalTaxValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "totalGrossValue": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "01000683703156",
          "siteKey": "07000582598998",
          "requesterKey": "05000431804344",
          "accountKey": "05000854490647",
          "code": "94686371",
          "statusKey": "01000993476565",
          "shippingMethod": "string",
          "shippingAddress": {
            "countryName": "string",
            "addressLines": "string",
            "city": "string",
            "postCode": "string",
            "phone": "string",
            "email": "string",
            "notes": "string",
            "createdAt": "2022-08-22T01:49:14Z",
            "updatedAt": "2023-09-15T10:46:50Z"
          },
          "lineItems": [
            {
              "key": "05000646854392",
              "locationKey": "00000139928628",
              "vendorKey": "04000676359274",
              "assetKey": "06000513622692",
              "materialKey": "05000304227906",
              "productKey": "08000077053834",
              "statusKey": "01000640862010",
              "storeroomKey": "09000975389745",
              "lineNo": "string",
              "code": "48205306",
              "type": "string",
              "name": "string",
              "description": "Vel suscipit rerum porro numquam possimus.",
              "lineRef": "string",
              "quantity": "string",
              "receivedQuantity": "string",
              "uomKey": "06000282841737",
              "currencyKey": "01000915720766",
              "price": "string",
              "discount": "string",
              "lineTaxValue": "string",
              "lineTotalValue": "string",
              "notes": "string",
              "deliveryAt": "1974-12-21T09:12:47Z",
              "dueAt": "1994-07-26T12:13:28Z",
              "updatedAt": "1992-09-01T11:01:01Z"
            }
          ],
          "documentKeys": "string",
          "totalNetValue": "string",
          "totalTaxValue": "string",
          "totalGrossValue": "string",
          "createdAt": "1972-08-15T10:55:43Z",
          "updatedAt": "2013-02-19T18:34:00Z",
          "deletedAt": "2011-06-29T00:45:49Z"
        }
      },
      "ProductGroup": {
        "title": "ProductGroup",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "parentKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000678062857",
          "parentKey": "08000977312028",
          "code": "94678178",
          "name": "string",
          "description": "Voluptatibus qui aperiam iste corporis.",
          "updatedAt": "2019-02-10T15:24:17Z",
          "createdAt": "2010-01-03T02:00:53Z",
          "deletedAt": "2004-08-25T20:22:04Z"
        }
      },
      "StockLineItem": {
        "title": "StockLineItem",
        "properties": {
          "productKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "materialKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "quantity": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "productKey": "09000728926214",
          "materialKey": "09000279680815",
          "quantity": "string",
          "locationKey": "02000101839208",
          "storeroomKey": "08000057909516"
        }
      },
      "StockTransfer": {
        "title": "StockTransfer",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "fromLocationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "toLocationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "fromStoreroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "toStoreroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "code": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000903126171",
          "fromLocationKey": "03000309383959",
          "toLocationKey": "09000993926717",
          "fromStoreroomKey": "09000873304730",
          "toStoreroomKey": "04000858259170",
          "statusKey": "05000975809313",
          "code": "31802444",
          "date": "string",
          "lineItems": [
            {
              "productKey": "05000453530693",
              "materialKey": "06000200027084",
              "quantity": "string",
              "locationKey": "07000174521692",
              "storeroomKey": "04000199447011"
            }
          ],
          "orderNumber": "string",
          "createdAt": "1977-09-13T21:11:26Z",
          "updatedAt": "1978-02-01T15:04:51Z",
          "deletedAt": "2016-01-26T14:51:01Z"
        }
      },
      "StockAdjustment": {
        "title": "StockAdjustment",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "locationKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "storeroomKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "reason": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "adjustmentNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "total": {
            "type": "object",
            "description": "Description",
            "nullable": false,
            "format": "object"
          },
          "type": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "03000182908993",
          "locationKey": "03000022446618",
          "storeroomKey": "09000488586072",
          "userKey": "04000720111651",
          "date": "string",
          "reason": "string",
          "lineItems": [
            {
              "productKey": "08000548093225",
              "materialKey": "00000737018882",
              "quantity": "string",
              "locationKey": "00000812202771",
              "storeroomKey": "04000490815370"
            }
          ],
          "adjustmentNumber": "string",
          "total": "string",
          "type": "string",
          "createdAt": "1989-02-19T05:01:32Z",
          "updatedAt": "2014-10-31T15:20:29Z",
          "deletedAt": "1995-01-30T00:35:04Z"
        }
      },
      "ShipmentOrder": {
        "title": "ShipmentOrder",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "userKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "customerKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "vendorKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "orderNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shipmentNumber": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "date": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "statusKey": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockLineItem"
            }
          },
          "destinationAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "carrierName": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "shippingMethod": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "notes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "deletedAt": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "09000665708650",
          "userKey": "03000271428291",
          "customerKey": "04000672026181",
          "vendorKey": "04000100724234",
          "orderNumber": "string",
          "shipmentNumber": "string",
          "date": "string",
          "statusKey": "08000010248441",
          "lineItems": [
            {
              "productKey": "09000617827392",
              "materialKey": "05000432869270",
              "quantity": "string",
              "locationKey": "08000025379032",
              "storeroomKey": "07000478672267"
            }
          ],
          "destinationAddress": [
            {
              "countryName": "string",
              "addressLines": "string",
              "city": "string",
              "postCode": "string",
              "phone": "string",
              "email": "string",
              "notes": "string",
              "createdAt": "1983-03-13T10:15:47Z",
              "updatedAt": "2012-11-28T14:55:49Z"
            }
          ],
          "carrierName": "string",
          "shippingMethod": "string",
          "notes": "string",
          "createdAt": "1975-07-12T22:44:23Z",
          "updatedAt": "1970-03-14T14:23:05Z",
          "deletedAt": "2014-06-22T16:45:00Z"
        }
      },
      "Integration": {
        "title": "Integration",
        "properties": {
          "id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "company_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "provider": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "sync_status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "sync_updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "id": "string",
          "company_name": "string",
          "email": "string",
          "provider": "string",
          "updated_at": "string",
          "sync_status": "string",
          "sync_updated_at": "string"
        }
      },
      "Connection": {
        "title": "Connection",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "integration_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "redirect": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scopes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "user_metadata": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "client_id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "created_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "connected_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "04000430340597",
          "name": "string",
          "email": "string",
          "status": "string",
          "integration_name": "string",
          "redirect": "string",
          "scopes": "string",
          "user_metadata": "string",
          "client_id": "string",
          "updated_at": "string",
          "created_at": "string",
          "connected_at": "string"
        }
      },
      "ConnectionStoreCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectionStore"
        }
      },
      "ConnectionStore": {
        "title": "ConnectionStore",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "refresh_token": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "expires_in": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "access_token": "string",
          "refresh_token": "string",
          "expires_in": "string"
        }
      },
      "ConnectionMetadata": {
        "title": "ConnectionMetadata",
        "properties": {
          "key": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "integration_name": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "redirect": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "scopes": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "user_metadata": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "client_id": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "created_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          },
          "connected_at": {
            "type": "string",
            "description": "Description",
            "nullable": false,
            "format": "string"
          }
        },
        "example": {
          "key": "02000437497895",
          "name": "string",
          "email": "string",
          "status": "string",
          "integration_name": "string",
          "redirect": "string",
          "scopes": "string",
          "user_metadata": "string",
          "client_id": "string",
          "updated_at": "string",
          "created_at": "string",
          "connected_at": "string"
        }
      },
      "ConnectionMetadataCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectionMetadata"
        }
      },
      "Passthrough": []
    }
  }
}
